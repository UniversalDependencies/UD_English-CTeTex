# newdoc id = 2001_npac_6.4.3_R6-30.1
# sent_id = 255
# text = The interoperable interface model defining both the NPAC to Local SMS and the SOA to NPAC SMS shall be specified in terms of ISO 10165-4, "Guideline for the Definition of Managed Objects (GDMO)”.
1	The	_	DET	_	_	4	det	_	_
2	interoperable	_	ADJ	_	_	3	amod	_	_
3	interface	_	NOUN	_	_	4	compound	_	_
4	model	_	NOUN	_	_	20	nsubj:pass	_	_
5	defining	_	VERB	_	_	4	acl	_	_
6	both	_	CCONJ	_	_	8	cc	_	_
7	the	_	DET	_	_	8	det	_	_
8	NPAC	_	PROPN	_	_	5	obj	_	_
9	to	_	ADP	_	_	11	case	_	_
10	Local	_	ADJ	_	_	11	amod	_	_
11	SMS	_	NOUN	_	_	8	nmod	_	_
12	and	_	CCONJ	_	_	14	cc	_	_
13	the	_	DET	_	_	14	det	_	_
14	SOA	_	NOUN	_	_	8	conj	_	_
15	to	_	ADP	_	_	17	case	_	_
16	NPAC	_	PROPN	_	_	17	nmod	_	_
17	SMS	_	NOUN	_	_	14	nmod	_	_
18	shall	_	AUX	_	_	20	aux	_	_
19	be	_	AUX	_	_	20	aux:pass	_	_
20	specified	_	VERB	_	_	0	root	_	_
21	in	_	ADP	_	_	22	case	_	_
22	terms	_	NOUN	_	_	20	obl	_	_
23	of	_	ADP	_	_	24	case	_	_
24	ISO	_	PROPN	_	_	22	nmod	_	_
25	10165-4	_	NUM	_	_	24	flat	_	SpaceAfter=No
26	,	_	PUNCT	_	_	28	punct	_	_
27	"	_	PUNCT	_	_	28	punct	_	SpaceAfter=No
28	Guideline	_	NOUN	_	_	24	appos	_	_
29	for	_	ADP	_	_	31	case	_	_
30	the	_	DET	_	_	31	det	_	_
31	Definition	_	INTJ	_	_	28	nmod	_	_
32	of	_	ADP	_	_	34	case	_	_
33	Managed	_	ADJ	_	_	34	amod	_	_
34	Objects	_	NOUN	_	_	31	nmod	_	_
35	(	_	PUNCT	_	_	36	punct	_	SpaceAfter=No
36	GDMO	_	PROPN	_	_	28	appos	_	SpaceAfter=No
37	)	_	PUNCT	_	_	36	punct	_	SpaceAfter=No
38	”	_	PUNCT	_	_	28	punct	_	SpaceAfter=No
39	.	_	PUNCT	_	_	20	punct	_	_

# newdoc id = 2002_evlaback_3.1.1.1
# sent_id = 199
# text = Lag Frames – The BE shall receive LTA or Speed Dump Lag Frames from the Correlator.
1	Lag	_	NOUN	_	_	2	nmod	_	_
2	Frames	_	NOUN	_	_	0	root	_	_
3	–	_	PUNCT	_	_	2	punct	_	_
4	The	_	DET	_	_	5	det	_	_
5	BE	_	NOUN	_	_	7	nsubj	_	_
6	shall	_	AUX	_	_	7	aux	_	_
7	receive	_	VERB	_	_	2	parataxis	_	_
8	LTA	_	PROPN	_	_	7	obj	_	_
9	or	_	CCONJ	_	_	13	cc	_	_
10	Speed	_	NOUN	_	_	11	compound	_	_
11	Dump	_	NOUN	_	_	12	nmod	_	_
12	Lag	_	NOUN	_	_	13	nmod	_	_
13	Frames	_	NOUN	_	_	8	conj	_	_
14	from	_	ADP	_	_	16	case	_	_
15	the	_	DET	_	_	16	det	_	_
16	Correlator	_	NOUN	_	_	7	obl	_	SpaceAfter=No
17	.	_	PUNCT	_	_	2	punct	_	_

# sent_id = 200
# text = For a detailed description of the two dump formats see Reference 8, pages 69 to 71.
1	For	_	ADP	_	_	4	case	_	_
2	a	_	DET	_	_	4	det	_	_
3	detailed	_	ADJ	_	_	4	amod	_	_
4	description	_	NOUN	_	_	10	obl	_	_
5	of	_	ADP	_	_	9	case	_	_
6	the	_	DET	_	_	9	det	_	_
7	two	_	NUM	_	_	9	nummod	_	_
8	dump	_	NOUN	_	_	9	nmod	_	_
9	formats	_	NOUN	_	_	4	nmod	_	_
10	see	_	VERB	_	_	0	root	_	_
11	Reference	_	NOUN	_	_	10	obj	_	_
12	8	_	NUM	_	_	11	flat	_	SpaceAfter=No
13	,	_	PUNCT	_	_	14	punct	_	_
14	pages	_	NOUN	_	_	11	nmod	_	_
15	69	_	NUM	_	_	14	flat	_	_
16	to	_	ADP	_	_	17	case	_	_
17	71	_	NUM	_	_	15	nmod	_	SpaceAfter=No
18	.	_	PUNCT	_	_	10	punct	_	_

# sent_id = 201
# text = This will most likely be in the form of one or more frames per UDP/IP packet
1	This	_	PRON	_	_	8	nsubj	_	_
2	will	_	AUX	_	_	8	aux	_	_
3	most	_	ADV	_	_	4	advmod	_	_
4	likely	_	ADV	_	_	8	advmod	_	_
5	be	_	AUX	_	_	8	cop	_	_
6	in	_	ADP	_	_	8	case	_	_
7	the	_	DET	_	_	8	det	_	_
8	form	_	NOUN	_	_	0	root	_	_
9	of	_	ADP	_	_	13	case	_	_
10	one	_	NUM	_	_	13	nummod	_	_
11	or	_	CCONJ	_	_	12	cc	_	_
12	more	_	ADV	_	_	10	conj	_	_
13	frames	_	NOUN	_	_	8	nmod	_	_
14	per	_	ADP	_	_	18	case	_	_
15	UDP	_	PROPN	_	_	18	nmod	_	SpaceAfter=No
16	/	_	SYM	_	_	17	cc	_	SpaceAfter=No
17	IP	_	PROPN	_	_	15	conj	_	_
18	packet	_	NOUN	_	_	13	nmod	_	_

# newdoc id = 2005_pontis_UC-16_16.7
# sent_id = 63
# text = The system shall strictly separate transient or volatile batch operation control records – e.g. bridge records to be included in a report – from more static control record – e.g. currently checked-out bridges.19
1	The	_	DET	_	_	2	det	_	_
2	system	_	NOUN	_	_	5	nsubj	_	_
3	shall	_	AUX	_	_	5	aux	_	_
4	strictly	_	ADV	_	_	5	advmod	_	_
5	separate	_	VERB	_	_	0	root	_	_
6	transient	_	ADJ	_	_	12	amod	_	_
7	or	_	CCONJ	_	_	8	cc	_	_
8	volatile	_	ADJ	_	_	6	conj	_	_
9	batch	_	NOUN	_	_	10	compound	_	_
10	operation	_	NOUN	_	_	12	nmod	_	_
11	control	_	NOUN	_	_	12	compound	_	_
12	records	_	NOUN	_	_	5	obj	_	_
13	–	_	PUNCT	_	_	16	punct	_	_
14	e.g.	_	ADV	_	_	16	parataxis	_	_
15	bridge	_	NOUN	_	_	16	nmod	_	_
16	records	_	NOUN	_	_	12	appos	_	_
17	to	_	PART	_	_	19	mark	_	_
18	be	_	AUX	_	_	19	aux:pass	_	_
19	included	_	VERB	_	_	16	acl	_	_
20	in	_	ADP	_	_	22	case	_	_
21	a	_	DET	_	_	22	det	_	_
22	report	_	NOUN	_	_	19	obl	_	_
23	–	_	PUNCT	_	_	16	punct	_	_
24	from	_	ADP	_	_	28	case	_	_
25	more	_	ADV	_	_	26	advmod	_	_
26	static	_	ADJ	_	_	28	amod	_	_
27	control	_	NOUN	_	_	28	compound	_	_
28	record	_	NOUN	_	_	5	obl	_	_
29	–	_	PUNCT	_	_	35	punct	_	_
30	e.g.	_	ADV	_	_	35	parataxis	_	_
31	currently	_	ADV	_	_	32	advmod	_	_
32	checked	_	VERB	_	_	35	amod	_	SpaceAfter=No
33	-	_	PUNCT	_	_	34	punct	_	SpaceAfter=No
34	out	_	ADP	_	_	32	compound	_	_
35	bridges	_	NOUN	_	_	28	appos	_	SpaceAfter=No
36	.	_	PUNCT	_	_	5	punct	_	SpaceAfter=No
37	19	_	NUM	_	_	5	parataxis	_	_

# newdoc id = 2001_hats_3.3.1_SRSreq160
# sent_id = 143
# text = The complexity of the text search algorithm shall not exceed O(n2) for n nodes.
1	The	_	DET	_	_	2	det	_	_
2	complexity	_	NOUN	_	_	10	nsubj	_	_
3	of	_	ADP	_	_	7	case	_	_
4	the	_	DET	_	_	7	det	_	_
5	text	_	NOUN	_	_	6	compound	_	_
6	search	_	NOUN	_	_	7	compound	_	_
7	algorithm	_	NOUN	_	_	2	nmod	_	_
8	shall	_	AUX	_	_	10	aux	_	_
9	not	_	PART	_	_	10	advmod	_	_
10	exceed	_	VERB	_	_	0	root	_	_
11	O	_	SYM	_	_	10	obj	_	SpaceAfter=No
12	(	_	PUNCT	_	_	11	punct	_	SpaceAfter=No
13	n	_	NUM	_	_	11	flat	_	SpaceAfter=No|Foreign=Yes
14	2	_	NUM	_	_	11	flat	_	SpaceAfter=No|Foreign=Yes
15	)	_	PUNCT	_	_	11	punct	_	_
16	for	_	ADP	_	_	18	case	_	_
17	n	_	NUM	_	_	18	nummod	_	_
18	nodes	_	NOUN	_	_	11	nmod	_	SpaceAfter=No
19	.	_	PUNCT	_	_	10	punct	_	_

# newdoc id = 2010_home1.3_4.2.5
# sent_id = 178
# text = The system shall be compatible with a centralized HVAC (Heating, Ventilation and Air Conditioning) systems: gas, oil, electricity, solar, or a combination of two or more.
1	The	_	DET	_	_	2	det	_	_
2	system	_	NOUN	_	_	5	nsubj	_	_
3	shall	_	AUX	_	_	5	aux	_	_
4	be	_	AUX	_	_	5	cop	_	_
5	compatible	_	ADJ	_	_	0	root	_	_
6	with	_	ADP	_	_	18	case	_	_
7	a	_	DET	_	_	18	det	_	_
8	centralized	_	ADJ	_	_	18	amod	_	_
9	HVAC	_	PROPN	_	_	18	compound	_	_
10	(	_	PUNCT	_	_	11	punct	_	SpaceAfter=No
11	Heating	_	NOUN	_	_	9	appos	_	SpaceAfter=No
12	,	_	PUNCT	_	_	13	punct	_	_
13	Ventilation	_	NOUN	_	_	11	conj	_	_
14	and	_	CCONJ	_	_	16	cc	_	_
15	Air	_	NOUN	_	_	16	compound	_	_
16	Conditioning	_	NOUN	_	_	11	conj	_	SpaceAfter=No
17	)	_	PUNCT	_	_	11	punct	_	_
18	systems	_	NOUN	_	_	5	obl	_	SpaceAfter=No
19	:	_	PUNCT	_	_	20	punct	_	_
20	gas	_	NOUN	_	_	18	appos	_	SpaceAfter=No
21	,	_	PUNCT	_	_	22	punct	_	_
22	oil	_	NOUN	_	_	20	conj	_	SpaceAfter=No
23	,	_	PUNCT	_	_	24	punct	_	_
24	electricity	_	NOUN	_	_	20	conj	_	SpaceAfter=No
25	,	_	PUNCT	_	_	26	punct	_	_
26	solar	_	ADJ	_	_	20	conj	_	SpaceAfter=No
27	,	_	PUNCT	_	_	30	punct	_	_
28	or	_	CCONJ	_	_	30	cc	_	_
29	a	_	DET	_	_	30	det	_	_
30	combination	_	NOUN	_	_	20	conj	_	_
31	of	_	ADP	_	_	32	case	_	_
32	two	_	NUM	_	_	30	nmod	_	_
33	or	_	CCONJ	_	_	34	cc	_	_
34	more	_	ADV	_	_	32	conj	_	SpaceAfter=No
35	.	_	PUNCT	_	_	5	punct	_	_

# sent_id = 179
# text = The system shall adhere to the standards, policies and procedures of the American Society of Heating, Refrigerating and Air-Conditioning Engineers [ASHRAE 2010].
1	The	_	DET	_	_	2	det	_	_
2	system	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	adhere	_	VERB	_	_	0	root	_	_
5	to	_	ADP	_	_	7	case	_	_
6	the	_	DET	_	_	7	det	_	_
7	standards	_	NOUN	_	_	4	iobj	_	SpaceAfter=No
8	,	_	PUNCT	_	_	9	punct	_	_
9	policies	_	NOUN	_	_	7	conj	_	_
10	and	_	CCONJ	_	_	11	cc	_	_
11	procedures	_	NOUN	_	_	7	conj	_	_
12	of	_	ADP	_	_	15	case	_	_
13	the	_	DET	_	_	15	det	_	_
14	American	_	ADJ	_	_	15	amod	_	_
15	Society	_	NOUN	_	_	7	nmod	_	_
16	of	_	ADP	_	_	24	case	_	_
17	Heating	_	NOUN	_	_	24	compound	_	SpaceAfter=No
18	,	_	PUNCT	_	_	19	punct	_	_
19	Refrigerating	_	NOUN	_	_	17	conj	_	_
20	and	_	CCONJ	_	_	23	cc	_	_
21	Air	_	NOUN	_	_	23	compound	_	SpaceAfter=No
22	-	_	PUNCT	_	_	23	punct	_	SpaceAfter=No
23	Conditioning	_	NOUN	_	_	17	conj	_	_
24	Engineers	_	NOUN	_	_	15	nmod	_	_
25	[	_	PUNCT	_	_	26	punct	_	SpaceAfter=No
26	ASHRAE	_	PROPN	_	_	15	appos	_	_
27	2010	_	NUM	_	_	26	nmod	_	SpaceAfter=No
28	]	_	PUNCT	_	_	26	punct	_	SpaceAfter=No
29	.	_	PUNCT	_	_	26	punct	_	_

# newdoc id = 2001_npac_4.1.1_R4-4
# sent_id = 228
# text = NPAC SMS shall allow NPAC personnel to view Service Provider data.
1	NPAC	_	PROPN	_	_	2	nmod	_	_
2	SMS	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	allow	_	VERB	_	_	0	root	_	_
5	NPAC	_	PROPN	_	_	6	nmod	_	_
6	personnel	_	NOUN	_	_	4	obj	_	_
7	to	_	PART	_	_	8	mark	_	_
8	view	_	VERB	_	_	4	xcomp	_	_
9	Service	_	NOUN	_	_	10	compound	_	_
10	Provider	_	NOUN	_	_	11	nmod	_	_
11	data	_	NOUN	_	_	8	obj	_	SpaceAfter=No
12	.	_	PUNCT	_	_	4	punct	_	_

# newdoc id = 1999_tcs_3.2.5.1.1_par1
# sent_id = 112
# text = The TCS shall, as a minimum, have the functionality to provide the following control capabilities: 1. Send and receive tactical communication messages. [SSS222] 2. Send and receive annotated and un-annotated digital imagery. [SSS223] 3. Establish digital communication and when completed terminate communications to the C4I systems specified in Section 3.2.5 [SSS224]. 4. Establish and when completed terminate digital communication to peripheral devices. [SSS225]
1	The	_	DET	_	_	2	det	_	_
2	TCS	_	PROPN	_	_	9	nsubj	_	_
3	shall	_	AUX	_	_	9	aux	_	SpaceAfter=No
4	,	_	PUNCT	_	_	7	punct	_	_
5	as	_	ADP	_	_	7	case	_	_
6	a	_	DET	_	_	7	det	_	_
7	minimum	_	NOUN	_	_	9	obl	_	SpaceAfter=No
8	,	_	PUNCT	_	_	7	punct	_	_
9	have	_	VERB	_	_	0	root	_	_
10	the	_	DET	_	_	11	det	_	_
11	functionality	_	NOUN	_	_	9	obj	_	_
12	to	_	PART	_	_	13	mark	_	_
13	provide	_	VERB	_	_	11	acl	_	_
14	the	_	DET	_	_	17	det	_	_
15	following	_	ADJ	_	_	17	amod	_	_
16	control	_	NOUN	_	_	17	compound	_	_
17	capabilities	_	NOUN	_	_	13	obj	_	SpaceAfter=No
18	:	_	PUNCT	_	_	21	punct	_	_
19	1	_	NUM	_	_	21	nummod	_	SpaceAfter=No
20	.	_	PUNCT	_	_	19	punct	_	_
21	Send	_	VERB	_	_	9	parataxis	_	_
22	and	_	CCONJ	_	_	23	cc	_	_
23	receive	_	VERB	_	_	21	conj	_	_
24	tactical	_	ADJ	_	_	25	amod	_	_
25	communication	_	NOUN	_	_	26	nmod	_	_
26	messages	_	NOUN	_	_	21	obj	_	SpaceAfter=No
27	.	_	PUNCT	_	_	21	punct	_	_
28	[	_	PUNCT	_	_	29	punct	_	SpaceAfter=No
29	SSS222	_	PROPN	_	_	21	appos	_	SpaceAfter=No
30	]	_	PUNCT	_	_	29	punct	_	_
31	2	_	NUM	_	_	33	nummod	_	SpaceAfter=No
32	.	_	PUNCT	_	_	31	punct	_	_
33	Send	_	VERB	_	_	21	list	_	_
34	and	_	CCONJ	_	_	35	cc	_	_
35	receive	_	VERB	_	_	33	conj	_	_
36	annotated	_	ADJ	_	_	42	amod	_	_
37	and	_	CCONJ	_	_	40	cc	_	_
38	un	_	ADV	_	_	40	advmod	_	SpaceAfter=No
39	-	_	PUNCT	_	_	40	punct	_	SpaceAfter=No
40	annotated	_	ADJ	_	_	36	conj	_	_
41	digital	_	ADJ	_	_	42	amod	_	_
42	imagery	_	NOUN	_	_	33	obj	_	SpaceAfter=No
43	.	_	PUNCT	_	_	33	punct	_	_
44	[	_	PUNCT	_	_	45	punct	_	SpaceAfter=No
45	SSS223	_	PROPN	_	_	33	appos	_	SpaceAfter=No
46	]	_	PUNCT	_	_	45	punct	_	_
47	3	_	NUM	_	_	49	nummod	_	SpaceAfter=No
48	.	_	PUNCT	_	_	47	punct	_	_
49	Establish	_	VERB	_	_	21	list	_	_
50	digital	_	ADJ	_	_	51	amod	_	_
51	communication	_	NOUN	_	_	49	obj	_	_
52	and	_	CCONJ	_	_	55	cc	_	_
53	when	_	SCONJ	_	_	54	mark	_	_
54	completed	_	VERB	_	_	55	advcl	_	_
55	terminate	_	VERB	_	_	49	conj	_	_
56	communications	_	NOUN	_	_	55	obj	_	_
57	to	_	ADP	_	_	60	case	_	_
58	the	_	DET	_	_	60	det	_	_
59	C4I	_	NOUN	_	_	60	compound	_	_
60	systems	_	NOUN	_	_	56	nmod	_	_
61	specified	_	VERB	_	_	60	acl	_	_
62	in	_	ADP	_	_	63	case	_	_
63	Section	_	NOUN	_	_	61	obl	_	_
64	3.2.5	_	NUM	_	_	63	flat	_	_
65	[	_	PUNCT	_	_	66	punct	_	SpaceAfter=No
66	SSS224	_	PROPN	_	_	49	appos	_	SpaceAfter=No
67	]	_	PUNCT	_	_	66	punct	_	SpaceAfter=No
68	.	_	PUNCT	_	_	49	punct	_	_
69	4	_	NUM	_	_	71	nummod	_	SpaceAfter=No
70	.	_	PUNCT	_	_	69	punct	_	_
71	Establish	_	VERB	_	_	21	list	_	_
72	and	_	CCONJ	_	_	75	cc	_	_
73	when	_	SCONJ	_	_	74	mark	_	_
74	completed	_	VERB	_	_	75	advcl	_	_
75	terminate	_	VERB	_	_	71	conj	_	_
76	digital	_	ADJ	_	_	77	amod	_	_
77	communication	_	NOUN	_	_	71	obj	_	_
78	to	_	ADP	_	_	80	case	_	_
79	peripheral	_	ADJ	_	_	80	amod	_	_
80	devices	_	NOUN	_	_	77	nmod	_	SpaceAfter=No
81	.	_	PUNCT	_	_	71	punct	_	_
82	[	_	PUNCT	_	_	83	punct	_	SpaceAfter=No
83	SSS225	_	PROPN	_	_	71	appos	_	SpaceAfter=No
84	]	_	PUNCT	_	_	83	punct	_	_

# newdoc id = 2010_home1.3_5.7.1.1
# sent_id = 92
# text = An FAQ section – a set of “Frequently Asked Questions” about use and maintenance of the DigitalHome System (e.g., “How do I change my password?”, “Where to I go to get DigitalHome support?”).
1	An	_	DET	_	_	3	det	_	_
2	FAQ	_	NOUN	_	_	3	compound	_	_
3	section	_	NOUN	_	_	0	root	_	_
4	–	_	PUNCT	_	_	6	punct	_	_
5	a	_	DET	_	_	6	det	_	_
6	set	_	NOUN	_	_	3	parataxis	_	_
7	of	_	ADP	_	_	11	case	_	_
8	“	_	PUNCT	_	_	11	punct	_	SpaceAfter=No
9	Frequently	_	ADV	_	_	10	advmod	_	_
10	Asked	_	ADJ	_	_	11	amod	_	_
11	Questions	_	NOUN	_	_	6	nmod	_	SpaceAfter=No
12	”	_	PUNCT	_	_	11	punct	_	_
13	about	_	ADP	_	_	14	case	_	_
14	use	_	NOUN	_	_	11	nmod	_	_
15	and	_	CCONJ	_	_	16	cc	_	_
16	maintenance	_	NOUN	_	_	14	conj	_	_
17	of	_	ADP	_	_	20	case	_	_
18	the	_	DET	_	_	20	det	_	_
19	DigitalHome	_	PROPN	_	_	20	nmod	_	_
20	System	_	NOUN	_	_	14	nmod	_	_
21	(	_	PUNCT	_	_	28	punct	_	SpaceAfter=No
22	e.g.	_	ADV	_	_	28	parataxis	_	SpaceAfter=No
23	,	_	PUNCT	_	_	22	punct	_	_
24	“	_	PUNCT	_	_	28	punct	_	SpaceAfter=No
25	How	_	ADV	_	_	28	advmod	_	_
26	do	_	AUX	_	_	28	aux	_	_
27	I	_	PRON	_	_	28	nsubj	_	_
28	change	_	VERB	_	_	6	parataxis	_	_
29	my	_	DET	_	_	30	nmod	_	_
30	password	_	NOUN	_	_	28	obj	_	SpaceAfter=No
31	?	_	PUNCT	_	_	28	punct	_	SpaceAfter=No
32	”	_	PUNCT	_	_	28	punct	_	SpaceAfter=No
33	,	_	PUNCT	_	_	38	punct	_	_
34	“	_	PUNCT	_	_	38	punct	_	SpaceAfter=No
35	Where	_	ADV	_	_	38	advmod	_	_
36	to	_	AUX	_	_	38	aux	_	_
37	I	_	PRON	_	_	38	nsubj	_	_
38	go	_	VERB	_	_	28	conj	_	_
39	to	_	PART	_	_	40	mark	_	_
40	get	_	VERB	_	_	38	advcl	_	_
41	DigitalHome	_	PROPN	_	_	42	nmod	_	_
42	support	_	NOUN	_	_	40	obj	_	SpaceAfter=No
43	?	_	PUNCT	_	_	38	punct	_	SpaceAfter=No
44	”	_	PUNCT	_	_	38	punct	_	SpaceAfter=No
45	)	_	PUNCT	_	_	28	punct	_	SpaceAfter=No
46	.	_	PUNCT	_	_	3	punct	_	_

# newdoc id = 2005_phin_2.5.3
# sent_id = 43
# text = Systems supporting OM must be able to create and send messages for laboratory test requests.
1	Systems	_	NOUN	_	_	6	nsubj	_	_
2	supporting	_	VERB	_	_	1	acl	_	_
3	OM	_	PROPN	_	_	2	obj	_	_
4	must	_	AUX	_	_	6	aux	_	_
5	be	_	AUX	_	_	6	cop	_	_
6	able	_	ADJ	_	_	0	root	_	_
7	to	_	PART	_	_	8	mark	_	_
8	create	_	VERB	_	_	6	xcomp	_	_
9	and	_	CCONJ	_	_	10	cc	_	_
10	send	_	VERB	_	_	8	conj	_	_
11	messages	_	NOUN	_	_	10	obj	_	_
12	for	_	ADP	_	_	15	case	_	_
13	laboratory	_	NOUN	_	_	14	compound	_	_
14	test	_	NOUN	_	_	15	compound	_	_
15	requests	_	NOUN	_	_	8	obl	_	SpaceAfter=No
16	.	_	PUNCT	_	_	6	punct	_	_

# sent_id = 44
# text = This requirement is identified as a key performance measure for assessing preparedness as described in PHIN Preparedness Key Performance Measures, available at www.cdc.gov/phin.
1	This	_	DET	_	_	2	det	_	_
2	requirement	_	NOUN	_	_	4	nsubj:pass	_	_
3	is	_	AUX	_	_	4	aux:pass	_	_
4	identified	_	VERB	_	_	0	root	_	_
5	as	_	ADP	_	_	9	case	_	_
6	a	_	DET	_	_	9	det	_	_
7	key	_	ADJ	_	_	9	amod	_	_
8	performance	_	NOUN	_	_	9	nmod	_	_
9	measure	_	NOUN	_	_	4	obl	_	_
10	for	_	SCONJ	_	_	11	mark	_	_
11	assessing	_	VERB	_	_	9	acl	_	_
12	preparedness	_	NOUN	_	_	11	obj	_	_
13	as	_	SCONJ	_	_	14	mark	_	_
14	described	_	VERB	_	_	11	advcl	_	_
15	in	_	ADP	_	_	20	case	_	_
16	PHIN	_	PROPN	_	_	20	nmod	_	_
17	Preparedness	_	NOUN	_	_	20	nmod	_	_
18	Key	_	ADJ	_	_	20	amod	_	_
19	Performance	_	NOUN	_	_	20	nmod	_	_
20	Measures	_	NOUN	_	_	14	obl	_	SpaceAfter=No
21	,	_	PUNCT	_	_	22	punct	_	_
22	available	_	ADJ	_	_	20	amod	_	_
23	at	_	ADP	_	_	24	case	_	_
24	www.cdc.gov/phin	_	SYM	_	_	22	obl	_	SpaceAfter=No
25	.	_	PUNCT	_	_	4	punct	_	_

# newdoc id = 2006_eirenesys15_5.4.7
# sent_id = 61
# text = Upon activation of the registration function, a USSD message (see section 11) shall be sent by the Cab radio. (M)
1	Upon	_	ADP	_	_	2	case	_	_
2	activation	_	NOUN	_	_	18	obl	_	_
3	of	_	ADP	_	_	6	case	_	_
4	the	_	DET	_	_	6	det	_	_
5	registration	_	NOUN	_	_	6	nmod	_	_
6	function	_	NOUN	_	_	2	nmod	_	SpaceAfter=No
7	,	_	PUNCT	_	_	2	punct	_	_
8	a	_	DET	_	_	10	det	_	_
9	USSD	_	PROPN	_	_	10	compound	_	_
10	message	_	NOUN	_	_	18	nsubj:pass	_	_
11	(	_	PUNCT	_	_	12	punct	_	SpaceAfter=No
12	see	_	VERB	_	_	10	parataxis	_	_
13	section	_	NOUN	_	_	12	obj	_	_
14	11	_	NUM	_	_	13	flat	_	SpaceAfter=No
15	)	_	PUNCT	_	_	12	punct	_	_
16	shall	_	AUX	_	_	18	aux	_	_
17	be	_	AUX	_	_	18	cop	_	_
18	sent	_	VERB	_	_	0	root	_	_
19	by	_	ADP	_	_	22	case	_	_
20	the	_	DET	_	_	22	det	_	_
21	Cab	_	NOUN	_	_	22	compound	_	_
22	radio	_	NOUN	_	_	18	obl:agent	_	SpaceAfter=No
23	.	_	PUNCT	_	_	18	punct	_	_
24	(	_	PUNCT	_	_	25	punct	_	SpaceAfter=No
25	M	_	ADJ	_	_	18	advmod	_	SpaceAfter=No
26	)	_	PUNCT	_	_	25	punct	_	_

# newdoc id = 2011_tfms_3.2.3.3.2.2_SSS3183
# sent_id = 218
# text = When displaying the VIL Precipitation Mosaic data or CIWS Echo Tops Mosaic data in an animated loop, the system shall display the following: a. Absolute time of the day associated with the image being displayed b. Relative time (+/- min) of the image being displayed with respect to the current time.
1	When	_	SCONJ	_	_	2	mark	_	_
2	displaying	_	VERB	_	_	22	advcl	_	_
3	the	_	DET	_	_	7	det	_	_
4	VIL	_	PROPN	_	_	5	compound	_	_
5	Precipitation	_	NOUN	_	_	6	nmod	_	_
6	Mosaic	_	NOUN	_	_	7	nmod	_	_
7	data	_	NOUN	_	_	2	obj	_	_
8	or	_	CCONJ	_	_	13	cc	_	_
9	CIWS	_	PROPN	_	_	12	nmod	_	_
10	Echo	_	NOUN	_	_	11	compound	_	_
11	Tops	_	NOUN	_	_	12	nmod	_	_
12	Mosaic	_	NOUN	_	_	13	nmod	_	_
13	data	_	NOUN	_	_	7	conj	_	_
14	in	_	ADP	_	_	17	case	_	_
15	an	_	DET	_	_	17	det	_	_
16	animated	_	ADJ	_	_	17	amod	_	_
17	loop	_	NOUN	_	_	2	obl	_	SpaceAfter=No
18	,	_	PUNCT	_	_	2	punct	_	_
19	the	_	DET	_	_	20	det	_	_
20	system	_	NOUN	_	_	22	nsubj	_	_
21	shall	_	AUX	_	_	22	aux	_	_
22	display	_	VERB	_	_	0	root	_	_
23	the	_	DET	_	_	24	det	_	_
24	following	_	NOUN	_	_	22	obj	_	SpaceAfter=No
25	:	_	PUNCT	_	_	29	punct	_	_
26	a	_	NUM	_	_	29	nummod	_	SpaceAfter=No
27	.	_	PUNCT	_	_	26	punct	_	_
28	Absolute	_	ADJ	_	_	29	amod	_	_
29	time	_	NOUN	_	_	22	parataxis	_	_
30	of	_	ADP	_	_	32	case	_	_
31	the	_	DET	_	_	32	det	_	_
32	day	_	NOUN	_	_	29	nmod	_	_
33	associated	_	VERB	_	_	29	acl	_	_
34	with	_	ADP	_	_	36	case	_	_
35	the	_	DET	_	_	36	det	_	_
36	image	_	NOUN	_	_	33	obl	_	_
37	being	_	AUX	_	_	38	aux:pass	_	_
38	displayed	_	VERB	_	_	36	acl	_	_
39	b	_	NUM	_	_	42	nummod	_	SpaceAfter=No
40	.	_	PUNCT	_	_	39	punct	_	_
41	Relative	_	ADJ	_	_	42	amod	_	_
42	time	_	NOUN	_	_	29	list	_	_
43	(	_	PUNCT	_	_	47	punct	_	SpaceAfter=No
44	+	_	SYM	_	_	47	nummod	_	SpaceAfter=No
45	/	_	SYM	_	_	46	cc	_	SpaceAfter=No
46	-	_	SYM	_	_	44	conj	_	_
47	min	_	NOUN	_	_	42	appos	_	SpaceAfter=No
48	)	_	PUNCT	_	_	47	punct	_	_
49	of	_	ADP	_	_	51	case	_	_
50	the	_	DET	_	_	51	det	_	_
51	image	_	NOUN	_	_	42	nmod	_	_
52	being	_	AUX	_	_	53	aux:pass	_	_
53	displayed	_	VERB	_	_	51	acl	_	_
54	with	_	ADP	_	_	55	case	_	_
55	respect	_	NOUN	_	_	42	nmod	_	_
56	to	_	ADP	_	_	59	case	_	_
57	the	_	DET	_	_	59	det	_	_
58	current	_	ADJ	_	_	59	amod	_	_
59	time	_	NOUN	_	_	55	nmod	_	SpaceAfter=No
60	.	_	PUNCT	_	_	22	punct	_	_

# newdoc id = 2000_nasax38_3.2.5.2_6
# sent_id = 244
# text = The presence test shall [SRS184] also ascertain that all processors are executing the same 50 Hz, 10 Hz and 1 Hz frames.
1	The	_	DET	_	_	3	det	_	_
2	presence	_	NOUN	_	_	3	compound	_	_
3	test	_	NOUN	_	_	9	nsubj	_	_
4	shall	_	AUX	_	_	9	aux	_	_
5	[	_	PUNCT	_	_	6	punct	_	SpaceAfter=No
6	SRS184	_	PROPN	_	_	3	appos	_	SpaceAfter=No
7	]	_	PUNCT	_	_	6	punct	_	_
8	also	_	ADV	_	_	9	advmod	_	_
9	ascertain	_	VERB	_	_	0	root	_	_
10	that	_	SCONJ	_	_	14	mark	_	_
11	all	_	DET	_	_	12	det	_	_
12	processors	_	NOUN	_	_	14	nsubj	_	_
13	are	_	AUX	_	_	14	aux	_	_
14	executing	_	VERB	_	_	9	ccomp	_	_
15	the	_	DET	_	_	25	det	_	_
16	same	_	ADJ	_	_	25	amod	_	_
17	50	_	NUM	_	_	18	nummod	_	_
18	Hz	_	NOUN	_	_	25	compound	_	SpaceAfter=No
19	,	_	PUNCT	_	_	21	punct	_	_
20	10	_	NUM	_	_	21	nummod	_	_
21	Hz	_	NOUN	_	_	18	conj	_	_
22	and	_	CCONJ	_	_	24	cc	_	_
23	1	_	NUM	_	_	24	nummod	_	_
24	Hz	_	NOUN	_	_	18	conj	_	_
25	frames	_	NOUN	_	_	14	obj	_	SpaceAfter=No
26	.	_	PUNCT	_	_	9	punct	_	_

# newdoc id = 2001_npac_5.1.2.2.2.2_R5-37
# sent_id = 16
# text = NPAC SMS shall accept the following optional fields from the new Service Provider or NPAC personnel for an active Subscription Version to be modified: • Billing Service Provider ID • End-User Location - Value • End-User Location - Type
1	NPAC	_	PROPN	_	_	2	nmod	_	_
2	SMS	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	accept	_	VERB	_	_	0	root	_	_
5	the	_	DET	_	_	8	det	_	_
6	following	_	ADJ	_	_	8	amod	_	_
7	optional	_	ADJ	_	_	8	amod	_	_
8	fields	_	NOUN	_	_	4	obj	_	_
9	from	_	ADP	_	_	13	case	_	_
10	the	_	DET	_	_	13	det	_	_
11	new	_	ADJ	_	_	13	amod	_	_
12	Service	_	NOUN	_	_	13	compound	_	_
13	Provider	_	NOUN	_	_	4	obl	_	_
14	or	_	CCONJ	_	_	16	cc	_	_
15	NPAC	_	PROPN	_	_	16	nmod	_	_
16	personnel	_	NOUN	_	_	13	conj	_	_
17	for	_	SCONJ	_	_	24	mark	_	_
18	an	_	DET	_	_	21	det	_	_
19	active	_	ADJ	_	_	21	amod	_	_
20	Subscription	_	NOUN	_	_	21	nmod	_	_
21	Version	_	NOUN	_	_	24	nsubj	_	_
22	to	_	PART	_	_	24	mark	_	_
23	be	_	AUX	_	_	24	aux:pass	_	_
24	modified	_	VERB	_	_	4	advcl	_	SpaceAfter=No
25	:	_	PUNCT	_	_	30	punct	_	_
26	•	_	PUNCT	_	_	30	punct	_	_
27	Billing	_	ADJ	_	_	29	amod	_	_
28	Service	_	NOUN	_	_	29	compound	_	_
29	Provider	_	NOUN	_	_	30	nmod	_	_
30	ID	_	NOUN	_	_	4	parataxis	_	_
31	•	_	PUNCT	_	_	35	punct	_	_
32	End	_	NOUN	_	_	34	compound	_	SpaceAfter=No
33	-	_	PUNCT	_	_	34	punct	_	SpaceAfter=No
34	User	_	NOUN	_	_	35	nmod	_	_
35	Location	_	NOUN	_	_	30	list	_	_
36	-	_	PUNCT	_	_	35	punct	_	_
37	Value	_	NOUN	_	_	35	parataxis	_	_
38	•	_	PUNCT	_	_	42	punct	_	_
39	End	_	NOUN	_	_	41	compound	_	SpaceAfter=No
40	-	_	PUNCT	_	_	41	punct	_	SpaceAfter=No
41	User	_	NOUN	_	_	42	nmod	_	_
42	Location	_	NOUN	_	_	30	list	_	_
43	-	_	PUNCT	_	_	44	punct	_	_
44	Type	_	NOUN	_	_	42	parataxis	_	_

# newdoc id = 2000_nasax38_3.2.2.3_5
# sent_id = 54
# text = For other software exceptions, regardless of whether or not a user written exception handling routine is invoked, if an exception occurs, the scheduler shall [SRS173], after making available the error type and context data to the application, resume processing (after the exception-handling routine runs, if provided) at the initialization point of the offending task.
1	For	_	ADP	_	_	4	case	_	_
2	other	_	DET	_	_	4	det	_	_
3	software	_	NOUN	_	_	4	compound	_	_
4	exceptions	_	NOUN	_	_	45	obl	_	SpaceAfter=No
5	,	_	PUNCT	_	_	4	punct	_	_
6	regardless	_	ADV	_	_	18	mark	_	_
7	of	_	ADP	_	_	6	fixed	_	_
8	whether	_	SCONJ	_	_	18	mark	_	_
9	or	_	CCONJ	_	_	10	cc	_	_
10	not	_	PART	_	_	8	conj	_	_
11	a	_	DET	_	_	16	det	_	_
12	user	_	NOUN	_	_	13	obl:agent	_	_
13	written	_	VERB	_	_	16	acl	_	_
14	exception	_	NOUN	_	_	15	nmod	_	_
15	handling	_	NOUN	_	_	16	nmod	_	_
16	routine	_	NOUN	_	_	18	nsubj:pass	_	_
17	is	_	AUX	_	_	18	aux:pass	_	_
18	invoked	_	VERB	_	_	45	advcl	_	SpaceAfter=No
19	,	_	PUNCT	_	_	18	punct	_	_
20	if	_	ADP	_	_	23	mark	_	_
21	an	_	DET	_	_	22	det	_	_
22	exception	_	NOUN	_	_	23	nsubj	_	_
23	occurs	_	VERB	_	_	45	advcl	_	SpaceAfter=No
24	,	_	PUNCT	_	_	23	punct	_	_
25	the	_	DET	_	_	26	det	_	_
26	scheduler	_	NOUN	_	_	45	nsubj	_	_
27	shall	_	AUX	_	_	45	aux	_	_
28	[	_	PUNCT	_	_	29	punct	_	SpaceAfter=No
29	SRS173	_	PROPN	_	_	26	appos	_	SpaceAfter=No
30	]	_	PUNCT	_	_	29	punct	_	SpaceAfter=No
31	,	_	PUNCT	_	_	33	punct	_	_
32	after	_	SCONJ	_	_	33	mark	_	_
33	making	_	VERB	_	_	45	advcl	_	_
34	available	_	ADJ	_	_	33	xcomp	_	_
35	the	_	DET	_	_	37	det	_	_
36	error	_	NOUN	_	_	37	nmod	_	_
37	type	_	NOUN	_	_	33	obj	_	_
38	and	_	CCONJ	_	_	40	cc	_	_
39	context	_	NOUN	_	_	40	nmod	_	_
40	data	_	NOUN	_	_	37	conj	_	_
41	to	_	ADP	_	_	43	case	_	_
42	the	_	DET	_	_	43	det	_	_
43	application	_	NOUN	_	_	33	obl	_	SpaceAfter=No
44	,	_	PUNCT	_	_	33	punct	_	_
45	resume	_	VERB	_	_	0	root	_	_
46	processing	_	NOUN	_	_	45	obj	_	_
47	(	_	PUNCT	_	_	54	punct	_	SpaceAfter=No
48	after	_	ADP	_	_	54	case	_	_
49	the	_	DET	_	_	54	det	_	_
50	exception	_	NOUN	_	_	52	compound	_	SpaceAfter=No
51	-	_	PUNCT	_	_	52	punct	_	SpaceAfter=No
52	handling	_	NOUN	_	_	53	compound	_	_
53	routine	_	ADJ	_	_	54	nmod	_	_
54	runs	_	NOUN	_	_	45	obl	_	SpaceAfter=No
55	,	_	PUNCT	_	_	54	punct	_	_
56	if	_	SCONJ	_	_	57	mark	_	_
57	provided	_	VERB	_	_	45	advcl	_	SpaceAfter=No
58	)	_	PUNCT	_	_	57	punct	_	_
59	at	_	ADP	_	_	62	case	_	_
60	the	_	DET	_	_	62	det	_	_
61	initialization	_	NOUN	_	_	62	nmod	_	_
62	point	_	NOUN	_	_	45	obl	_	_
63	of	_	ADP	_	_	66	case	_	_
64	the	_	DET	_	_	66	det	_	_
65	offending	_	ADJ	_	_	66	amod	_	_
66	task	_	NOUN	_	_	62	nmod	_	SpaceAfter=No
67	.	_	PUNCT	_	_	45	punct	_	_

# newdoc id = 2000_nasax38_3.2.1_2
# sent_id = 96
# text = As part of System Initialization , the Boot ROM shall [SRS234] be configured to, after completing IBIT, call the manufacturer-supplied VxWorks Board Support Package (BSP) initialization software followed by a call to the FTSS System Initialization software.
1	As	_	ADP	_	_	2	case	_	_
2	part	_	NOUN	_	_	15	obl	_	_
3	of	_	ADP	_	_	5	case	_	_
4	System	_	NOUN	_	_	5	nmod	_	_
5	Initialization	_	NOUN	_	_	2	nmod	_	_
6	,	_	PUNCT	_	_	2	punct	_	_
7	the	_	DET	_	_	9	det	_	_
8	Boot	_	VERB	_	_	9	compound	_	_
9	ROM	_	NOUN	_	_	15	nsubj:pass	_	_
10	shall	_	AUX	_	_	15	aux	_	_
11	[	_	PUNCT	_	_	12	punct	_	SpaceAfter=No
12	SRS234	_	PROPN	_	_	9	appos	_	SpaceAfter=No
13	]	_	PUNCT	_	_	12	punct	_	_
14	be	_	AUX	_	_	15	aux:pass	_	_
15	configured	_	VERB	_	_	0	root	_	_
16	to	_	PART	_	_	22	mark	_	SpaceAfter=No
17	,	_	PUNCT	_	_	19	punct	_	_
18	after	_	ADP	_	_	19	mark	_	_
19	completing	_	VERB	_	_	22	advcl	_	_
20	IBIT	_	PROPN	_	_	19	obj	_	SpaceAfter=No
21	,	_	PUNCT	_	_	19	punct	_	_
22	call	_	VERB	_	_	15	xcomp	_	_
23	the	_	DET	_	_	30	det	_	_
24	manufacturer	_	NOUN	_	_	26	obl:agent	_	SpaceAfter=No
25	-	_	PUNCT	_	_	26	punct	_	SpaceAfter=No
26	supplied	_	VERB	_	_	30	acl	_	_
27	VxWorks	_	PROPN	_	_	30	nmod	_	_
28	Board	_	NOUN	_	_	30	nmod	_	_
29	Support	_	NOUN	_	_	30	compound	_	_
30	Package	_	NOUN	_	_	35	nmod	_	_
31	(	_	PUNCT	_	_	32	punct	_	SpaceAfter=No
32	BSP	_	NOUN	_	_	30	appos	_	SpaceAfter=No
33	)	_	PUNCT	_	_	32	punct	_	_
34	initialization	_	NOUN	_	_	35	compound	_	_
35	software	_	NOUN	_	_	22	obj	_	_
36	followed	_	ADJ	_	_	22	advcl	_	_
37	by	_	ADP	_	_	39	case	_	_
38	a	_	DET	_	_	39	det	_	_
39	call	_	NOUN	_	_	36	obl:agent	_	_
40	to	_	ADP	_	_	45	case	_	_
41	the	_	DET	_	_	45	det	_	_
42	FTSS	_	NOUN	_	_	45	nmod	_	_
43	System	_	NOUN	_	_	44	nmod	_	_
44	Initialization	_	NOUN	_	_	45	compound	_	_
45	software	_	NOUN	_	_	39	nmod	_	SpaceAfter=No
46	.	_	PUNCT	_	_	15	punct	_	_

# newdoc id = 1998_ALQ-172_3.1.2
# sent_id = 252
# text = The integrated aircraft system shall meet all the requirements of this SRD and Appendix A.
1	The	_	DET	_	_	4	det	_	_
2	integrated	_	ADJ	_	_	4	amod	_	_
3	aircraft	_	NOUN	_	_	4	compound	_	_
4	system	_	NOUN	_	_	6	nsubj	_	_
5	shall	_	AUX	_	_	6	aux	_	_
6	meet	_	VERB	_	_	0	root	_	_
7	all	_	DET	_	_	9	det	_	_
8	the	_	DET	_	_	9	det	_	_
9	requirements	_	NOUN	_	_	6	obj	_	_
10	of	_	ADP	_	_	12	case	_	_
11	this	_	DET	_	_	12	det	_	_
12	SRD	_	NOUN	_	_	9	nmod	_	_
13	and	_	CCONJ	_	_	14	cc	_	_
14	Appendix	_	NOUN	_	_	12	conj	_	_
15	A	_	NOUN	_	_	14	flat	_	SpaceAfter=No
16	.	_	PUNCT	_	_	6	punct	_	_

# sent_id = 253
# text = The integration of the Enhanced ALQ-172 and LBJ with the AC-130U and MC-130H aircraft shall not compromise their ability to safely accomplish all intended operational missions defined in their respective System Specifications.
1	The	_	DET	_	_	2	det	_	_
2	integration	_	NOUN	_	_	17	nsubj	_	_
3	of	_	ADP	_	_	6	case	_	_
4	the	_	DET	_	_	6	det	_	_
5	Enhanced	_	ADJ	_	_	6	amod	_	_
6	ALQ-172	_	PROPN	_	_	2	nmod	_	_
7	and	_	CCONJ	_	_	8	cc	_	_
8	LBJ	_	NOUN	_	_	6	conj	_	_
9	with	_	ADP	_	_	11	case	_	_
10	the	_	DET	_	_	11	det	_	_
11	AC-130U	_	PROPN	_	_	14	compound	_	_
12	and	_	CCONJ	_	_	13	cc	_	_
13	MC-130H	_	PROPN	_	_	11	conj	_	_
14	aircraft	_	NOUN	_	_	2	nmod	_	_
15	shall	_	AUX	_	_	17	aux	_	_
16	not	_	PART	_	_	17	advmod	_	_
17	compromise	_	VERB	_	_	0	root	_	_
18	their	_	DET	_	_	19	nmod	_	_
19	ability	_	NOUN	_	_	17	obj	_	_
20	to	_	PART	_	_	22	mark	_	_
21	safely	_	ADV	_	_	22	advmod	_	_
22	accomplish	_	VERB	_	_	19	acl	_	_
23	all	_	DET	_	_	26	det	_	_
24	intended	_	ADJ	_	_	26	amod	_	_
25	operational	_	ADJ	_	_	26	amod	_	_
26	missions	_	NOUN	_	_	22	obj	_	_
27	defined	_	VERB	_	_	26	acl	_	_
28	in	_	ADP	_	_	32	case	_	_
29	their	_	DET	_	_	32	nmod	_	_
30	respective	_	ADJ	_	_	32	amod	_	_
31	System	_	NOUN	_	_	32	compound	_	_
32	Specifications	_	NOUN	_	_	27	obl	_	SpaceAfter=No
33	.	_	PUNCT	_	_	17	punct	_	_

# sent_id = 254
# text = The terms "minimize changes" and "not significantly degrade" are used in this context throughout this SRD.
1	The	_	DET	_	_	2	det	_	_
2	terms	_	NOUN	_	_	14	nsubj:pass	_	_
3	"	_	PUNCT	_	_	4	punct	_	SpaceAfter=No
4	minimize	_	VERB	_	_	2	appos	_	_
5	changes	_	NOUN	_	_	4	obj	_	SpaceAfter=No
6	"	_	PUNCT	_	_	4	punct	_	_
7	and	_	CCONJ	_	_	11	cc	_	_
8	"	_	PUNCT	_	_	11	punct	_	SpaceAfter=No
9	not	_	PART	_	_	10	advmod	_	_
10	significantly	_	ADV	_	_	11	advmod	_	_
11	degrade	_	VERB	_	_	4	conj	_	SpaceAfter=No
12	"	_	PUNCT	_	_	11	punct	_	_
13	are	_	AUX	_	_	14	aux:pass	_	_
14	used	_	VERB	_	_	0	root	_	_
15	in	_	ADP	_	_	17	case	_	_
16	this	_	DET	_	_	17	det	_	_
17	context	_	NOUN	_	_	14	obl	_	_
18	throughout	_	ADP	_	_	20	case	_	_
19	this	_	DET	_	_	20	det	_	_
20	SRD	_	NOUN	_	_	14	obl	_	SpaceAfter=No
21	.	_	PUNCT	_	_	14	punct	_	_

# newdoc id = 2006_eirenesys15_4.5.14
# sent_id = 246
# text = All equipment shall not degrade photochemically when exposed to solar radiation of up to 1200 W/m2. (M)
1	All	_	DET	_	_	2	det	_	_
2	equipment	_	NOUN	_	_	5	nsubj	_	_
3	shall	_	AUX	_	_	5	aux	_	_
4	not	_	PART	_	_	5	advmod	_	_
5	degrade	_	VERB	_	_	0	root	_	_
6	photochemically	_	ADV	_	_	5	advmod	_	_
7	when	_	SCONJ	_	_	8	mark	_	_
8	exposed	_	VERB	_	_	5	advcl	_	_
9	to	_	ADP	_	_	11	case	_	_
10	solar	_	ADJ	_	_	11	amod	_	_
11	radiation	_	NOUN	_	_	8	obl	_	_
12	of	_	ADP	_	_	16	case	_	_
13	up	_	ADV	_	_	15	advmod	_	_
14	to	_	ADP	_	_	13	fixed	_	_
15	1200	_	NUM	_	_	16	nummod	_	_
16	W	_	NOUN	_	_	11	nmod	_	SpaceAfter=No
17	/	_	SYM	_	_	18	case	_	SpaceAfter=No
18	m	_	NOUN	_	_	16	nmod	_	SpaceAfter=No
19	2	_	NUM	_	_	18	nummod	_	SpaceAfter=No
20	.	_	PUNCT	_	_	5	punct	_	_
21	(	_	PUNCT	_	_	22	punct	_	SpaceAfter=No
22	M	_	ADJ	_	_	5	advmod	_	SpaceAfter=No
23	)	_	PUNCT	_	_	22	punct	_	_

# newdoc id = 2007_ertms_4.9.9.2
# sent_id = 118
# text = The following train data shall be sent from the on board to the trackside: (M) Train running number STM ready for use train gauge Max. axle load status of air tight system type of el. power accepted international train category max. train speed train length.
1	The	_	DET	_	_	4	det	_	_
2	following	_	ADJ	_	_	4	amod	_	_
3	train	_	NOUN	_	_	4	nmod	_	_
4	data	_	NOUN	_	_	7	nsubj:pass	_	_
5	shall	_	AUX	_	_	7	aux	_	_
6	be	_	AUX	_	_	7	aux:pass	_	_
7	sent	_	VERB	_	_	0	root	_	_
8	from	_	ADP	_	_	11	case	_	_
9	the	_	DET	_	_	11	det	_	_
10	on	_	ADP	_	_	11	case	_	_
11	board	_	NOUN	_	_	7	obl	_	_
12	to	_	ADP	_	_	14	case	_	_
13	the	_	DET	_	_	14	det	_	_
14	trackside	_	NOUN	_	_	7	iobj	_	SpaceAfter=No
15	:	_	PUNCT	_	_	14	punct	_	_
16	(	_	PUNCT	_	_	17	punct	_	SpaceAfter=No
17	M	_	ADJ	_	_	7	advmod	_	SpaceAfter=No
18	)	_	PUNCT	_	_	17	punct	_	_
19	Train	_	NOUN	_	_	21	nmod	_	_
20	running	_	ADJ	_	_	21	amod	_	_
21	number	_	NOUN	_	_	7	parataxis	_	_
22	STM	_	NOUN	_	_	21	list	_	_
23	ready	_	ADJ	_	_	22	amod	_	_
24	for	_	ADP	_	_	25	case	_	_
25	use	_	NOUN	_	_	23	obl	_	_
26	train	_	NOUN	_	_	27	compound	_	_
27	gauge	_	NOUN	_	_	21	list	_	_
28	Max.	_	ADJ	_	_	30	amod	_	_
29	axle	_	NOUN	_	_	30	compound	_	_
30	load	_	NOUN	_	_	21	list	_	_
31	status	_	NOUN	_	_	21	list	_	_
32	of	_	ADP	_	_	35	case	_	_
33	air	_	ADJ	_	_	35	amod	_	_
34	tight	_	X	_	_	33	goeswith	_	_
35	system	_	NOUN	_	_	31	nmod	_	_
36	type	_	NOUN	_	_	21	list	_	_
37	of	_	ADP	_	_	39	case	_	_
38	el.	_	ADJ	_	_	39	amod	_	_
39	power	_	NOUN	_	_	36	nmod	_	_
40	accepted	_	VERB	_	_	39	acl	_	_
41	international	_	ADJ	_	_	43	amod	_	_
42	train	_	NOUN	_	_	43	nmod	_	_
43	category	_	NOUN	_	_	21	list	_	_
44	max.	_	ADJ	_	_	46	amod	_	_
45	train	_	NOUN	_	_	46	nmod	_	_
46	speed	_	NOUN	_	_	21	list	_	_
47	train	_	NOUN	_	_	48	nmod	_	_
48	length	_	NOUN	_	_	21	list	_	SpaceAfter=No
49	.	_	PUNCT	_	_	7	punct	_	_

# newdoc id = 1999_tcs_3.2.1_par22
# sent_id = 190
# text = The TCS shall allow the operator to set the LOL delay timer(s) during mission planning. [SSS075]
1	The	_	DET	_	_	2	det	_	_
2	TCS	_	PROPN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	allow	_	VERB	_	_	0	root	_	_
5	the	_	DET	_	_	6	det	_	_
6	operator	_	NOUN	_	_	4	obj	_	_
7	to	_	PART	_	_	8	mark	_	_
8	set	_	VERB	_	_	4	xcomp	_	_
9	the	_	DET	_	_	12	det	_	_
10	LOL	_	NOUN	_	_	11	compound	_	_
11	delay	_	NOUN	_	_	12	nmod	_	_
12	timer	_	NOUN	_	_	8	obj	_	SpaceAfter=No
13	(	_	PUNCT	_	_	14	punct	_	SpaceAfter=No
14	s	_	X	_	_	12	dep	_	SpaceAfter=No
15	)	_	PUNCT	_	_	14	punct	_	_
16	during	_	ADP	_	_	18	case	_	_
17	mission	_	NOUN	_	_	18	compound	_	_
18	planning	_	NOUN	_	_	8	obl	_	SpaceAfter=No
19	.	_	PUNCT	_	_	4	punct	_	_
20	[	_	PUNCT	_	_	21	punct	_	SpaceAfter=No
21	SSS075	_	PROPN	_	_	4	appos	_	SpaceAfter=No
22	]	_	PUNCT	_	_	21	punct	_	_

# sent_id = 191
# text = The LOL delay is the time from when the AV detects an unplanned LOL to the time it initiates LOL procedures.
1	The	_	DET	_	_	3	det	_	_
2	LOL	_	NOUN	_	_	3	compound	_	_
3	delay	_	NOUN	_	_	6	nsubj	_	_
4	is	_	AUX	_	_	6	cop	_	_
5	the	_	DET	_	_	6	det	_	_
6	time	_	NOUN	_	_	0	root	_	_
7	from	_	ADP	_	_	8	case	_	_
8	when	_	PRON	_	_	11	obl	_	_
9	the	_	DET	_	_	10	det	_	_
10	AV	_	NOUN	_	_	11	nsubj	_	_
11	detects	_	VERB	_	_	6	acl:relcl	_	_
12	an	_	DET	_	_	14	det	_	_
13	unplanned	_	ADJ	_	_	14	amod	_	_
14	LOL	_	NOUN	_	_	11	obj	_	_
15	to	_	ADP	_	_	17	case	_	_
16	the	_	DET	_	_	17	det	_	_
17	time	_	NOUN	_	_	6	nmod	_	_
18	it	_	PRON	_	_	19	nsubj	_	_
19	initiates	_	VERB	_	_	17	acl:relcl	_	_
20	LOL	_	NOUN	_	_	21	nmod	_	_
21	procedures	_	NOUN	_	_	19	obj	_	SpaceAfter=No
22	.	_	PUNCT	_	_	6	punct	_	_

# newdoc id = 2007_ertms_4.3.3.3
# sent_id = 119
# text = When the train is stationary or after a certain time (e.g. the time for "route releasing" of the overlap, the release speed calculation shall be based on the distance to the danger point (if calculated on-board).
1	When	_	SCONJ	_	_	5	mark	_	_
2	the	_	DET	_	_	3	det	_	_
3	train	_	NOUN	_	_	5	nsubj	_	_
4	is	_	AUX	_	_	5	cop	_	_
5	stationary	_	ADJ	_	_	30	advcl	_	_
6	or	_	CCONJ	_	_	10	cc	_	_
7	after	_	ADP	_	_	10	case	_	_
8	a	_	DET	_	_	10	det	_	_
9	certain	_	ADJ	_	_	10	amod	_	_
10	time	_	NOUN	_	_	5	conj	_	_
11	(	_	PUNCT	_	_	14	punct	_	SpaceAfter=No
12	e.g.	_	ADV	_	_	14	parataxis	_	_
13	the	_	DET	_	_	14	det	_	_
14	time	_	NOUN	_	_	10	appos	_	_
15	for	_	ADP	_	_	18	case	_	_
16	"	_	PUNCT	_	_	18	punct	_	SpaceAfter=No
17	route	_	NOUN	_	_	18	nmod	_	_
18	releasing	_	NOUN	_	_	14	nmod	_	SpaceAfter=No
19	"	_	PUNCT	_	_	18	punct	_	_
20	of	_	ADP	_	_	22	case	_	_
21	the	_	DET	_	_	22	det	_	_
22	overlap	_	NOUN	_	_	18	nmod	_	SpaceAfter=No
23	,	_	PUNCT	_	_	5	punct	_	_
24	the	_	DET	_	_	27	det	_	_
25	release	_	NOUN	_	_	26	nmod	_	_
26	speed	_	NOUN	_	_	27	nmod	_	_
27	calculation	_	NOUN	_	_	30	nsubj:pass	_	_
28	shall	_	AUX	_	_	30	aux	_	_
29	be	_	AUX	_	_	30	aux:pass	_	_
30	based	_	VERB	_	_	0	root	_	_
31	on	_	ADP	_	_	33	case	_	_
32	the	_	DET	_	_	33	det	_	_
33	distance	_	NOUN	_	_	30	iobj	_	_
34	to	_	ADP	_	_	37	case	_	_
35	the	_	DET	_	_	37	det	_	_
36	danger	_	NOUN	_	_	37	nmod	_	_
37	point	_	NOUN	_	_	33	nmod	_	_
38	(	_	PUNCT	_	_	40	punct	_	SpaceAfter=No
39	if	_	SCONJ	_	_	40	mark	_	_
40	calculated	_	VERB	_	_	33	acl	_	_
41	on	_	ADP	_	_	43	case	_	SpaceAfter=No
42	-	_	PUNCT	_	_	43	punct	_	SpaceAfter=No
43	board	_	NOUN	_	_	40	obl	_	SpaceAfter=No
44	)	_	PUNCT	_	_	40	punct	_	SpaceAfter=No
45	.	_	PUNCT	_	_	30	punct	_	_

# sent_id = 120
# text = The condition for this change shall be defined for each target as infrastructure data. (M)
1	The	_	DET	_	_	2	det	_	_
2	condition	_	NOUN	_	_	8	nsubj:pass	_	_
3	for	_	ADP	_	_	5	case	_	_
4	this	_	DET	_	_	5	det	_	_
5	change	_	NOUN	_	_	2	nmod	_	_
6	shall	_	AUX	_	_	8	aux	_	_
7	be	_	AUX	_	_	8	aux:pass	_	_
8	defined	_	VERB	_	_	0	root	_	_
9	for	_	ADP	_	_	11	case	_	_
10	each	_	DET	_	_	11	det	_	_
11	target	_	NOUN	_	_	8	obl	_	_
12	as	_	ADP	_	_	14	case	_	_
13	infrastructure	_	NOUN	_	_	14	nmod	_	_
14	data	_	NOUN	_	_	8	obl	_	SpaceAfter=No
15	.	_	PUNCT	_	_	8	punct	_	_
16	(	_	PUNCT	_	_	17	punct	_	SpaceAfter=No
17	M	_	ADJ	_	_	8	advmod	_	SpaceAfter=No
18	)	_	PUNCT	_	_	17	punct	_	_

# newdoc id = 1999_multi-mahjong_4.3.5
# sent_id = 270
# text = User's will be able to pick up a tile from the wall if it is their turn.
1	User's	_	NOUN	_	_	4	nsubj	_	_
2	will	_	AUX	_	_	4	aux	_	_
3	be	_	AUX	_	_	4	cop	_	_
4	able	_	ADJ	_	_	0	root	_	_
5	to	_	PART	_	_	6	mark	_	_
6	pick	_	VERB	_	_	4	xcomp	_	_
7	up	_	ADV	_	_	6	compound	_	_
8	a	_	DET	_	_	9	det	_	_
9	tile	_	NOUN	_	_	6	obj	_	_
10	from	_	ADP	_	_	12	case	_	_
11	the	_	DET	_	_	12	det	_	_
12	wall	_	NOUN	_	_	6	obl	_	_
13	if	_	SCONJ	_	_	15	mark	_	_
14	it	_	PRON	_	_	15	expl	_	_
15	is	_	VERB	_	_	6	advcl	_	_
16	their	_	DET	_	_	17	nmod	_	_
17	turn	_	NOUN	_	_	15	nsubj	_	SpaceAfter=No
18	.	_	PUNCT	_	_	4	punct	_	_

# sent_id = 271
# text = If they choose to pick up, the MultiMahjongClient must send this information to the MultiMahjongServer.
1	If	_	SCONJ	_	_	3	mark	_	_
2	they	_	PRON	_	_	3	nsubj	_	_
3	choose	_	VERB	_	_	11	advcl	_	_
4	to	_	PART	_	_	5	mark	_	_
5	pick	_	VERB	_	_	3	xcomp	_	_
6	up	_	ADV	_	_	5	compound	_	SpaceAfter=No
7	,	_	PUNCT	_	_	3	punct	_	_
8	the	_	DET	_	_	9	det	_	_
9	MultiMahjongClient	_	PROPN	_	_	11	nsubj	_	_
10	must	_	AUX	_	_	11	aux	_	_
11	send	_	VERB	_	_	0	root	_	_
12	this	_	DET	_	_	13	det	_	_
13	information	_	NOUN	_	_	11	obj	_	_
14	to	_	ADP	_	_	16	case	_	_
15	the	_	DET	_	_	16	det	_	_
16	MultiMahjongServer	_	PROPN	_	_	11	iobj	_	SpaceAfter=No
17	.	_	PUNCT	_	_	11	punct	_	_

# newdoc id = 2007_eirenefun7_5.2.2.60
# sent_id = 94
# text = The Cab radio shall provide a means for the driver to terminate calls which he is authorised to terminate (ie all calls except Railway emergency calls not initiated by the driver and shunting group calls). (M)
1	The	_	DET	_	_	3	det	_	_
2	Cab	_	NOUN	_	_	3	compound	_	_
3	radio	_	NOUN	_	_	5	nsubj	_	_
4	shall	_	AUX	_	_	5	aux	_	_
5	provide	_	VERB	_	_	0	root	_	_
6	a	_	DET	_	_	7	det	_	_
7	means	_	NOUN	_	_	5	obj	_	_
8	for	_	ADP	_	_	10	case	_	_
9	the	_	DET	_	_	10	det	_	_
10	driver	_	NOUN	_	_	5	iobj	_	_
11	to	_	PART	_	_	12	mark	_	_
12	terminate	_	VERB	_	_	7	acl	_	_
13	calls	_	NOUN	_	_	12	obj	_	_
14	which	_	PRON	_	_	19	obj	_	_
15	he	_	PRON	_	_	17	nsubj:pass	_	_
16	is	_	AUX	_	_	17	aux:pass	_	_
17	authorised	_	VERB	_	_	13	acl:relcl	_	_
18	to	_	PART	_	_	19	mark	_	_
19	terminate	_	VERB	_	_	17	xcomp	_	_
20	(	_	PUNCT	_	_	23	punct	_	SpaceAfter=No
21	ie	_	ADV	_	_	23	parataxis	_	_
22	all	_	DET	_	_	23	det	_	_
23	calls	_	NOUN	_	_	13	appos	_	_
24	except	_	ADP	_	_	27	case	_	_
25	Railway	_	NOUN	_	_	26	compound	_	_
26	emergency	_	NOUN	_	_	27	compound	_	_
27	calls	_	NOUN	_	_	23	nmod	_	_
28	not	_	PART	_	_	29	advmod	_	_
29	initiated	_	VERB	_	_	27	acl	_	_
30	by	_	ADP	_	_	32	case	_	_
31	the	_	DET	_	_	32	det	_	_
32	driver	_	NOUN	_	_	29	obl:agent	_	_
33	and	_	CCONJ	_	_	36	cc	_	_
34	shunting	_	NOUN	_	_	35	compound	_	_
35	group	_	NOUN	_	_	36	compound	_	_
36	calls	_	NOUN	_	_	27	conj	_	SpaceAfter=No
37	)	_	PUNCT	_	_	23	punct	_	SpaceAfter=No
38	.	_	PUNCT	_	_	5	punct	_	_
39	(	_	PUNCT	_	_	40	punct	_	SpaceAfter=No
40	M	_	ADJ	_	_	5	advmod	_	SpaceAfter=No
41	)	_	PUNCT	_	_	40	punct	_	_

# newdoc id = 2002_evlacorr_3.8.1
# sent_id = 41
# text = All users of the system shall login using some form of unique identification. (e.g., username and password)
1	All	_	DET	_	_	2	det	_	_
2	users	_	NOUN	_	_	7	nsubj	_	_
3	of	_	ADP	_	_	5	case	_	_
4	the	_	DET	_	_	5	det	_	_
5	system	_	NOUN	_	_	2	nmod	_	_
6	shall	_	AUX	_	_	7	aux	_	_
7	login	_	VERB	_	_	0	root	_	_
8	using	_	VERB	_	_	7	advcl	_	_
9	some	_	DET	_	_	10	det	_	_
10	form	_	NOUN	_	_	8	obj	_	_
11	of	_	ADP	_	_	13	case	_	_
12	unique	_	ADJ	_	_	13	amod	_	_
13	identification	_	NOUN	_	_	10	nmod	_	SpaceAfter=No
14	.	_	PUNCT	_	_	13	punct	_	_
15	(	_	PUNCT	_	_	18	punct	_	SpaceAfter=No
16	e.g.	_	ADV	_	_	18	parataxis	_	SpaceAfter=No
17	,	_	PUNCT	_	_	16	punct	_	_
18	username	_	NOUN	_	_	10	appos	_	_
19	and	_	CCONJ	_	_	20	cc	_	_
20	password	_	NOUN	_	_	18	conj	_	SpaceAfter=No
21	)	_	PUNCT	_	_	18	punct	_	_

# newdoc id = 2000_nasax38_3.2.6.2_4
# sent_id = 150
# text = If the FCP is configured as a triplex, and if the NEFU is not still active (3 NEs active total), and another failure in the FCP FCR is diagnosed, Redundancy Management shall [SRS284] mask out the processors on the failed FCR.
1	If	_	SCONJ	_	_	5	mark	_	_
2	the	_	DET	_	_	3	det	_	_
3	FCP	_	NOUN	_	_	5	nsubj:pass	_	_
4	is	_	AUX	_	_	5	aux:pass	_	_
5	configured	_	VERB	_	_	41	advcl	_	_
6	as	_	ADP	_	_	8	case	_	_
7	a	_	DET	_	_	8	det	_	_
8	triplex	_	NOUN	_	_	5	obl	_	SpaceAfter=No
9	,	_	PUNCT	_	_	17	punct	_	_
10	and	_	CCONJ	_	_	17	cc	_	_
11	if	_	SCONJ	_	_	17	mark	_	_
12	the	_	DET	_	_	13	det	_	_
13	NEFU	_	NOUN	_	_	17	nsubj	_	_
14	is	_	AUX	_	_	17	cop	_	_
15	not	_	PART	_	_	17	advmod	_	_
16	still	_	ADV	_	_	17	advmod	_	_
17	active	_	ADJ	_	_	5	conj	_	_
18	(	_	PUNCT	_	_	21	punct	_	SpaceAfter=No
19	3	_	NUM	_	_	20	nummod	_	_
20	NEs	_	NOUN	_	_	21	nsubj	_	_
21	active	_	ADJ	_	_	17	parataxis	_	_
22	total	_	NOUN	_	_	21	nmod	_	SpaceAfter=No
23	)	_	PUNCT	_	_	21	punct	_	SpaceAfter=No
24	,	_	PUNCT	_	_	33	punct	_	_
25	and	_	CCONJ	_	_	33	cc	_	_
26	another	_	DET	_	_	27	det	_	_
27	failure	_	NOUN	_	_	33	nsubj	_	_
28	in	_	ADP	_	_	31	case	_	_
29	the	_	DET	_	_	31	det	_	_
30	FCP	_	NOUN	_	_	31	nmod	_	_
31	FCR	_	NOUN	_	_	27	nmod	_	_
32	is	_	AUX	_	_	33	aux:pass	_	_
33	diagnosed	_	VERB	_	_	5	conj	_	SpaceAfter=No
34	,	_	PUNCT	_	_	33	punct	_	_
35	Redundancy	_	NOUN	_	_	36	nmod	_	_
36	Management	_	NOUN	_	_	41	nsubj	_	_
37	shall	_	AUX	_	_	41	aux	_	_
38	[	_	PUNCT	_	_	39	punct	_	SpaceAfter=No
39	SRS284	_	PROPN	_	_	36	appos	_	SpaceAfter=No
40	]	_	PUNCT	_	_	39	punct	_	_
41	mask	_	VERB	_	_	0	root	_	_
42	out	_	ADV	_	_	41	advmod	_	_
43	the	_	DET	_	_	44	det	_	_
44	processors	_	NOUN	_	_	41	obj	_	_
45	on	_	ADP	_	_	48	case	_	_
46	the	_	DET	_	_	48	det	_	_
47	failed	_	ADJ	_	_	48	amod	_	_
48	FCR	_	NOUN	_	_	44	nmod	_	SpaceAfter=No
49	.	_	PUNCT	_	_	41	punct	_	_

# sent_id = 151
# text = The NE will remain in the CT and no recovery will take place.
1	The	_	DET	_	_	2	det	_	_
2	NE	_	NOUN	_	_	4	nsubj	_	_
3	will	_	AUX	_	_	4	aux	_	_
4	remain	_	VERB	_	_	0	root	_	_
5	in	_	ADP	_	_	7	case	_	_
6	the	_	DET	_	_	7	det	_	_
7	CT	_	NOUN	_	_	4	obl	_	_
8	and	_	CCONJ	_	_	12	cc	_	_
9	no	_	DET	_	_	10	det	_	_
10	recovery	_	NOUN	_	_	12	nsubj	_	_
11	will	_	AUX	_	_	12	aux	_	_
12	take	_	VERB	_	_	4	conj	_	_
13	place	_	NOUN	_	_	12	obj	_	SpaceAfter=No
14	.	_	PUNCT	_	_	4	punct	_	_

# sent_id = 152
# text = Note that a failed FCR could be diagnosed using any method, including (but not limited to) Continuous BIT, ICP presence test, or NE syndrome analysis.
1	Note	_	VERB	_	_	0	root	_	_
2	that	_	SCONJ	_	_	8	mark	_	_
3	a	_	DET	_	_	5	det	_	_
4	failed	_	ADJ	_	_	5	amod	_	_
5	FCR	_	NOUN	_	_	8	nsubj:pass	_	_
6	could	_	AUX	_	_	8	aux	_	_
7	be	_	AUX	_	_	8	aux:pass	_	_
8	diagnosed	_	VERB	_	_	1	ccomp	_	_
9	using	_	VERB	_	_	8	advcl	_	_
10	any	_	DET	_	_	11	det	_	_
11	method	_	NOUN	_	_	9	obj	_	SpaceAfter=No
12	,	_	PUNCT	_	_	21	punct	_	_
13	including	_	ADP	_	_	21	case	_	_
14	(	_	PUNCT	_	_	13	punct	_	SpaceAfter=No
15	but	_	CCONJ	_	_	21	cc	_	_
16	not	_	PART	_	_	17	advmod	_	_
17	limited	_	VERB	_	_	13	conj	_	_
18	to	_	ADP	_	_	21	case	_	SpaceAfter=No
19	)	_	PUNCT	_	_	18	punct	_	_
20	Continuous	_	ADJ	_	_	21	amod	_	_
21	BIT	_	NOUN	_	_	11	nmod	_	SpaceAfter=No
22	,	_	PUNCT	_	_	25	punct	_	_
23	ICP	_	NOUN	_	_	25	nmod	_	_
24	presence	_	NOUN	_	_	25	compound	_	_
25	test	_	NOUN	_	_	21	conj	_	SpaceAfter=No
26	,	_	PUNCT	_	_	30	punct	_	_
27	or	_	CCONJ	_	_	30	cc	_	_
28	NE	_	NOUN	_	_	29	nmod	_	_
29	syndrome	_	NOUN	_	_	30	nmod	_	_
30	analysis	_	NOUN	_	_	21	conj	_	SpaceAfter=No
31	.	_	PUNCT	_	_	1	punct	_	_

# newdoc id = 2007_wateruse_4.1.1.3_RW33
# sent_id = 184
# text = Have map be able to show quantity of pumpage.
1	Have	_	VERB	_	_	0	root	_	_
2	map	_	NOUN	_	_	4	nsubj	_	_
3	be	_	AUX	_	_	4	cop	_	_
4	able	_	ADJ	_	_	1	ccomp	_	_
5	to	_	PART	_	_	6	mark	_	_
6	show	_	VERB	_	_	4	xcomp	_	_
7	quantity	_	NOUN	_	_	6	obj	_	_
8	of	_	ADP	_	_	9	case	_	_
9	pumpage	_	NOUN	_	_	7	nmod	_	SpaceAfter=No
10	.	_	PUNCT	_	_	1	punct	_	_

# sent_id = 185
# text = Hover over or click a point in the map and see the average rolling 12, peak month, and max month compared to the pumpage of the well.
1	Hover	_	VERB	_	_	0	root	_	_
2	over	_	ADP	_	_	6	case	_	_
3	or	_	CCONJ	_	_	6	cc	_	_
4	click	_	VERB	_	_	1	conj	_	_
5	a	_	DET	_	_	6	det	_	_
6	point	_	NOUN	_	_	1	obl	_	_
7	in	_	ADP	_	_	9	case	_	_
8	the	_	DET	_	_	9	det	_	_
9	map	_	NOUN	_	_	6	nmod	_	_
10	and	_	CCONJ	_	_	11	cc	_	_
11	see	_	VERB	_	_	1	conj	_	_
12	the	_	DET	_	_	15	det	_	_
13	average	_	NOUN	_	_	15	amod	_	_
14	rolling	_	ADJ	_	_	15	amod	_	_
15	12	_	NUM	_	_	11	obj	_	SpaceAfter=No
16	,	_	PUNCT	_	_	18	punct	_	_
17	peak	_	ADJ	_	_	18	amod	_	_
18	month	_	NOUN	_	_	15	conj	_	SpaceAfter=No
19	,	_	PUNCT	_	_	22	punct	_	_
20	and	_	CCONJ	_	_	22	cc	_	_
21	max	_	ADJ	_	_	22	amod	_	_
22	month	_	NOUN	_	_	15	conj	_	_
23	compared	_	VERB	_	_	15	acl	_	_
24	to	_	ADP	_	_	26	case	_	_
25	the	_	DET	_	_	26	det	_	_
26	pumpage	_	NOUN	_	_	23	iobj	_	_
27	of	_	ADP	_	_	29	case	_	_
28	the	_	DET	_	_	29	det	_	_
29	well	_	NOUN	_	_	26	nmod	_	SpaceAfter=No
30	.	_	PUNCT	_	_	1	punct	_	_

# sent_id = 186
# text = Also get the cumulative quantities for an area you enter manually.
1	Also	_	ADV	_	_	2	advmod	_	_
2	get	_	VERB	_	_	0	root	_	_
3	the	_	DET	_	_	5	det	_	_
4	cumulative	_	ADJ	_	_	5	amod	_	_
5	quantities	_	NOUN	_	_	2	obj	_	_
6	for	_	ADP	_	_	8	case	_	_
7	an	_	DET	_	_	8	det	_	_
8	area	_	NOUN	_	_	5	nmod	_	_
9	you	_	PRON	_	_	10	nsubj	_	_
10	enter	_	VERB	_	_	8	acl:relcl	_	_
11	manually	_	ADV	_	_	10	advmod	_	SpaceAfter=No
12	.	_	PUNCT	_	_	2	punct	_	_

# newdoc id = 1999_tcs_3.1.1.2_par5
# sent_id = 276
# text = For recovery from abnormal termination, TCS shall prompt the operator to select the type of recovery to be executed: (1)Resume in the Same Modes And Data; (2)Resume in the Same Modes but Review and Modify the Command Data as Necessary; or, (3) Perform a Command Shutdown and Startup Via the Normal Startup Mode. [SSS031]
1	For	_	ADP	_	_	2	case	_	_
2	recovery	_	NOUN	_	_	9	obl	_	_
3	from	_	ADP	_	_	5	case	_	_
4	abnormal	_	ADJ	_	_	5	amod	_	_
5	termination	_	NOUN	_	_	2	nmod	_	SpaceAfter=No
6	,	_	PUNCT	_	_	2	punct	_	_
7	TCS	_	PROPN	_	_	9	nsubj	_	_
8	shall	_	AUX	_	_	9	aux	_	_
9	prompt	_	VERB	_	_	0	root	_	_
10	the	_	DET	_	_	11	det	_	_
11	operator	_	NOUN	_	_	9	obj	_	_
12	to	_	PART	_	_	13	mark	_	_
13	select	_	VERB	_	_	9	xcomp	_	_
14	the	_	DET	_	_	15	det	_	_
15	type	_	NOUN	_	_	13	obj	_	_
16	of	_	ADP	_	_	17	case	_	_
17	recovery	_	NOUN	_	_	15	nmod	_	_
18	to	_	ADP	_	_	20	mark	_	_
19	be	_	AUX	_	_	20	aux:pass	_	_
20	executed	_	VERB	_	_	15	acl	_	SpaceAfter=No
21	:	_	PUNCT	_	_	25	punct	_	_
22	(	_	PUNCT	_	_	23	punct	_	SpaceAfter=No
23	1	_	NUM	_	_	25	nummod	_	SpaceAfter=No
24	)	_	PUNCT	_	_	23	punct	_	SpaceAfter=No
25	Resume	_	VERB	_	_	13	parataxis	_	_
26	in	_	ADP	_	_	29	case	_	_
27	the	_	DET	_	_	29	det	_	_
28	Same	_	ADJ	_	_	29	amod	_	_
29	Modes	_	NOUN	_	_	25	obl	_	_
30	And	_	CCONJ	_	_	31	cc	_	_
31	Data	_	NOUN	_	_	29	conj	_	SpaceAfter=No
32	;	_	PUNCT	_	_	36	punct	_	_
33	(	_	PUNCT	_	_	34	punct	_	SpaceAfter=No
34	2	_	NUM	_	_	36	nummod	_	SpaceAfter=No
35	)	_	PUNCT	_	_	34	punct	_	SpaceAfter=No
36	Resume	_	VERB	_	_	25	conj	_	_
37	in	_	ADP	_	_	40	case	_	_
38	the	_	DET	_	_	40	det	_	_
39	Same	_	ADJ	_	_	40	amod	_	_
40	Modes	_	NOUN	_	_	36	obl	_	_
41	but	_	CCONJ	_	_	42	cc	_	_
42	Review	_	VERB	_	_	36	conj	_	_
43	and	_	CCONJ	_	_	44	cc	_	_
44	Modify	_	VERB	_	_	42	conj	_	_
45	the	_	DET	_	_	47	det	_	_
46	Command	_	NOUN	_	_	47	nmod	_	_
47	Data	_	NOUN	_	_	44	obj	_	_
48	as	_	SCONJ	_	_	49	mark	_	_
49	Necessary	_	ADJ	_	_	42	advcl	_	SpaceAfter=No
50	;	_	PUNCT	_	_	56	punct	_	_
51	or	_	CCONJ	_	_	56	cc	_	SpaceAfter=No
52	,	_	PUNCT	_	_	51	punct	_	_
53	(	_	PUNCT	_	_	54	punct	_	SpaceAfter=No
54	3	_	NUM	_	_	56	nummod	_	SpaceAfter=No
55	)	_	PUNCT	_	_	54	punct	_	_
56	Perform	_	VERB	_	_	25	conj	_	_
57	a	_	DET	_	_	59	det	_	_
58	Command	_	NOUN	_	_	59	compound	_	_
59	Shutdown	_	NOUN	_	_	56	obj	_	_
60	and	_	CCONJ	_	_	61	cc	_	_
61	Startup	_	NOUN	_	_	59	conj	_	_
62	Via	_	ADP	_	_	66	case	_	_
63	the	_	DET	_	_	66	det	_	_
64	Normal	_	ADJ	_	_	66	amod	_	_
65	Startup	_	NOUN	_	_	66	compound	_	_
66	Mode	_	NOUN	_	_	56	obl	_	SpaceAfter=No
67	.	_	PUNCT	_	_	9	punct	_	_
68	[	_	PUNCT	_	_	69	punct	_	SpaceAfter=No
69	SSS031	_	PROPN	_	_	9	appos	_	SpaceAfter=No
70	]	_	PUNCT	_	_	69	punct	_	_

# newdoc id = 2001_npac_4.1.2.2_R4-13
# sent_id = 138
# text = NPAC SMS shall require one of the following data items to identify the Service Provider data to be modified: Service Provider ID or Service Provider Name
1	NPAC	_	PROPN	_	_	2	nmod	_	_
2	SMS	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	require	_	VERB	_	_	0	root	_	_
5	one	_	PRON	_	_	4	obj	_	_
6	of	_	ADP	_	_	10	case	_	_
7	the	_	DET	_	_	10	det	_	_
8	following	_	ADJ	_	_	10	amod	_	_
9	data	_	NOUN	_	_	10	compound	_	_
10	items	_	NOUN	_	_	5	nmod	_	_
11	to	_	PART	_	_	12	mark	_	_
12	identify	_	VERB	_	_	4	xcomp	_	_
13	the	_	DET	_	_	16	det	_	_
14	Service	_	NOUN	_	_	15	compound	_	_
15	Provider	_	NOUN	_	_	16	nmod	_	_
16	data	_	NOUN	_	_	12	obj	_	_
17	to	_	PART	_	_	19	mark	_	_
18	be	_	AUX	_	_	19	aux:pass	_	_
19	modified	_	VERB	_	_	16	acl	_	SpaceAfter=No
20	:	_	PUNCT	_	_	23	punct	_	_
21	Service	_	NOUN	_	_	22	compound	_	_
22	Provider	_	NOUN	_	_	23	nmod	_	_
23	ID	_	NOUN	_	_	4	parataxis	_	_
24	or	_	CCONJ	_	_	27	cc	_	_
25	Service	_	NOUN	_	_	26	compound	_	_
26	Provider	_	NOUN	_	_	27	nmod	_	_
27	Name	_	NOUN	_	_	23	conj	_	_

# sent_id = 139
# text = The Service Provider ID is required over the SOA to NPAC SMS interface and the NPAC SMS to Local SMS interface.
1	The	_	DET	_	_	4	det	_	_
2	Service	_	NOUN	_	_	3	compound	_	_
3	Provider	_	NOUN	_	_	4	nmod	_	_
4	ID	_	NOUN	_	_	6	nsubj:pass	_	_
5	is	_	AUX	_	_	6	aux:pass	_	_
6	required	_	VERB	_	_	0	root	_	_
7	over	_	ADP	_	_	13	case	_	_
8	the	_	DET	_	_	13	det	_	_
9	SOA	_	NOUN	_	_	13	compound	_	_
10	to	_	ADP	_	_	12	case	_	_
11	NPAC	_	PROPN	_	_	12	nmod	_	_
12	SMS	_	NOUN	_	_	9	nmod	_	_
13	interface	_	NOUN	_	_	6	obl	_	_
14	and	_	CCONJ	_	_	21	cc	_	_
15	the	_	DET	_	_	21	det	_	_
16	NPAC	_	PROPN	_	_	17	nmod	_	_
17	SMS	_	NOUN	_	_	21	compound	_	_
18	to	_	ADP	_	_	20	case	_	_
19	Local	_	ADJ	_	_	20	amod	_	_
20	SMS	_	NOUN	_	_	17	nmod	_	_
21	interface	_	NOUN	_	_	13	conj	_	SpaceAfter=No
22	.	_	PUNCT	_	_	6	punct	_	_

# newdoc id = 2001_hats_3.2.3.3.3_SRSreq122
# sent_id = 226
# text = The user shall be able to hide a set of selected displayed nodes.
1	The	_	DET	_	_	2	det	_	_
2	user	_	NOUN	_	_	5	nsubj	_	_
3	shall	_	AUX	_	_	5	aux	_	_
4	be	_	AUX	_	_	5	cop	_	_
5	able	_	ADJ	_	_	0	root	_	_
6	to	_	PART	_	_	7	mark	_	_
7	hide	_	VERB	_	_	5	xcomp	_	_
8	a	_	DET	_	_	9	det	_	_
9	set	_	NOUN	_	_	7	obj	_	_
10	of	_	ADP	_	_	13	case	_	_
11	selected	_	ADJ	_	_	13	amod	_	_
12	displayed	_	ADJ	_	_	13	amod	_	_
13	nodes	_	NOUN	_	_	9	nmod	_	SpaceAfter=No
14	.	_	PUNCT	_	_	5	punct	_	_

# sent_id = 227
# text = The HATS-GUI shall change the display by removing the selected nodes from the display and changing the parent and descendant nodes of the removed nodes to nodes with hidden descendants and parents, respectively.
1	The	_	DET	_	_	4	det	_	_
2	HATS	_	PROPN	_	_	4	nmod	_	SpaceAfter=No
3	-	_	PUNCT	_	_	4	punct	_	SpaceAfter=No
4	GUI	_	NOUN	_	_	6	nsubj	_	_
5	shall	_	AUX	_	_	6	aux	_	_
6	change	_	VERB	_	_	0	root	_	_
7	the	_	DET	_	_	8	det	_	_
8	display	_	NOUN	_	_	6	obj	_	_
9	by	_	SCONJ	_	_	10	mark	_	_
10	removing	_	VERB	_	_	6	advcl	_	_
11	the	_	DET	_	_	13	det	_	_
12	selected	_	ADJ	_	_	13	amod	_	_
13	nodes	_	NOUN	_	_	10	obj	_	_
14	from	_	ADP	_	_	16	case	_	_
15	the	_	DET	_	_	16	det	_	_
16	display	_	NOUN	_	_	10	obl	_	_
17	and	_	CCONJ	_	_	18	cc	_	_
18	changing	_	VERB	_	_	10	conj	_	_
19	the	_	DET	_	_	23	det	_	_
20	parent	_	ADJ	_	_	23	amod	_	_
21	and	_	CCONJ	_	_	22	cc	_	_
22	descendant	_	ADJ	_	_	20	conj	_	_
23	nodes	_	NOUN	_	_	18	obj	_	_
24	of	_	ADP	_	_	27	case	_	_
25	the	_	DET	_	_	27	det	_	_
26	removed	_	ADJ	_	_	27	amod	_	_
27	nodes	_	NOUN	_	_	23	nmod	_	_
28	to	_	ADP	_	_	29	case	_	_
29	nodes	_	NOUN	_	_	18	obl	_	_
30	with	_	ADP	_	_	32	case	_	_
31	hidden	_	ADJ	_	_	32	amod	_	_
32	descendants	_	NOUN	_	_	29	nmod	_	_
33	and	_	CCONJ	_	_	34	cc	_	_
34	parents	_	NOUN	_	_	32	conj	_	SpaceAfter=No
35	,	_	PUNCT	_	_	36	punct	_	_
36	respectively	_	ADV	_	_	18	advmod	_	SpaceAfter=No
37	.	_	PUNCT	_	_	6	punct	_	_

# newdoc id = 2001_ctcnetwork_tab23_C2C-MP-05
# sent_id = 35
# text = Each link displayed on the map shall be color coded to provide a graphical depiction of speeds.
1	Each	_	DET	_	_	2	det	_	_
2	link	_	NOUN	_	_	10	nsubj:pass	_	_
3	displayed	_	VERB	_	_	2	acl	_	_
4	on	_	ADP	_	_	6	case	_	_
5	the	_	DET	_	_	6	det	_	_
6	map	_	NOUN	_	_	3	obl	_	_
7	shall	_	AUX	_	_	10	aux	_	_
8	be	_	AUX	_	_	10	aux:pass	_	_
9	color	_	NOUN	_	_	10	obl	_	_
10	coded	_	VERB	_	_	0	root	_	_
11	to	_	PART	_	_	12	mark	_	_
12	provide	_	VERB	_	_	10	advcl	_	_
13	a	_	DET	_	_	15	det	_	_
14	graphical	_	ADJ	_	_	15	amod	_	_
15	depiction	_	NOUN	_	_	12	obj	_	_
16	of	_	ADP	_	_	17	case	_	_
17	speeds	_	NOUN	_	_	15	nmod	_	SpaceAfter=No
18	.	_	PUNCT	_	_	10	punct	_	_

# sent_id = 36
# text = A configuration file shall be provided to specify specific speed values.
1	A	_	DET	_	_	3	det	_	_
2	configuration	_	NOUN	_	_	3	compound	_	_
3	file	_	NOUN	_	_	6	nsubj:pass	_	_
4	shall	_	AUX	_	_	6	aux	_	_
5	be	_	AUX	_	_	6	aux:pass	_	_
6	provided	_	VERB	_	_	0	root	_	_
7	to	_	PART	_	_	8	mark	_	_
8	specify	_	VERB	_	_	6	advcl	_	_
9	specific	_	ADJ	_	_	11	amod	_	_
10	speed	_	NOUN	_	_	11	nmod	_	_
11	values	_	NOUN	_	_	8	obj	_	SpaceAfter=No
12	.	_	PUNCT	_	_	6	punct	_	_

# sent_id = 37
# text = The color coding shall be as follows: · Green - speeds > TBD MPH · Yellow - speeds between TBD and TBD MPH · Red – speeds below TBD MPH
1	The	_	DET	_	_	3	det	_	_
2	color	_	NOUN	_	_	3	compound	_	_
3	coding	_	NOUN	_	_	5	nsubj	_	_
4	shall	_	AUX	_	_	5	aux	_	_
5	be	_	VERB	_	_	0	root	_	_
6	as	_	SCONJ	_	_	7	mark	_	_
7	follows	_	VERB	_	_	5	advcl	_	SpaceAfter=No
8	:	_	PUNCT	_	_	10	punct	_	_
9	·	_	PUNCT	_	_	10	punct	_	_
10	Green	_	NOUN	_	_	5	parataxis	_	_
11	-	_	PUNCT	_	_	10	punct	_	_
12	speeds	_	NOUN	_	_	10	parataxis	_	_
13	>	_	SYM	_	_	14	advmod	_	_
14	TBD	_	NUM	_	_	15	nummod	_	_
15	MPH	_	NOUN	_	_	12	nmod	_	_
16	·	_	PUNCT	_	_	17	punct	_	_
17	Yellow	_	NOUN	_	_	10	list	_	_
18	-	_	PUNCT	_	_	17	punct	_	_
19	speeds	_	NOUN	_	_	17	parataxis	_	_
20	between	_	ADP	_	_	24	case	_	_
21	TBD	_	NUM	_	_	24	nummod	_	_
22	and	_	CCONJ	_	_	23	cc	_	_
23	TBD	_	NUM	_	_	21	conj	_	_
24	MPH	_	NOUN	_	_	19	nmod	_	_
25	·	_	PUNCT	_	_	26	punct	_	_
26	Red	_	NOUN	_	_	10	list	_	_
27	–	_	PUNCT	_	_	26	punct	_	_
28	speeds	_	NOUN	_	_	26	parataxis	_	_
29	below	_	ADP	_	_	31	case	_	_
30	TBD	_	NUM	_	_	31	nummod	_	_
31	MPH	_	NOUN	_	_	28	nmod	_	_

# newdoc id = 1999_tcs_3.1.1_par2
# sent_id = 121
# text = The Startup State shall be comprised of the following modes: Normal Startup Mode and Recovery Startup Mode. [SSS017]
1	The	_	DET	_	_	3	det	_	_
2	Startup	_	NOUN	_	_	3	compound	_	_
3	State	_	NOUN	_	_	6	nsubj:pass	_	_
4	shall	_	AUX	_	_	6	aux	_	_
5	be	_	AUX	_	_	6	aux:pass	_	_
6	comprised	_	VERB	_	_	0	root	_	_
7	of	_	ADP	_	_	10	case	_	_
8	the	_	DET	_	_	10	det	_	_
9	following	_	ADJ	_	_	10	amod	_	_
10	modes	_	NOUN	_	_	6	iobj	_	SpaceAfter=No
11	:	_	PUNCT	_	_	14	punct	_	_
12	Normal	_	ADJ	_	_	13	amod	_	_
13	Startup	_	NOUN	_	_	14	compound	_	_
14	Mode	_	NOUN	_	_	6	parataxis	_	_
15	and	_	CCONJ	_	_	18	cc	_	_
16	Recovery	_	NOUN	_	_	17	compound	_	_
17	Startup	_	NOUN	_	_	18	compound	_	_
18	Mode	_	NOUN	_	_	14	conj	_	SpaceAfter=No
19	.	_	PUNCT	_	_	6	punct	_	_
20	[	_	PUNCT	_	_	21	punct	_	SpaceAfter=No
21	SSS017	_	PROPN	_	_	6	appos	_	SpaceAfter=No
22	]	_	PUNCT	_	_	21	punct	_	_

# newdoc id = 2001_hats_3.1.1_SRSreq25
# sent_id = 68
# text = The HATS-GUI shall allow the user to select the colors for types of displayed nodes in a displayed graph.
1	The	_	DET	_	_	4	det	_	_
2	HATS	_	PROPN	_	_	4	nmod	_	SpaceAfter=No
3	-	_	PUNCT	_	_	4	punct	_	SpaceAfter=No
4	GUI	_	NOUN	_	_	6	nsubj	_	_
5	shall	_	AUX	_	_	6	aux	_	_
6	allow	_	VERB	_	_	0	root	_	_
7	the	_	DET	_	_	8	det	_	_
8	user	_	NOUN	_	_	6	obj	_	_
9	to	_	PART	_	_	10	mark	_	_
10	select	_	VERB	_	_	6	xcomp	_	_
11	the	_	DET	_	_	12	det	_	_
12	colors	_	NOUN	_	_	10	obj	_	_
13	for	_	ADP	_	_	14	case	_	_
14	types	_	NOUN	_	_	12	nmod	_	_
15	of	_	ADP	_	_	17	case	_	_
16	displayed	_	ADJ	_	_	17	amod	_	_
17	nodes	_	NOUN	_	_	14	nmod	_	_
18	in	_	ADP	_	_	21	case	_	_
19	a	_	DET	_	_	21	det	_	_
20	displayed	_	ADJ	_	_	21	amod	_	_
21	graph	_	NOUN	_	_	17	nmod	_	SpaceAfter=No
22	.	_	PUNCT	_	_	6	punct	_	_

# sent_id = 69
# text = At a minimum, the system shall provide eight colors (red, yellow, white, black, green, blue, orange, and violet) for displayed nodes.
1	At	_	ADP	_	_	3	case	_	_
2	a	_	DET	_	_	3	det	_	_
3	minimum	_	NOUN	_	_	8	obl	_	SpaceAfter=No
4	,	_	PUNCT	_	_	3	punct	_	_
5	the	_	DET	_	_	6	det	_	_
6	system	_	NOUN	_	_	8	nsubj	_	_
7	shall	_	AUX	_	_	8	aux	_	_
8	provide	_	VERB	_	_	0	root	_	_
9	eight	_	NUM	_	_	10	nummod	_	_
10	colors	_	NOUN	_	_	8	obj	_	_
11	(	_	PUNCT	_	_	12	punct	_	SpaceAfter=No
12	red	_	NOUN	_	_	10	appos	_	SpaceAfter=No
13	,	_	PUNCT	_	_	14	punct	_	_
14	yellow	_	NOUN	_	_	12	conj	_	SpaceAfter=No
15	,	_	PUNCT	_	_	16	punct	_	_
16	white	_	NOUN	_	_	12	conj	_	SpaceAfter=No
17	,	_	PUNCT	_	_	18	punct	_	_
18	black	_	NOUN	_	_	12	conj	_	SpaceAfter=No
19	,	_	PUNCT	_	_	20	punct	_	_
20	green	_	NOUN	_	_	12	conj	_	SpaceAfter=No
21	,	_	PUNCT	_	_	22	punct	_	_
22	blue	_	NOUN	_	_	12	conj	_	SpaceAfter=No
23	,	_	PUNCT	_	_	24	punct	_	_
24	orange	_	NOUN	_	_	12	conj	_	SpaceAfter=No
25	,	_	PUNCT	_	_	27	punct	_	_
26	and	_	CCONJ	_	_	27	cc	_	_
27	violet	_	NOUN	_	_	12	conj	_	SpaceAfter=No
28	)	_	PUNCT	_	_	12	punct	_	_
29	for	_	ADP	_	_	31	case	_	_
30	displayed	_	ADJ	_	_	31	amod	_	_
31	nodes	_	NOUN	_	_	10	nmod	_	SpaceAfter=No
32	.	_	PUNCT	_	_	8	punct	_	_

# newdoc id = 2015_CS4311_3.2.3.2_Req87
# sent_id = 77
# text = When the user selects “Submit” on the “Create Flight Plan” screen, the FPMS shall do the following: a. Check that all entries are valid according to any constraints given in Table 2; b. Save the flight plan in the knowledge base, and c. Submit the flight plan file to the TGF for approval.
1	When	_	SCONJ	_	_	4	mark	_	_
2	the	_	DET	_	_	3	det	_	_
3	user	_	NOUN	_	_	4	nsubj	_	_
4	selects	_	VERB	_	_	20	advcl	_	_
5	“	_	PUNCT	_	_	6	punct	_	SpaceAfter=No
6	Submit	_	VERB	_	_	4	obj	_	SpaceAfter=No
7	”	_	PUNCT	_	_	6	punct	_	_
8	on	_	ADP	_	_	15	case	_	_
9	the	_	DET	_	_	15	det	_	_
10	“	_	PUNCT	_	_	11	punct	_	SpaceAfter=No
11	Create	_	VERB	_	_	15	compound	_	_
12	Flight	_	NOUN	_	_	13	compound	_	_
13	Plan	_	NOUN	_	_	11	obj	_	SpaceAfter=No
14	”	_	PUNCT	_	_	11	punct	_	_
15	screen	_	NOUN	_	_	4	obl	_	SpaceAfter=No
16	,	_	PUNCT	_	_	4	punct	_	_
17	the	_	DET	_	_	18	det	_	_
18	FPMS	_	PROPN	_	_	20	nsubj	_	_
19	shall	_	AUX	_	_	20	aux	_	_
20	do	_	VERB	_	_	0	root	_	_
21	the	_	DET	_	_	22	det	_	_
22	following	_	NOUN	_	_	20	obj	_	SpaceAfter=No
23	:	_	PUNCT	_	_	26	punct	_	_
24	a	_	NUM	_	_	26	nummod	_	SpaceAfter=No
25	.	_	PUNCT	_	_	24	punct	_	_
26	Check	_	VERB	_	_	20	parataxis	_	_
27	that	_	SCONJ	_	_	31	mark	_	_
28	all	_	DET	_	_	29	det	_	_
29	entries	_	NOUN	_	_	31	nsubj	_	_
30	are	_	AUX	_	_	31	cop	_	_
31	valid	_	ADJ	_	_	26	ccomp	_	_
32	according	_	VERB	_	_	35	case	_	_
33	to	_	ADP	_	_	32	fixed	_	_
34	any	_	DET	_	_	35	det	_	_
35	constraints	_	NOUN	_	_	31	obl	_	_
36	given	_	VERB	_	_	35	acl	_	_
37	in	_	ADP	_	_	38	case	_	_
38	Table	_	NOUN	_	_	36	obl	_	_
39	2	_	NUM	_	_	38	flat	_	SpaceAfter=No
40	;	_	PUNCT	_	_	43	punct	_	_
41	b	_	NUM	_	_	43	nummod	_	SpaceAfter=No
42	.	_	PUNCT	_	_	41	punct	_	_
43	Save	_	VERB	_	_	26	conj	_	_
44	the	_	DET	_	_	46	det	_	_
45	flight	_	NOUN	_	_	46	compound	_	_
46	plan	_	NOUN	_	_	43	obj	_	_
47	in	_	ADP	_	_	50	case	_	_
48	the	_	DET	_	_	50	det	_	_
49	knowledge	_	NOUN	_	_	50	compound	_	_
50	base	_	NOUN	_	_	43	obl	_	SpaceAfter=No
51	,	_	PUNCT	_	_	55	punct	_	_
52	and	_	CCONJ	_	_	55	cc	_	_
53	c	_	NUM	_	_	55	nummod	_	SpaceAfter=No
54	.	_	PUNCT	_	_	53	punct	_	_
55	Submit	_	VERB	_	_	26	conj	_	_
56	the	_	DET	_	_	59	det	_	_
57	flight	_	NOUN	_	_	58	compound	_	_
58	plan	_	NOUN	_	_	59	nmod	_	_
59	file	_	NOUN	_	_	55	obj	_	_
60	to	_	ADP	_	_	62	case	_	_
61	the	_	DET	_	_	62	det	_	_
62	TGF	_	PROPN	_	_	55	obl	_	_
63	for	_	ADP	_	_	64	case	_	_
64	approval	_	NOUN	_	_	55	obl	_	SpaceAfter=No
65	.	_	PUNCT	_	_	20	punct	_	_

# newdoc id = 2001_npac_6.4.2_AR6-2
# sent_id = 64
# text = 20% of all downloads as specified in R6-28.1, R6-28.2, R6-29.1 and R6-29.2 will be processed via range activations.
1	20	_	NUM	_	_	2	nummod	_	SpaceAfter=No
2	%	_	SYM	_	_	18	nsubj:pass	_	_
3	of	_	ADP	_	_	5	case	_	_
4	all	_	DET	_	_	5	det	_	_
5	downloads	_	NOUN	_	_	2	nmod	_	_
6	as	_	SCONJ	_	_	7	mark	_	_
7	specified	_	VERB	_	_	2	acl	_	_
8	in	_	ADP	_	_	9	case	_	_
9	R6-28.1	_	PROPN	_	_	7	obl	_	SpaceAfter=No
10	,	_	PUNCT	_	_	11	punct	_	_
11	R6-28.2	_	PROPN	_	_	9	conj	_	SpaceAfter=No
12	,	_	PUNCT	_	_	13	punct	_	_
13	R6-29.1	_	PROPN	_	_	9	conj	_	_
14	and	_	CCONJ	_	_	15	cc	_	_
15	R6-29.2	_	PROPN	_	_	9	conj	_	_
16	will	_	AUX	_	_	18	aux	_	_
17	be	_	AUX	_	_	18	aux:pass	_	_
18	processed	_	VERB	_	_	0	root	_	_
19	via	_	ADP	_	_	21	case	_	_
20	range	_	NOUN	_	_	21	compound	_	_
21	activations	_	NOUN	_	_	18	obl	_	SpaceAfter=No
22	.	_	PUNCT	_	_	18	punct	_	_

# newdoc id = 1998_themas_3.1.2.1
# sent_id = 187
# text = When the THEMAS system is initialized, it shall first turn off all the heating and cooling units.
1	When	_	SCONJ	_	_	6	mark	_	_
2	the	_	DET	_	_	4	det	_	_
3	THEMAS	_	PROPN	_	_	4	compound	_	_
4	system	_	NOUN	_	_	6	nsubj:pass	_	_
5	is	_	AUX	_	_	6	aux:pass	_	_
6	initialized	_	VERB	_	_	11	advcl	_	SpaceAfter=No
7	,	_	PUNCT	_	_	6	punct	_	_
8	it	_	PRON	_	_	11	nsubj	_	_
9	shall	_	AUX	_	_	11	aux	_	_
10	first	_	ADV	_	_	11	advmod	_	_
11	turn	_	VERB	_	_	0	root	_	_
12	off	_	ADV	_	_	11	compound	_	_
13	all	_	DET	_	_	15	det	_	_
14	the	_	DET	_	_	15	det	_	_
15	heating	_	NOUN	_	_	18	compound	_	_
16	and	_	CCONJ	_	_	17	cc	_	_
17	cooling	_	NOUN	_	_	15	conj	_	_
18	units	_	NOUN	_	_	11	obj	_	SpaceAfter=No
19	.	_	PUNCT	_	_	11	punct	_	_

# sent_id = 188
# text = Then , it shall check all the thermostats and determine if any thermostat’s settings require a heating or cooling unit to be turned on back on.
1	Then	_	ADV	_	_	5	advmod	_	_
2	,	_	PUNCT	_	_	1	punct	_	_
3	it	_	PRON	_	_	5	nsubj	_	_
4	shall	_	AUX	_	_	5	aux	_	_
5	check	_	VERB	_	_	0	root	_	_
6	all	_	DET	_	_	8	det	_	_
7	the	_	DET	_	_	8	det	_	_
8	thermostats	_	NOUN	_	_	5	obj	_	_
9	and	_	CCONJ	_	_	10	cc	_	_
10	determine	_	VERB	_	_	5	conj	_	_
11	if	_	SCONJ	_	_	16	mark	_	_
12	any	_	DET	_	_	15	det	_	_
13	thermostat	_	NOUN	_	_	15	nmod	_	SpaceAfter=No
14	’s	_	PART	_	_	13	case	_	_
15	settings	_	NOUN	_	_	16	nsubj	_	_
16	require	_	VERB	_	_	10	ccomp	_	_
17	a	_	DET	_	_	21	det	_	_
18	heating	_	NOUN	_	_	21	compound	_	_
19	or	_	CCONJ	_	_	20	cc	_	_
20	cooling	_	NOUN	_	_	18	conj	_	_
21	unit	_	NOUN	_	_	16	obj	_	_
22	to	_	PART	_	_	24	mark	_	_
23	be	_	AUX	_	_	24	aux:pass	_	_
24	turned	_	VERB	_	_	16	xcomp	_	_
25	on	_	ADV	_	_	27	reparandum	_	_
26	back	_	ADV	_	_	24	advmod	_	_
27	on	_	ADV	_	_	24	compound	_	SpaceAfter=No
28	.	_	PUNCT	_	_	5	punct	_	_

# newdoc id = 1998_ALQ-172_3.1.3
# sent_id = 113
# text = The integrated aircraft system, excluding the Group B, shall have a service life of 30,000 hours using the AC-130U and MC-130H System Specification defined mission profiles.
1	The	_	DET	_	_	4	det	_	_
2	integrated	_	ADJ	_	_	4	amod	_	_
3	aircraft	_	NOUN	_	_	4	compound	_	_
4	system	_	NOUN	_	_	12	nsubj	_	SpaceAfter=No
5	,	_	PUNCT	_	_	8	punct	_	_
6	excluding	_	VERB	_	_	8	case	_	_
7	the	_	DET	_	_	8	det	_	_
8	Group	_	NOUN	_	_	4	nmod	_	_
9	B	_	NOUN	_	_	8	flat	_	SpaceAfter=No
10	,	_	PUNCT	_	_	8	punct	_	_
11	shall	_	AUX	_	_	12	aux	_	_
12	have	_	VERB	_	_	0	root	_	_
13	a	_	DET	_	_	15	det	_	_
14	service	_	NOUN	_	_	15	compound	_	_
15	life	_	NOUN	_	_	12	obj	_	_
16	of	_	ADP	_	_	18	case	_	_
17	30,000	_	NUM	_	_	18	nummod	_	_
18	hours	_	NOUN	_	_	15	nmod	_	_
19	using	_	VERB	_	_	12	advcl	_	_
20	the	_	DET	_	_	28	det	_	_
21	AC-130U	_	PROPN	_	_	24	compound	_	_
22	and	_	CCONJ	_	_	23	cc	_	_
23	MC-130H	_	PROPN	_	_	21	conj	_	_
24	System	_	NOUN	_	_	25	compound	_	_
25	Specification	_	NOUN	_	_	26	obl:agent	_	_
26	defined	_	VERB	_	_	28	acl	_	_
27	mission	_	NOUN	_	_	28	compound	_	_
28	profiles	_	NOUN	_	_	19	obj	_	SpaceAfter=No
29	.	_	PUNCT	_	_	12	punct	_	_

# sent_id = 114
# text = New, modified, and affected structure shall be designed to achieve the desired service life.
1	New	_	ADJ	_	_	7	amod	_	SpaceAfter=No
2	,	_	PUNCT	_	_	3	punct	_	_
3	modified	_	ADJ	_	_	1	conj	_	SpaceAfter=No
4	,	_	PUNCT	_	_	6	punct	_	_
5	and	_	CCONJ	_	_	6	cc	_	_
6	affected	_	ADJ	_	_	3	conj	_	_
7	structure	_	NOUN	_	_	10	nsubj:pass	_	_
8	shall	_	AUX	_	_	10	aux	_	_
9	be	_	AUX	_	_	10	aux:pass	_	_
10	designed	_	VERB	_	_	0	root	_	_
11	to	_	PART	_	_	12	mark	_	_
12	achieve	_	VERB	_	_	10	xcomp	_	_
13	the	_	DET	_	_	16	det	_	_
14	desired	_	ADJ	_	_	16	amod	_	_
15	service	_	NOUN	_	_	16	compound	_	_
16	life	_	NOUN	_	_	12	obj	_	SpaceAfter=No
17	.	_	PUNCT	_	_	10	punct	_	_

# sent_id = 115
# text = Installation of the Enhanced ALQ-172 and LBJ shall not shorten the service lives of the AC-130U and MC-130H aircraft.
1	Installation	_	NOUN	_	_	10	nsubj	_	_
2	of	_	ADP	_	_	5	case	_	_
3	the	_	DET	_	_	5	det	_	_
4	Enhanced	_	ADJ	_	_	5	amod	_	_
5	ALQ-172	_	PROPN	_	_	1	nmod	_	_
6	and	_	CCONJ	_	_	7	cc	_	_
7	LBJ	_	NOUN	_	_	5	conj	_	_
8	shall	_	AUX	_	_	10	aux	_	_
9	not	_	PART	_	_	10	advmod	_	_
10	shorten	_	VERB	_	_	0	root	_	_
11	the	_	DET	_	_	13	det	_	_
12	service	_	NOUN	_	_	13	compound	_	_
13	lives	_	NOUN	_	_	10	obj	_	_
14	of	_	ADP	_	_	16	case	_	_
15	the	_	DET	_	_	16	det	_	_
16	AC-130U	_	PROPN	_	_	19	compound	_	_
17	and	_	CCONJ	_	_	18	cc	_	_
18	MC-130H	_	PROPN	_	_	16	conj	_	_
19	aircraft	_	NOUN	_	_	13	nmod	_	SpaceAfter=No
20	.	_	PUNCT	_	_	10	punct	_	_

# newdoc id = 1998_themas_3.1.1.5.1
# sent_id = 142
# text = The THEMAS system shall ensure the temperature reported by a given thermostat shall not exceed a maximum deviation value of 3 degrees Fahrenheit.
1	The	_	DET	_	_	3	det	_	_
2	THEMAS	_	PROPN	_	_	3	compound	_	_
3	system	_	NOUN	_	_	5	nsubj	_	_
4	shall	_	AUX	_	_	5	aux	_	_
5	ensure	_	VERB	_	_	0	root	_	_
6	the	_	DET	_	_	7	det	_	_
7	temperature	_	NOUN	_	_	15	nsubj	_	_
8	reported	_	VERB	_	_	7	acl	_	_
9	by	_	ADP	_	_	12	case	_	_
10	a	_	DET	_	_	12	det	_	_
11	given	_	ADJ	_	_	12	amod	_	_
12	thermostat	_	NOUN	_	_	8	obl	_	_
13	shall	_	AUX	_	_	15	aux	_	_
14	not	_	PART	_	_	15	advmod	_	_
15	exceed	_	VERB	_	_	5	ccomp	_	_
16	a	_	DET	_	_	19	det	_	_
17	maximum	_	ADJ	_	_	19	amod	_	_
18	deviation	_	NOUN	_	_	19	nmod	_	_
19	value	_	NOUN	_	_	15	obj	_	_
20	of	_	ADP	_	_	22	case	_	_
21	3	_	NUM	_	_	22	nummod	_	_
22	degrees	_	NOUN	_	_	19	nmod	_	_
23	Fahrenheit	_	PROPN	_	_	22	compound	_	SpaceAfter=No
24	.	_	PUNCT	_	_	5	punct	_	_

# newdoc id = 2015_CS4311_3.2.3.2_Req77
# sent_id = 189
# text = When the user selects “Custom Route,” the FPMS shall display the “Custom Route” screen, as shown in Fig. 4, with the following fields populated from the flight plan data entries: a) Departure time b) Speed c) Departure point city, latitude, and longitude d) Departure point true course and distance are blank e) Destination city, latitude and longitude
1	When	_	SCONJ	_	_	4	mark	_	_
2	the	_	DET	_	_	3	det	_	_
3	user	_	NOUN	_	_	4	nsubj	_	_
4	selects	_	VERB	_	_	13	advcl	_	_
5	“	_	PUNCT	_	_	7	punct	_	SpaceAfter=No
6	Custom	_	ADJ	_	_	7	amod	_	_
7	Route	_	NOUN	_	_	4	obj	_	SpaceAfter=No
8	,	_	PUNCT	_	_	7	punct	_	SpaceAfter=No
9	”	_	PUNCT	_	_	7	punct	_	_
10	the	_	DET	_	_	11	det	_	_
11	FPMS	_	PROPN	_	_	13	nsubj	_	_
12	shall	_	AUX	_	_	13	aux	_	_
13	display	_	VERB	_	_	0	root	_	_
14	the	_	DET	_	_	19	det	_	_
15	“	_	PUNCT	_	_	17	punct	_	SpaceAfter=No
16	Custom	_	ADJ	_	_	17	amod	_	_
17	Route	_	NOUN	_	_	19	compound	_	SpaceAfter=No
18	”	_	PUNCT	_	_	17	punct	_	_
19	screen	_	NOUN	_	_	13	obj	_	SpaceAfter=No
20	,	_	PUNCT	_	_	22	punct	_	_
21	as	_	SCONJ	_	_	22	mark	_	_
22	shown	_	VERB	_	_	13	advcl	_	_
23	in	_	ADP	_	_	24	case	_	_
24	Fig.	_	NOUN	_	_	22	obl	_	_
25	4	_	NUM	_	_	24	flat	_	SpaceAfter=No
26	,	_	PUNCT	_	_	22	punct	_	_
27	with	_	ADP	_	_	30	case	_	_
28	the	_	DET	_	_	30	det	_	_
29	following	_	ADJ	_	_	30	amod	_	_
30	fields	_	NOUN	_	_	19	nmod	_	_
31	populated	_	VERB	_	_	30	acl	_	_
32	from	_	ADP	_	_	37	case	_	_
33	the	_	DET	_	_	37	det	_	_
34	flight	_	NOUN	_	_	35	compound	_	_
35	plan	_	NOUN	_	_	37	nmod	_	_
36	data	_	NOUN	_	_	37	nmod	_	_
37	entries	_	NOUN	_	_	31	obl	_	SpaceAfter=No
38	:	_	PUNCT	_	_	42	punct	_	_
39	a	_	NUM	_	_	42	nummod	_	SpaceAfter=No
40	)	_	PUNCT	_	_	39	punct	_	_
41	Departure	_	NOUN	_	_	42	nmod	_	_
42	time	_	NOUN	_	_	13	parataxis	_	_
43	b	_	NUM	_	_	45	nummod	_	SpaceAfter=No
44	)	_	PUNCT	_	_	43	punct	_	_
45	Speed	_	NOUN	_	_	42	list	_	_
46	c	_	NUM	_	_	50	nummod	_	SpaceAfter=No
47	)	_	PUNCT	_	_	46	punct	_	_
48	Departure	_	NOUN	_	_	49	nmod	_	_
49	point	_	NOUN	_	_	50	nmod	_	_
50	city	_	NOUN	_	_	42	list	_	SpaceAfter=No
51	,	_	PUNCT	_	_	52	punct	_	_
52	latitude	_	NOUN	_	_	50	conj	_	SpaceAfter=No
53	,	_	PUNCT	_	_	55	punct	_	_
54	and	_	CCONJ	_	_	55	cc	_	_
55	longitude	_	NOUN	_	_	50	conj	_	_
56	d	_	NUM	_	_	65	nummod	_	SpaceAfter=No
57	)	_	PUNCT	_	_	56	punct	_	_
58	Departure	_	NOUN	_	_	59	nmod	_	_
59	point	_	NOUN	_	_	61	nmod	_	_
60	true	_	ADJ	_	_	61	amod	_	_
61	course	_	NOUN	_	_	65	nsubj	_	_
62	and	_	CCONJ	_	_	63	cc	_	_
63	distance	_	NOUN	_	_	61	conj	_	_
64	are	_	AUX	_	_	65	cop	_	_
65	blank	_	ADJ	_	_	42	list	_	_
66	e	_	NUM	_	_	69	nummod	_	SpaceAfter=No
67	)	_	PUNCT	_	_	66	punct	_	_
68	Destination	_	NOUN	_	_	69	nmod	_	_
69	city	_	NOUN	_	_	42	list	_	SpaceAfter=No
70	,	_	PUNCT	_	_	71	punct	_	_
71	latitude	_	NOUN	_	_	69	conj	_	_
72	and	_	CCONJ	_	_	73	cc	_	_
73	longitude	_	NOUN	_	_	69	conj	_	_

# newdoc id = 2000_nasax38_3.2.1_12
# sent_id = 169
# text = System Initialization shall [SRS215] call an application initialization function to allow the application to (at least) create tasks, create communication sockets, initialize the vehicle mode, and initialize memory alignment allowance.
1	System	_	NOUN	_	_	2	nmod	_	_
2	Initialization	_	NOUN	_	_	7	nsubj	_	_
3	shall	_	AUX	_	_	7	aux	_	_
4	[	_	PUNCT	_	_	5	punct	_	SpaceAfter=No
5	SRS215	_	PROPN	_	_	2	appos	_	SpaceAfter=No
6	]	_	PUNCT	_	_	5	punct	_	_
7	call	_	VERB	_	_	0	root	_	_
8	an	_	DET	_	_	11	det	_	_
9	application	_	NOUN	_	_	10	nmod	_	_
10	initialization	_	NOUN	_	_	11	nmod	_	_
11	function	_	NOUN	_	_	7	obj	_	_
12	to	_	PART	_	_	13	mark	_	_
13	allow	_	VERB	_	_	7	xcomp	_	_
14	the	_	DET	_	_	15	det	_	_
15	application	_	NOUN	_	_	13	obj	_	_
16	to	_	PART	_	_	21	mark	_	_
17	(	_	PUNCT	_	_	18	punct	_	SpaceAfter=No
18	at	_	ADV	_	_	21	advmod	_	_
19	least	_	NOUN	_	_	18	fixed	_	SpaceAfter=No
20	)	_	PUNCT	_	_	18	punct	_	_
21	create	_	VERB	_	_	13	ccomp	_	_
22	tasks	_	NOUN	_	_	21	obj	_	SpaceAfter=No
23	,	_	PUNCT	_	_	24	punct	_	_
24	create	_	VERB	_	_	21	conj	_	_
25	communication	_	NOUN	_	_	26	nmod	_	_
26	sockets	_	NOUN	_	_	24	obj	_	SpaceAfter=No
27	,	_	PUNCT	_	_	28	punct	_	_
28	initialize	_	VERB	_	_	21	conj	_	_
29	the	_	DET	_	_	31	det	_	_
30	vehicle	_	NOUN	_	_	31	compound	_	_
31	mode	_	NOUN	_	_	28	obj	_	SpaceAfter=No
32	,	_	PUNCT	_	_	34	punct	_	_
33	and	_	CCONJ	_	_	34	cc	_	_
34	initialize	_	VERB	_	_	21	conj	_	_
35	memory	_	NOUN	_	_	36	compound	_	_
36	alignment	_	NOUN	_	_	37	nmod	_	_
37	allowance	_	NOUN	_	_	34	obj	_	SpaceAfter=No
38	.	_	PUNCT	_	_	7	punct	_	_

# newdoc id = 1999_tcs_3.2.1.1_par5
# sent_id = 99
# text = The TCS flight route planner shall include, as a minimum, the following flight planning tools: 1. Weight and balance take off data calculations. [SSS083] 2. Fuel Calculations. [SSS084] 3. Terrain avoidance warning for line of sight flights. [SSS085] 4. Minimum data link reception altitude calculations for line of sight flights. [SSS554] 5. Payload search area information such as: visual acuity range due to atmospheric conditions, diurnal transition periods for thermal imagery, and lunar and solar terrain shadowing. [SSS086] 6. Ability to designate flight corridors and restricted air space. [SSS087]
1	The	_	DET	_	_	2	det	_	_
2	TCS	_	PROPN	_	_	5	nmod	_	_
3	flight	_	NOUN	_	_	4	compound	_	_
4	route	_	NOUN	_	_	5	nmod	_	_
5	planner	_	NOUN	_	_	7	nsubj	_	_
6	shall	_	AUX	_	_	7	aux	_	_
7	include	_	VERB	_	_	0	root	_	SpaceAfter=No
8	,	_	PUNCT	_	_	11	punct	_	_
9	as	_	ADP	_	_	11	case	_	_
10	a	_	DET	_	_	11	det	_	_
11	minimum	_	NOUN	_	_	7	obl	_	SpaceAfter=No
12	,	_	PUNCT	_	_	11	punct	_	_
13	the	_	DET	_	_	17	det	_	_
14	following	_	ADJ	_	_	17	amod	_	_
15	flight	_	NOUN	_	_	16	compound	_	_
16	planning	_	NOUN	_	_	17	nmod	_	_
17	tools	_	NOUN	_	_	7	obj	_	SpaceAfter=No
18	:	_	PUNCT	_	_	7	punct	_	_
19	1	_	NUM	_	_	27	nummod	_	SpaceAfter=No
20	.	_	PUNCT	_	_	19	punct	_	_
21	Weight	_	NOUN	_	_	26	nmod	_	_
22	and	_	CCONJ	_	_	23	cc	_	_
23	balance	_	NOUN	_	_	21	conj	_	_
24	take	_	NOUN	_	_	21	nmod	_	_
25	off	_	X	_	_	24	goeswith	_	_
26	data	_	NOUN	_	_	27	nmod	_	_
27	calculations	_	NOUN	_	_	7	parataxis	_	SpaceAfter=No
28	.	_	PUNCT	_	_	27	punct	_	_
29	[	_	PUNCT	_	_	30	punct	_	SpaceAfter=No
30	SSS083	_	PROPN	_	_	27	appos	_	SpaceAfter=No
31	]	_	PUNCT	_	_	30	punct	_	_
32	2	_	NUM	_	_	35	nummod	_	SpaceAfter=No
33	.	_	PUNCT	_	_	32	punct	_	_
34	Fuel	_	NOUN	_	_	35	compound	_	_
35	Calculations	_	NOUN	_	_	27	list	_	SpaceAfter=No
36	.	_	PUNCT	_	_	35	punct	_	_
37	[	_	PUNCT	_	_	38	punct	_	SpaceAfter=No
38	SSS084	_	PROPN	_	_	35	appos	_	SpaceAfter=No
39	]	_	PUNCT	_	_	38	punct	_	_
40	3	_	NUM	_	_	44	nummod	_	SpaceAfter=No
41	.	_	PUNCT	_	_	40	punct	_	_
42	Terrain	_	NOUN	_	_	43	compound	_	_
43	avoidance	_	NOUN	_	_	44	compound	_	_
44	warning	_	NOUN	_	_	27	list	_	_
45	for	_	ADP	_	_	49	case	_	_
46	line	_	NOUN	_	_	49	compound	_	_
47	of	_	ADP	_	_	48	case	_	_
48	sight	_	NOUN	_	_	46	nmod	_	_
49	flights	_	NOUN	_	_	44	nmod	_	SpaceAfter=No
50	.	_	PUNCT	_	_	44	punct	_	_
51	[	_	PUNCT	_	_	52	punct	_	SpaceAfter=No
52	SSS085	_	PROPN	_	_	44	appos	_	SpaceAfter=No
53	]	_	PUNCT	_	_	52	punct	_	_
54	4	_	NUM	_	_	61	nummod	_	SpaceAfter=No
55	.	_	PUNCT	_	_	54	punct	_	_
56	Minimum	_	ADJ	_	_	60	amod	_	_
57	data	_	NOUN	_	_	58	compound	_	_
58	link	_	NOUN	_	_	59	nmod	_	_
59	reception	_	NOUN	_	_	60	nmod	_	_
60	altitude	_	NOUN	_	_	61	nmod	_	_
61	calculations	_	NOUN	_	_	27	list	_	_
62	for	_	ADP	_	_	66	case	_	_
63	line	_	NOUN	_	_	66	compound	_	_
64	of	_	ADP	_	_	65	case	_	_
65	sight	_	NOUN	_	_	63	nmod	_	_
66	flights	_	NOUN	_	_	61	nmod	_	SpaceAfter=No
67	.	_	PUNCT	_	_	61	punct	_	_
68	[	_	PUNCT	_	_	69	punct	_	SpaceAfter=No
69	SSS554	_	PROPN	_	_	61	appos	_	SpaceAfter=No
70	]	_	PUNCT	_	_	69	punct	_	_
71	5	_	NUM	_	_	76	nummod	_	SpaceAfter=No
72	.	_	PUNCT	_	_	71	punct	_	_
73	Payload	_	NOUN	_	_	75	nmod	_	_
74	search	_	NOUN	_	_	75	compound	_	_
75	area	_	NOUN	_	_	76	nmod	_	_
76	information	_	NOUN	_	_	27	list	_	_
77	such	_	ADP	_	_	82	case	_	_
78	as	_	ADP	_	_	77	fixed	_	SpaceAfter=No
79	:	_	PUNCT	_	_	82	punct	_	_
80	visual	_	ADJ	_	_	81	amod	_	_
81	acuity	_	NOUN	_	_	82	nmod	_	_
82	range	_	NOUN	_	_	76	nmod	_	_
83	due	_	ADP	_	_	86	case	_	_
84	to	_	ADP	_	_	83	fixed	_	_
85	atmospheric	_	ADJ	_	_	86	amod	_	_
86	conditions	_	NOUN	_	_	82	nmod	_	SpaceAfter=No
87	,	_	PUNCT	_	_	90	punct	_	_
88	diurnal	_	ADJ	_	_	90	amod	_	_
89	transition	_	NOUN	_	_	90	nmod	_	_
90	periods	_	NOUN	_	_	82	conj	_	_
91	for	_	ADP	_	_	93	case	_	_
92	thermal	_	ADJ	_	_	93	amod	_	_
93	imagery	_	NOUN	_	_	90	nmod	_	SpaceAfter=No
94	,	_	PUNCT	_	_	100	punct	_	_
95	and	_	CCONJ	_	_	100	cc	_	_
96	lunar	_	ADJ	_	_	100	amod	_	_
97	and	_	CCONJ	_	_	98	cc	_	_
98	solar	_	ADJ	_	_	96	conj	_	_
99	terrain	_	NOUN	_	_	100	nmod	_	_
100	shadowing	_	NOUN	_	_	82	conj	_	SpaceAfter=No
101	.	_	PUNCT	_	_	76	punct	_	_
102	[	_	PUNCT	_	_	103	punct	_	SpaceAfter=No
103	SSS086	_	PROPN	_	_	76	appos	_	SpaceAfter=No
104	]	_	PUNCT	_	_	103	punct	_	_
105	6	_	NUM	_	_	107	nummod	_	SpaceAfter=No
106	.	_	PUNCT	_	_	105	punct	_	_
107	Ability	_	NOUN	_	_	27	list	_	_
108	to	_	PART	_	_	109	mark	_	_
109	designate	_	VERB	_	_	107	acl	_	_
110	flight	_	NOUN	_	_	111	compound	_	_
111	corridors	_	NOUN	_	_	109	obj	_	_
112	and	_	CCONJ	_	_	115	cc	_	_
113	restricted	_	ADJ	_	_	115	amod	_	_
114	air	_	NOUN	_	_	115	compound	_	_
115	space	_	NOUN	_	_	111	conj	_	SpaceAfter=No
116	.	_	PUNCT	_	_	107	punct	_	_
117	[	_	PUNCT	_	_	118	punct	_	SpaceAfter=No
118	SSS087	_	PROPN	_	_	107	appos	_	SpaceAfter=No
119	]	_	PUNCT	_	_	118	punct	_	_

# newdoc id = 2015_CS4311_3.1.1.2_Req4
# sent_id = 220
# text = The “Create Flight Plan” screen shall display the labels and GUI elements as described in Table 2.
1	The	_	DET	_	_	7	det	_	_
2	“	_	PUNCT	_	_	3	punct	_	SpaceAfter=No
3	Create	_	VERB	_	_	7	compound	_	_
4	Flight	_	NOUN	_	_	5	compound	_	_
5	Plan	_	NOUN	_	_	3	obj	_	SpaceAfter=No
6	”	_	PUNCT	_	_	3	punct	_	_
7	screen	_	NOUN	_	_	9	nsubj	_	_
8	shall	_	AUX	_	_	9	aux	_	_
9	display	_	VERB	_	_	0	root	_	_
10	the	_	DET	_	_	11	det	_	_
11	labels	_	NOUN	_	_	9	obj	_	_
12	and	_	CCONJ	_	_	14	cc	_	_
13	GUI	_	NOUN	_	_	14	nmod	_	_
14	elements	_	NOUN	_	_	11	conj	_	_
15	as	_	SCONJ	_	_	16	mark	_	_
16	described	_	VERB	_	_	9	advcl	_	_
17	in	_	ADP	_	_	18	case	_	_
18	Table	_	NOUN	_	_	16	obl	_	_
19	2	_	NUM	_	_	18	flat	_	SpaceAfter=No
20	.	_	PUNCT	_	_	9	punct	_	_

# newdoc id = 2011_tfms_3.2.1.1.1_SSS3496
# sent_id = 230
# text = When the system rejects one or more TOS options in the TOS message, the system shall send a TOS Error message to the originator of the TOS message identifying the reason(s) for error(s).
1	When	_	SCONJ	_	_	4	mark	_	_
2	the	_	DET	_	_	3	det	_	_
3	system	_	NOUN	_	_	4	nsubj	_	_
4	rejects	_	VERB	_	_	18	advcl	_	_
5	one	_	NUM	_	_	9	nummod	_	_
6	or	_	CCONJ	_	_	7	cc	_	_
7	more	_	ADV	_	_	5	conj	_	_
8	TOS	_	NOUN	_	_	9	compound	_	_
9	options	_	NOUN	_	_	4	obj	_	_
10	in	_	ADP	_	_	13	case	_	_
11	the	_	DET	_	_	13	det	_	_
12	TOS	_	NOUN	_	_	13	compound	_	_
13	message	_	NOUN	_	_	9	nmod	_	SpaceAfter=No
14	,	_	PUNCT	_	_	4	punct	_	_
15	the	_	DET	_	_	16	det	_	_
16	system	_	NOUN	_	_	18	nsubj	_	_
17	shall	_	AUX	_	_	18	aux	_	_
18	send	_	VERB	_	_	0	root	_	_
19	a	_	DET	_	_	22	det	_	_
20	TOS	_	NOUN	_	_	22	compound	_	_
21	Error	_	NOUN	_	_	22	nmod	_	_
22	message	_	NOUN	_	_	18	obj	_	_
23	to	_	ADP	_	_	25	case	_	_
24	the	_	DET	_	_	25	det	_	_
25	originator	_	NOUN	_	_	18	iobj	_	_
26	of	_	ADP	_	_	29	case	_	_
27	the	_	DET	_	_	29	det	_	_
28	TOS	_	NOUN	_	_	29	compound	_	_
29	message	_	NOUN	_	_	25	nmod	_	_
30	identifying	_	VERB	_	_	22	acl	_	_
31	the	_	DET	_	_	32	det	_	_
32	reason	_	NOUN	_	_	30	obj	_	SpaceAfter=No
33	(	_	PUNCT	_	_	34	punct	_	SpaceAfter=No
34	s	_	X	_	_	32	dep	_	SpaceAfter=No
35	)	_	PUNCT	_	_	34	punct	_	_
36	for	_	ADP	_	_	37	case	_	_
37	error	_	NOUN	_	_	32	nmod	_	SpaceAfter=No
38	(	_	PUNCT	_	_	39	punct	_	SpaceAfter=No
39	s	_	X	_	_	37	dep	_	SpaceAfter=No
40	)	_	PUNCT	_	_	39	punct	_	SpaceAfter=No
41	.	_	PUNCT	_	_	18	punct	_	_

# newdoc id = 2000_nasax38_3.2.7_10
# sent_id = 31
# text = The utility timer shall [SRS256] have a resolution equal to or better than 60.6 nanoseconds.
1	The	_	DET	_	_	3	det	_	_
2	utility	_	NOUN	_	_	3	compound	_	_
3	timer	_	NOUN	_	_	8	nsubj	_	_
4	shall	_	AUX	_	_	8	aux	_	_
5	[	_	PUNCT	_	_	6	punct	_	SpaceAfter=No
6	SRS256	_	PROPN	_	_	3	appos	_	SpaceAfter=No
7	]	_	PUNCT	_	_	6	punct	_	_
8	have	_	VERB	_	_	0	root	_	_
9	a	_	DET	_	_	10	det	_	_
10	resolution	_	NOUN	_	_	8	obj	_	_
11	equal	_	ADJ	_	_	16	advmod	_	_
12	to	_	ADP	_	_	11	fixed	_	_
13	or	_	CCONJ	_	_	14	cc	_	_
14	better	_	ADJ	_	_	11	conj	_	_
15	than	_	SCONJ	_	_	14	fixed	_	_
16	60.6	_	NUM	_	_	17	nummod	_	_
17	nanoseconds	_	NOUN	_	_	10	nmod	_	SpaceAfter=No
18	.	_	PUNCT	_	_	8	punct	_	_

# newdoc id = 2015_CS4311_3.2.2.2_Req49
# sent_id = 130
# text = Each waypoint shall be identified with a unique name consisting of five letters beginning with the characters “VP.”
1	Each	_	DET	_	_	2	det	_	_
2	waypoint	_	NOUN	_	_	5	nsubj:pass	_	_
3	shall	_	AUX	_	_	5	aux	_	_
4	be	_	AUX	_	_	5	aux:pass	_	_
5	identified	_	VERB	_	_	0	root	_	_
6	with	_	ADP	_	_	9	case	_	_
7	a	_	DET	_	_	9	det	_	_
8	unique	_	ADJ	_	_	9	amod	_	_
9	name	_	NOUN	_	_	5	obl	_	_
10	consisting	_	VERB	_	_	9	acl	_	_
11	of	_	ADP	_	_	13	case	_	_
12	five	_	NUM	_	_	13	nummod	_	_
13	letters	_	NOUN	_	_	10	obl	_	_
14	beginning	_	VERB	_	_	13	acl	_	_
15	with	_	ADP	_	_	17	case	_	_
16	the	_	DET	_	_	17	det	_	_
17	characters	_	NOUN	_	_	14	obl	_	_
18	“	_	PUNCT	_	_	19	punct	_	SpaceAfter=No
19	VP	_	X	_	_	17	appos	_	SpaceAfter=No
20	.	_	PUNCT	_	_	19	punct	_	SpaceAfter=No
21	”	_	PUNCT	_	_	19	punct	_	_

# newdoc id = 2000_nasax38_3.2.5.2_8
# sent_id = 274
# text = Continuous BIT shall [SRS097] detect a failed ICP processor by detecting the absence of a periodic message for 2 consecutive minor cycles.
1	Continuous	_	ADJ	_	_	2	amod	_	_
2	BIT	_	NOUN	_	_	7	nsubj	_	_
3	shall	_	AUX	_	_	7	aux	_	_
4	[	_	PUNCT	_	_	5	punct	_	SpaceAfter=No
5	SRS097	_	PROPN	_	_	2	appos	_	SpaceAfter=No
6	]	_	PUNCT	_	_	5	punct	_	_
7	detect	_	VERB	_	_	0	root	_	_
8	a	_	DET	_	_	11	det	_	_
9	failed	_	ADJ	_	_	11	amod	_	_
10	ICP	_	NOUN	_	_	11	compound	_	_
11	processor	_	NOUN	_	_	7	obj	_	_
12	by	_	SCONJ	_	_	13	mark	_	_
13	detecting	_	VERB	_	_	7	advcl	_	_
14	the	_	DET	_	_	15	det	_	_
15	absence	_	NOUN	_	_	13	obj	_	_
16	of	_	ADP	_	_	19	case	_	_
17	a	_	DET	_	_	19	det	_	_
18	periodic	_	ADJ	_	_	19	amod	_	_
19	message	_	NOUN	_	_	15	nmod	_	_
20	for	_	ADP	_	_	24	case	_	_
21	2	_	NUM	_	_	24	nummod	_	_
22	consecutive	_	ADJ	_	_	24	amod	_	_
23	minor	_	ADJ	_	_	24	amod	_	_
24	cycles	_	NOUN	_	_	15	nmod	_	SpaceAfter=No
25	.	_	PUNCT	_	_	7	punct	_	_

# newdoc id = 2001_hats_3.2.1.4_SRSreq65
# sent_id = 238
# text = Each active display window shall have a mouse cursor, which indicates the location of the pointing device in the window.
1	Each	_	DET	_	_	4	det	_	_
2	active	_	ADJ	_	_	4	amod	_	_
3	display	_	NOUN	_	_	4	compound	_	_
4	window	_	NOUN	_	_	6	nsubj	_	_
5	shall	_	AUX	_	_	6	aux	_	_
6	have	_	VERB	_	_	0	root	_	_
7	a	_	DET	_	_	9	det	_	_
8	mouse	_	NOUN	_	_	9	compound	_	_
9	cursor	_	NOUN	_	_	6	obj	_	SpaceAfter=No
10	,	_	PUNCT	_	_	12	punct	_	_
11	which	_	PRON	_	_	12	nsubj	_	_
12	indicates	_	VERB	_	_	9	acl:relcl	_	_
13	the	_	DET	_	_	14	det	_	_
14	location	_	NOUN	_	_	12	obj	_	_
15	of	_	ADP	_	_	18	case	_	_
16	the	_	DET	_	_	18	det	_	_
17	pointing	_	NOUN	_	_	18	compound	_	_
18	device	_	NOUN	_	_	14	nmod	_	_
19	in	_	ADP	_	_	21	case	_	_
20	the	_	DET	_	_	21	det	_	_
21	window	_	NOUN	_	_	18	nmod	_	SpaceAfter=No
22	.	_	PUNCT	_	_	6	punct	_	_

# newdoc id = 2001_npac_6.8_RR6-44
# sent_id = 42
# text = NPAC SMS shall require one of the following network data download choices: • npa-nxx-data (with one of the two selections below) - npa-nxx-range - all • lrn data (with one of the two selections below) - lrn-range - all • all network data • npa-nxx-x-data (with one of the two selections below) - npa-nxx-x-range - all
1	NPAC	_	PROPN	_	_	2	nmod	_	_
2	SMS	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	require	_	VERB	_	_	0	root	_	_
5	one	_	PRON	_	_	4	obj	_	_
6	of	_	ADP	_	_	12	case	_	_
7	the	_	DET	_	_	12	det	_	_
8	following	_	ADJ	_	_	12	amod	_	_
9	network	_	NOUN	_	_	10	nmod	_	_
10	data	_	NOUN	_	_	12	nmod	_	_
11	download	_	NOUN	_	_	12	compound	_	_
12	choices	_	NOUN	_	_	5	nmod	_	SpaceAfter=No
13	:	_	PUNCT	_	_	17	punct	_	_
14	•	_	PUNCT	_	_	17	punct	_	_
15	npa-nxx	_	NOUN	_	_	17	nmod	_	SpaceAfter=No
16	-	_	PUNCT	_	_	17	punct	_	SpaceAfter=No
17	data	_	NOUN	_	_	4	parataxis	_	_
18	(	_	PUNCT	_	_	20	punct	_	SpaceAfter=No
19	with	_	ADP	_	_	20	case	_	_
20	one	_	PRON	_	_	17	nmod	_	_
21	of	_	ADP	_	_	24	case	_	_
22	the	_	DET	_	_	24	det	_	_
23	two	_	NUM	_	_	24	nummod	_	_
24	selections	_	NOUN	_	_	20	nmod	_	_
25	below	_	ADV	_	_	24	advmod	_	SpaceAfter=No
26	)	_	PUNCT	_	_	20	punct	_	_
27	-	_	PUNCT	_	_	30	punct	_	_
28	npa-nxx	_	NOUN	_	_	30	nmod	_	SpaceAfter=No
29	-	_	PUNCT	_	_	30	punct	_	SpaceAfter=No
30	range	_	NOUN	_	_	17	parataxis	_	_
31	-	_	PUNCT	_	_	32	punct	_	_
32	all	_	PRON	_	_	30	list	_	_
33	•	_	PUNCT	_	_	35	punct	_	_
34	lrn	_	NOUN	_	_	35	nmod	_	_
35	data	_	NOUN	_	_	17	list	_	_
36	(	_	PUNCT	_	_	38	punct	_	SpaceAfter=No
37	with	_	ADP	_	_	38	case	_	_
38	one	_	PRON	_	_	35	nmod	_	_
39	of	_	ADP	_	_	42	case	_	_
40	the	_	DET	_	_	42	det	_	_
41	two	_	NUM	_	_	42	nummod	_	_
42	selections	_	NOUN	_	_	38	nmod	_	_
43	below	_	ADV	_	_	42	advmod	_	SpaceAfter=No
44	)	_	PUNCT	_	_	38	punct	_	_
45	-	_	PUNCT	_	_	48	punct	_	_
46	lrn	_	NOUN	_	_	48	nmod	_	SpaceAfter=No
47	-	_	PUNCT	_	_	48	punct	_	SpaceAfter=No
48	range	_	NOUN	_	_	35	parataxis	_	_
49	-	_	PUNCT	_	_	50	punct	_	_
50	all	_	PRON	_	_	48	list	_	_
51	•	_	PUNCT	_	_	54	punct	_	_
52	all	_	DET	_	_	54	det	_	_
53	network	_	NOUN	_	_	54	nmod	_	_
54	data	_	NOUN	_	_	17	list	_	_
55	•	_	PUNCT	_	_	58	punct	_	_
56	npa-nxx-x	_	NOUN	_	_	58	nmod	_	SpaceAfter=No
57	-	_	PUNCT	_	_	58	punct	_	SpaceAfter=No
58	data	_	NOUN	_	_	17	list	_	_
59	(	_	PUNCT	_	_	61	punct	_	SpaceAfter=No
60	with	_	ADP	_	_	61	case	_	_
61	one	_	PRON	_	_	58	nmod	_	_
62	of	_	ADP	_	_	65	case	_	_
63	the	_	DET	_	_	65	det	_	_
64	two	_	NUM	_	_	65	nummod	_	_
65	selections	_	NOUN	_	_	61	nmod	_	_
66	below	_	ADV	_	_	65	advmod	_	SpaceAfter=No
67	)	_	PUNCT	_	_	61	punct	_	_
68	-	_	PUNCT	_	_	71	punct	_	_
69	npa-nxx-x	_	NOUN	_	_	71	nmod	_	SpaceAfter=No
70	-	_	PUNCT	_	_	71	punct	_	SpaceAfter=No
71	range	_	NOUN	_	_	58	parataxis	_	_
72	-	_	PUNCT	_	_	73	punct	_	_
73	all	_	PRON	_	_	71	list	_	_

# newdoc id = 2000_nasax38_3.2.5.2_4
# sent_id = 224
# text = Continuous BIT shall [SRS094] reset the processor’s built-in watchdog timer at 50 Hz.
1	Continuous	_	ADJ	_	_	2	amod	_	_
2	BIT	_	NOUN	_	_	7	nsubj	_	_
3	shall	_	AUX	_	_	7	aux	_	_
4	[	_	PUNCT	_	_	5	punct	_	SpaceAfter=No
5	SRS094	_	PROPN	_	_	2	appos	_	SpaceAfter=No
6	]	_	PUNCT	_	_	5	punct	_	_
7	reset	_	VERB	_	_	0	root	_	_
8	the	_	DET	_	_	15	det	_	_
9	processor	_	NOUN	_	_	15	nmod	_	SpaceAfter=No
10	’s	_	PART	_	_	9	case	_	_
11	built	_	VERB	_	_	15	acl	_	SpaceAfter=No
12	-	_	PUNCT	_	_	13	punct	_	SpaceAfter=No
13	in	_	ADP	_	_	11	compound	_	_
14	watchdog	_	NOUN	_	_	15	compound	_	_
15	timer	_	NOUN	_	_	7	obj	_	_
16	at	_	ADP	_	_	18	case	_	_
17	50	_	NUM	_	_	18	nummod	_	_
18	Hz	_	NOUN	_	_	7	iobj	_	SpaceAfter=No
19	.	_	PUNCT	_	_	7	punct	_	_

# sent_id = 225
# text = A failure to reset the watchdog timer within the allotted time (nominally 1.6 seconds) will generate a processor reset.
1	A	_	DET	_	_	2	det	_	_
2	failure	_	NOUN	_	_	18	nsubj	_	_
3	to	_	PART	_	_	4	mark	_	_
4	reset	_	VERB	_	_	2	acl	_	_
5	the	_	DET	_	_	7	det	_	_
6	watchdog	_	NOUN	_	_	7	compound	_	_
7	timer	_	NOUN	_	_	4	obj	_	_
8	within	_	ADP	_	_	11	case	_	_
9	the	_	DET	_	_	11	det	_	_
10	allotted	_	ADJ	_	_	11	amod	_	_
11	time	_	NOUN	_	_	4	obl	_	_
12	(	_	PUNCT	_	_	15	punct	_	SpaceAfter=No
13	nominally	_	ADV	_	_	15	advmod	_	_
14	1.6	_	NUM	_	_	15	nummod	_	_
15	seconds	_	NOUN	_	_	11	appos	_	SpaceAfter=No
16	)	_	PUNCT	_	_	15	punct	_	_
17	will	_	AUX	_	_	18	aux	_	_
18	generate	_	VERB	_	_	0	root	_	_
19	a	_	DET	_	_	21	det	_	_
20	processor	_	NOUN	_	_	21	nmod	_	_
21	reset	_	NOUN	_	_	18	obj	_	SpaceAfter=No
22	.	_	PUNCT	_	_	18	punct	_	_

# newdoc id = 2006_eirenesys15_4.5.3
# sent_id = 29
# text = All EIRENE mobile equipment shall conform to [EN 60950] (Safety of Information Technology Equipment), including Electrical Business Equipment, 1993, plus amendments A1 and A2. (M)
1	All	_	DET	_	_	4	det	_	_
2	EIRENE	_	PROPN	_	_	4	nmod	_	_
3	mobile	_	ADJ	_	_	4	amod	_	_
4	equipment	_	NOUN	_	_	6	nsubj	_	_
5	shall	_	AUX	_	_	6	aux	_	_
6	conform	_	VERB	_	_	0	root	_	_
7	to	_	ADP	_	_	9	case	_	_
8	[	_	PUNCT	_	_	9	punct	_	SpaceAfter=No
9	EN	_	NOUN	_	_	6	iobj	_	_
10	60950	_	NUM	_	_	9	flat	_	SpaceAfter=No
11	]	_	PUNCT	_	_	9	punct	_	_
12	(	_	PUNCT	_	_	13	punct	_	SpaceAfter=No
13	Safety	_	NOUN	_	_	9	appos	_	_
14	of	_	ADP	_	_	17	case	_	_
15	Information	_	NOUN	_	_	16	nmod	_	_
16	Technology	_	NOUN	_	_	17	nmod	_	_
17	Equipment	_	NOUN	_	_	13	nmod	_	SpaceAfter=No
18	)	_	PUNCT	_	_	13	punct	_	SpaceAfter=No
19	,	_	PUNCT	_	_	23	punct	_	_
20	including	_	ADP	_	_	23	case	_	_
21	Electrical	_	ADJ	_	_	23	amod	_	_
22	Business	_	NOUN	_	_	23	nmod	_	_
23	Equipment	_	NOUN	_	_	9	nmod	_	SpaceAfter=No
24	,	_	PUNCT	_	_	25	punct	_	_
25	1993	_	NUM	_	_	23	nmod	_	SpaceAfter=No
26	,	_	PUNCT	_	_	25	punct	_	_
27	plus	_	CCONJ	_	_	28	cc	_	_
28	amendments	_	NOUN	_	_	9	conj	_	_
29	A1	_	NOUN	_	_	28	flat	_	_
30	and	_	CCONJ	_	_	31	cc	_	_
31	A2	_	NOUN	_	_	29	conj	_	SpaceAfter=No
32	.	_	PUNCT	_	_	6	punct	_	_
33	(	_	PUNCT	_	_	34	punct	_	SpaceAfter=No
34	M	_	ADJ	_	_	6	advmod	_	SpaceAfter=No
35	)	_	PUNCT	_	_	34	punct	_	_

# newdoc id = 2002_evlacorr_3.2.2.2
# sent_id = 4
# text = Module Features – The CMIB shall contain 64 Mbytes or greater of SDRAM, IDE hard disk interface, minimum of one serial and one parallel interface, PCI/ISA buses, 100BaseT network interface, capacity to boot and run a generic COTS operating system in a near real-time environment from local non-volatile storage.
1	Module	_	NOUN	_	_	2	nmod	_	_
2	Features	_	NOUN	_	_	0	root	_	_
3	–	_	PUNCT	_	_	2	punct	_	_
4	The	_	DET	_	_	5	det	_	_
5	CMIB	_	NOUN	_	_	7	nsubj	_	_
6	shall	_	AUX	_	_	7	aux	_	_
7	contain	_	VERB	_	_	2	parataxis	_	_
8	64	_	NUM	_	_	9	nummod	_	_
9	Mbytes	_	NOUN	_	_	7	obj	_	_
10	or	_	CCONJ	_	_	11	cc	_	_
11	greater	_	ADJ	_	_	9	conj	_	_
12	of	_	ADP	_	_	13	case	_	_
13	SDRAM	_	NOUN	_	_	9	nmod	_	SpaceAfter=No
14	,	_	PUNCT	_	_	18	punct	_	_
15	IDE	_	PROPN	_	_	18	compound	_	_
16	hard	_	ADJ	_	_	17	amod	_	_
17	disk	_	NOUN	_	_	18	nmod	_	_
18	interface	_	NOUN	_	_	9	conj	_	SpaceAfter=No
19	,	_	PUNCT	_	_	20	punct	_	_
20	minimum	_	NOUN	_	_	9	conj	_	_
21	of	_	ADP	_	_	27	case	_	_
22	one	_	NUM	_	_	27	nummod	_	_
23	serial	_	ADJ	_	_	27	amod	_	_
24	and	_	CCONJ	_	_	27	cc	_	_
25	one	_	NUM	_	_	22	conj	_	_
26	parallel	_	ADJ	_	_	27	amod	_	_
27	interface	_	NOUN	_	_	20	nmod	_	SpaceAfter=No
28	,	_	PUNCT	_	_	32	punct	_	_
29	PCI	_	PROPN	_	_	32	compound	_	SpaceAfter=No
30	/	_	SYM	_	_	31	cc	_	SpaceAfter=No
31	ISA	_	PROPN	_	_	29	conj	_	_
32	buses	_	NOUN	_	_	9	conj	_	SpaceAfter=No
33	,	_	PUNCT	_	_	36	punct	_	_
34	100BaseT	_	PROPN	_	_	36	compound	_	_
35	network	_	NOUN	_	_	36	compound	_	_
36	interface	_	NOUN	_	_	9	conj	_	SpaceAfter=No
37	,	_	PUNCT	_	_	38	punct	_	_
38	capacity	_	NOUN	_	_	9	conj	_	_
39	to	_	PART	_	_	40	mark	_	_
40	boot	_	VERB	_	_	38	acl	_	_
41	and	_	CCONJ	_	_	42	cc	_	_
42	run	_	VERB	_	_	40	conj	_	_
43	a	_	DET	_	_	47	det	_	_
44	generic	_	ADJ	_	_	47	amod	_	_
45	COTS	_	ADJ	_	_	47	amod	_	_
46	operating	_	ADJ	_	_	47	amod	_	_
47	system	_	NOUN	_	_	40	obj	_	_
48	in	_	ADP	_	_	54	case	_	_
49	a	_	DET	_	_	54	det	_	_
50	near	_	ADV	_	_	53	advmod	_	_
51	real	_	ADJ	_	_	53	amod	_	SpaceAfter=No
52	-	_	PUNCT	_	_	53	punct	_	SpaceAfter=No
53	time	_	NOUN	_	_	54	amod	_	_
54	environment	_	NOUN	_	_	40	obl	_	_
55	from	_	ADP	_	_	60	case	_	_
56	local	_	ADJ	_	_	60	amod	_	_
57	non	_	ADV	_	_	59	advmod	_	SpaceAfter=No
58	-	_	PUNCT	_	_	59	punct	_	SpaceAfter=No
59	volatile	_	ADJ	_	_	60	amod	_	_
60	storage	_	NOUN	_	_	40	obl	_	SpaceAfter=No
61	.	_	PUNCT	_	_	2	punct	_	_

# newdoc id = 2001_hats_3.2.1.1_SRSreq53
# sent_id = 78
# text = There shall be exactly one file describing the lexical specification of inputs associated with an application.
1	There	_	PRON	_	_	3	expl	_	_
2	shall	_	AUX	_	_	3	aux	_	_
3	be	_	VERB	_	_	0	root	_	_
4	exactly	_	ADV	_	_	5	advmod	_	_
5	one	_	NUM	_	_	6	nummod	_	_
6	file	_	NOUN	_	_	3	nsubj	_	_
7	describing	_	VERB	_	_	6	acl	_	_
8	the	_	DET	_	_	10	det	_	_
9	lexical	_	ADJ	_	_	10	amod	_	_
10	specification	_	NOUN	_	_	7	obj	_	_
11	of	_	ADP	_	_	12	case	_	_
12	inputs	_	NOUN	_	_	10	nmod	_	_
13	associated	_	VERB	_	_	12	acl	_	_
14	with	_	ADP	_	_	16	case	_	_
15	an	_	DET	_	_	16	det	_	_
16	application	_	NOUN	_	_	13	nmod	_	SpaceAfter=No
17	.	_	PUNCT	_	_	3	punct	_	_

# sent_id = 79
# text = It shall have the file extension .spec.
1	It	_	PRON	_	_	3	nsubj	_	_
2	shall	_	AUX	_	_	3	aux	_	_
3	have	_	VERB	_	_	0	root	_	_
4	the	_	DET	_	_	6	det	_	_
5	file	_	NOUN	_	_	6	compound	_	_
6	extension	_	NOUN	_	_	3	obj	_	_
7	.spec	_	SYM	_	_	6	appos	_	SpaceAfter=No
8	.	_	PUNCT	_	_	3	punct	_	_

# newdoc id = 2000_nasax38_3.2.6.2_5
# sent_id = 125
# text = If a failure in an FCR other than the NEFU is diagnosed when the FCP is configured as a degraded triplex, no action shall [SRS254] be taken.
1	If	_	SCONJ	_	_	12	mark	_	_
2	a	_	DET	_	_	3	det	_	_
3	failure	_	NOUN	_	_	12	nsubj:pass	_	_
4	in	_	ADP	_	_	6	case	_	_
5	an	_	DET	_	_	6	det	_	_
6	FCR	_	NOUN	_	_	3	nmod	_	_
7	other	_	ADJ	_	_	6	amod	_	_
8	than	_	ADP	_	_	10	case	_	_
9	the	_	DET	_	_	10	det	_	_
10	NEFU	_	NOUN	_	_	7	obl	_	_
11	is	_	AUX	_	_	12	aux:pass	_	_
12	diagnosed	_	VERB	_	_	30	advcl	_	_
13	when	_	SCONJ	_	_	17	mark	_	_
14	the	_	DET	_	_	15	det	_	_
15	FCP	_	NOUN	_	_	17	nsubj:pass	_	_
16	is	_	AUX	_	_	17	aux:pass	_	_
17	configured	_	VERB	_	_	12	advcl	_	_
18	as	_	ADP	_	_	21	case	_	_
19	a	_	DET	_	_	21	det	_	_
20	degraded	_	ADJ	_	_	21	amod	_	_
21	triplex	_	NOUN	_	_	17	obl	_	SpaceAfter=No
22	,	_	PUNCT	_	_	12	punct	_	_
23	no	_	DET	_	_	24	det	_	_
24	action	_	NOUN	_	_	30	nsubj:pass	_	_
25	shall	_	AUX	_	_	30	aux	_	_
26	[	_	PUNCT	_	_	27	punct	_	SpaceAfter=No
27	SRS254	_	PROPN	_	_	24	appos	_	SpaceAfter=No
28	]	_	PUNCT	_	_	27	punct	_	_
29	be	_	AUX	_	_	30	aux:pass	_	_
30	taken	_	VERB	_	_	0	root	_	SpaceAfter=No
31	.	_	PUNCT	_	_	30	punct	_	_

# sent_id = 126
# text = Note that a failed FCR could be diagnosed using any method, including (but not limited to) Continuous BIT, ICP presence test, or NE syndrome analysis.
1	Note	_	VERB	_	_	0	root	_	_
2	that	_	SCONJ	_	_	8	mark	_	_
3	a	_	DET	_	_	5	det	_	_
4	failed	_	ADJ	_	_	5	amod	_	_
5	FCR	_	NOUN	_	_	8	nsubj:pass	_	_
6	could	_	AUX	_	_	8	aux	_	_
7	be	_	AUX	_	_	8	aux:pass	_	_
8	diagnosed	_	VERB	_	_	1	ccomp	_	_
9	using	_	VERB	_	_	8	advcl	_	_
10	any	_	DET	_	_	11	det	_	_
11	method	_	NOUN	_	_	9	obj	_	SpaceAfter=No
12	,	_	PUNCT	_	_	21	punct	_	_
13	including	_	ADP	_	_	21	case	_	_
14	(	_	PUNCT	_	_	17	punct	_	SpaceAfter=No
15	but	_	CCONJ	_	_	17	cc	_	_
16	not	_	PART	_	_	17	advmod	_	_
17	limited	_	VERB	_	_	13	conj	_	_
18	to	_	ADP	_	_	21	case	_	SpaceAfter=No
19	)	_	PUNCT	_	_	18	punct	_	_
20	Continuous	_	ADJ	_	_	21	amod	_	_
21	BIT	_	NOUN	_	_	11	nmod	_	SpaceAfter=No
22	,	_	PUNCT	_	_	25	punct	_	_
23	ICP	_	NOUN	_	_	25	nmod	_	_
24	presence	_	NOUN	_	_	25	compound	_	_
25	test	_	NOUN	_	_	21	conj	_	SpaceAfter=No
26	,	_	PUNCT	_	_	30	punct	_	_
27	or	_	CCONJ	_	_	30	cc	_	_
28	NE	_	NOUN	_	_	29	nmod	_	_
29	syndrome	_	NOUN	_	_	30	nmod	_	_
30	analysis	_	NOUN	_	_	21	conj	_	SpaceAfter=No
31	.	_	PUNCT	_	_	1	punct	_	_

# newdoc id = 2015_CS4311_3.2.3.1_Req64
# sent_id = 221
# text = If the user selects the “Create Flight Plan” button, the system shall display the “Create Flight Plan” screen with a form for data entry as noted in Table 2.
1	If	_	SCONJ	_	_	4	mark	_	_
2	the	_	DET	_	_	3	det	_	_
3	user	_	NOUN	_	_	4	nsubj	_	_
4	selects	_	VERB	_	_	16	advcl	_	_
5	the	_	DET	_	_	11	det	_	_
6	“	_	PUNCT	_	_	7	punct	_	SpaceAfter=No
7	Create	_	VERB	_	_	11	compound	_	_
8	Flight	_	NOUN	_	_	9	compound	_	_
9	Plan	_	NOUN	_	_	7	obj	_	SpaceAfter=No
10	”	_	PUNCT	_	_	7	punct	_	_
11	button	_	NOUN	_	_	4	obj	_	SpaceAfter=No
12	,	_	PUNCT	_	_	4	punct	_	_
13	the	_	DET	_	_	14	det	_	_
14	system	_	NOUN	_	_	16	nsubj	_	_
15	shall	_	AUX	_	_	16	aux	_	_
16	display	_	VERB	_	_	0	root	_	_
17	the	_	DET	_	_	23	det	_	_
18	“	_	PUNCT	_	_	17	punct	_	SpaceAfter=No
19	Create	_	VERB	_	_	23	compound	_	_
20	Flight	_	NOUN	_	_	21	compound	_	_
21	Plan	_	NOUN	_	_	19	obj	_	SpaceAfter=No
22	”	_	PUNCT	_	_	21	punct	_	_
23	screen	_	NOUN	_	_	16	obj	_	_
24	with	_	ADP	_	_	26	case	_	_
25	a	_	DET	_	_	26	det	_	_
26	form	_	NOUN	_	_	16	obl	_	_
27	for	_	ADP	_	_	29	case	_	_
28	data	_	NOUN	_	_	29	nmod	_	_
29	entry	_	NOUN	_	_	26	nmod	_	_
30	as	_	SCONJ	_	_	31	mark	_	_
31	noted	_	VERB	_	_	16	advcl	_	_
32	in	_	ADP	_	_	33	case	_	_
33	Table	_	NOUN	_	_	31	obl	_	_
34	2	_	NUM	_	_	33	flat	_	SpaceAfter=No
35	.	_	PUNCT	_	_	16	punct	_	_

# newdoc id = 2006_eirenesys15_4.5.19
# sent_id = 196
# text = Handheld mobile equipment shall be capable of withstanding the following levels of continuous sinusoidal vibration: (M) - frequency range: 5-200 Hz; - peak-to-peak amplitude: 7.5 mm; - peak acceleration: 1.5g.
1	Handheld	_	ADJ	_	_	3	amod	_	_
2	mobile	_	ADJ	_	_	3	amod	_	_
3	equipment	_	NOUN	_	_	6	nsubj	_	_
4	shall	_	AUX	_	_	6	aux	_	_
5	be	_	AUX	_	_	6	cop	_	_
6	capable	_	ADJ	_	_	0	root	_	_
7	of	_	SCONJ	_	_	8	mark	_	_
8	withstanding	_	VERB	_	_	6	xcomp	_	_
9	the	_	DET	_	_	11	det	_	_
10	following	_	ADJ	_	_	11	amod	_	_
11	levels	_	NOUN	_	_	8	obj	_	_
12	of	_	ADP	_	_	15	case	_	_
13	continuous	_	ADJ	_	_	15	amod	_	_
14	sinusoidal	_	ADJ	_	_	15	amod	_	_
15	vibration	_	NOUN	_	_	11	nmod	_	SpaceAfter=No
16	:	_	PUNCT	_	_	15	punct	_	_
17	(	_	PUNCT	_	_	18	punct	_	SpaceAfter=No
18	M	_	ADJ	_	_	6	advmod	_	SpaceAfter=No
19	)	_	PUNCT	_	_	18	punct	_	_
20	-	_	PUNCT	_	_	22	punct	_	_
21	frequency	_	NOUN	_	_	22	nmod	_	_
22	range	_	NOUN	_	_	8	parataxis	_	SpaceAfter=No
23	:	_	PUNCT	_	_	22	punct	_	_
24	5	_	NUM	_	_	27	nummod	_	SpaceAfter=No
25	-	_	SYM	_	_	26	case	_	SpaceAfter=No
26	200	_	NUM	_	_	24	nmod	_	_
27	Hz	_	NOUN	_	_	22	parataxis	_	SpaceAfter=No
28	;	_	PUNCT	_	_	35	punct	_	_
29	-	_	PUNCT	_	_	35	punct	_	_
30	peak	_	NOUN	_	_	35	compound	_	SpaceAfter=No
31	-	_	PUNCT	_	_	32	punct	_	SpaceAfter=No
32	to	_	ADP	_	_	34	case	_	SpaceAfter=No
33	-	_	PUNCT	_	_	34	punct	_	SpaceAfter=No
34	peak	_	NOUN	_	_	30	nmod	_	_
35	amplitude	_	NOUN	_	_	22	list	_	SpaceAfter=No
36	:	_	PUNCT	_	_	35	punct	_	_
37	7.5	_	NUM	_	_	38	nummod	_	_
38	mm	_	NOUN	_	_	35	parataxis	_	SpaceAfter=No
39	;	_	PUNCT	_	_	42	punct	_	_
40	-	_	PUNCT	_	_	42	punct	_	_
41	peak	_	ADJ	_	_	42	amod	_	_
42	acceleration	_	NOUN	_	_	22	list	_	SpaceAfter=No
43	:	_	PUNCT	_	_	42	punct	_	_
44	1.5	_	NUM	_	_	45	nummod	_	SpaceAfter=No
45	g	_	NOUN	_	_	42	parataxis	_	SpaceAfter=No
46	.	_	PUNCT	_	_	6	punct	_	_

# newdoc id = 2000_nasax38_3.2.6.2_7
# sent_id = 108
# text = For the NEFU, if errors are identified after the processor has been masked out, and if at least 4 NEs are still active, the NE shall [SRS283] be removed from the configuration and recovery will be attempted.
1	For	_	ADP	_	_	3	case	_	_
2	the	_	DET	_	_	3	det	_	_
3	NEFU	_	NOUN	_	_	34	obl	_	SpaceAfter=No
4	,	_	PUNCT	_	_	3	punct	_	_
5	if	_	SCONJ	_	_	8	mark	_	_
6	errors	_	NOUN	_	_	8	nsubj:pass	_	_
7	are	_	AUX	_	_	8	aux:pass	_	_
8	identified	_	VERB	_	_	34	advcl	_	_
9	after	_	SCONJ	_	_	14	mark	_	_
10	the	_	DET	_	_	11	det	_	_
11	processor	_	NOUN	_	_	14	nsubj:pass	_	_
12	has	_	AUX	_	_	14	aux	_	_
13	been	_	AUX	_	_	14	aux:pass	_	_
14	masked	_	VERB	_	_	8	advcl	_	_
15	out	_	ADV	_	_	14	advmod	_	SpaceAfter=No
16	,	_	PUNCT	_	_	25	punct	_	_
17	and	_	CCONJ	_	_	25	cc	_	_
18	if	_	SCONJ	_	_	25	mark	_	_
19	at	_	ADV	_	_	21	advmod	_	_
20	least	_	NOUN	_	_	19	fixed	_	_
21	4	_	NUM	_	_	22	nummod	_	_
22	NEs	_	NOUN	_	_	25	nsubj	_	_
23	are	_	AUX	_	_	25	cop	_	_
24	still	_	ADV	_	_	25	advmod	_	_
25	active	_	ADJ	_	_	8	conj	_	SpaceAfter=No
26	,	_	PUNCT	_	_	25	punct	_	_
27	the	_	DET	_	_	28	det	_	_
28	NE	_	NOUN	_	_	34	nsubj:pass	_	_
29	shall	_	AUX	_	_	34	aux	_	_
30	[	_	PUNCT	_	_	31	punct	_	SpaceAfter=No
31	SRS283	_	PROPN	_	_	28	appos	_	SpaceAfter=No
32	]	_	PUNCT	_	_	31	punct	_	_
33	be	_	AUX	_	_	34	aux:pass	_	_
34	removed	_	VERB	_	_	0	root	_	_
35	from	_	ADP	_	_	37	case	_	_
36	the	_	DET	_	_	37	det	_	_
37	configuration	_	NOUN	_	_	34	obl	_	_
38	and	_	CCONJ	_	_	42	cc	_	_
39	recovery	_	NOUN	_	_	42	nsubj:pass	_	_
40	will	_	AUX	_	_	42	aux	_	_
41	be	_	AUX	_	_	42	aux:pass	_	_
42	attempted	_	VERB	_	_	34	conj	_	SpaceAfter=No
43	.	_	PUNCT	_	_	34	punct	_	_

# sent_id = 109
# text = Note that the NEFU recovery does not depend on whether alignment is permitted.
1	Note	_	VERB	_	_	0	root	_	_
2	that	_	SCONJ	_	_	8	mark	_	_
3	the	_	DET	_	_	5	det	_	_
4	NEFU	_	NOUN	_	_	5	compound	_	_
5	recovery	_	NOUN	_	_	8	nsubj	_	_
6	does	_	AUX	_	_	8	aux	_	_
7	not	_	PART	_	_	8	advmod	_	_
8	depend	_	VERB	_	_	1	ccomp	_	_
9	on	_	SCONJ	_	_	13	mark	_	_
10	whether	_	SCONJ	_	_	13	mark	_	_
11	alignment	_	NOUN	_	_	13	nsubj:pass	_	_
12	is	_	AUX	_	_	13	aux:pass	_	_
13	permitted	_	VERB	_	_	8	ccomp	_	SpaceAfter=No
14	.	_	PUNCT	_	_	1	punct	_	_

# newdoc id = 2001_npac_5.1.2.2.2.1_R5-27.2
# sent_id = 26
# text = NPAC SMS shall allow the following data to be modified in a pending, or conflict Subscription Version for a “porting to original” port by the new Service Provider or NPAC personnel: • Due Date - New Service Provider date on which “port to original” is planned to occur.
1	NPAC	_	PROPN	_	_	2	nmod	_	_
2	SMS	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	allow	_	VERB	_	_	0	root	_	_
5	the	_	DET	_	_	7	det	_	_
6	following	_	ADJ	_	_	7	amod	_	_
7	data	_	NOUN	_	_	4	obj	_	_
8	to	_	PART	_	_	10	mark	_	_
9	be	_	AUX	_	_	10	aux:pass	_	_
10	modified	_	VERB	_	_	4	xcomp	_	_
11	in	_	ADP	_	_	18	case	_	_
12	a	_	DET	_	_	18	det	_	_
13	pending	_	ADJ	_	_	18	amod	_	SpaceAfter=No
14	,	_	PUNCT	_	_	16	punct	_	_
15	or	_	CCONJ	_	_	16	cc	_	_
16	conflict	_	NOUN	_	_	13	conj	_	_
17	Subscription	_	NOUN	_	_	18	nmod	_	_
18	Version	_	NOUN	_	_	10	obl	_	_
19	for	_	ADP	_	_	26	case	_	_
20	a	_	DET	_	_	26	det	_	_
21	“	_	PUNCT	_	_	22	punct	_	SpaceAfter=No
22	porting	_	VERB	_	_	26	acl	_	_
23	to	_	ADP	_	_	24	case	_	_
24	original	_	NOUN	_	_	22	obl	_	SpaceAfter=No
25	”	_	PUNCT	_	_	22	punct	_	_
26	port	_	NOUN	_	_	10	obl	_	_
27	by	_	ADP	_	_	31	case	_	_
28	the	_	DET	_	_	31	det	_	_
29	new	_	ADJ	_	_	31	amod	_	_
30	Service	_	NOUN	_	_	31	compound	_	_
31	Provider	_	NOUN	_	_	10	obl:agent	_	_
32	or	_	CCONJ	_	_	34	cc	_	_
33	NPAC	_	PROPN	_	_	34	nmod	_	_
34	personnel	_	NOUN	_	_	31	conj	_	SpaceAfter=No
35	:	_	PUNCT	_	_	4	punct	_	_
36	•	_	PUNCT	_	_	38	punct	_	_
37	Due	_	ADJ	_	_	38	amod	_	_
38	Date	_	NOUN	_	_	4	parataxis	_	_
39	-	_	PUNCT	_	_	38	punct	_	_
40	New	_	ADJ	_	_	42	amod	_	_
41	Service	_	NOUN	_	_	42	compound	_	_
42	Provider	_	NOUN	_	_	43	nmod	_	_
43	date	_	NOUN	_	_	38	parataxis	_	_
44	on	_	ADP	_	_	45	case	_	_
45	which	_	PRON	_	_	54	obl	_	_
46	“	_	PUNCT	_	_	47	punct	_	SpaceAfter=No
47	port	_	VERB	_	_	52	nsubj:pass	_	_
48	to	_	ADP	_	_	49	case	_	_
49	original	_	ADJ	_	_	47	obl	_	SpaceAfter=No
50	”	_	PUNCT	_	_	47	punct	_	_
51	is	_	AUX	_	_	52	aux:pass	_	_
52	planned	_	VERB	_	_	43	acl:relcl	_	_
53	to	_	PART	_	_	54	mark	_	_
54	occur	_	VERB	_	_	52	xcomp	_	SpaceAfter=No
55	.	_	PUNCT	_	_	4	punct	_	_

# newdoc id = 2002_evlacorr_3.1.3.5
# sent_id = 154
# text = Hardware Visual Health Monitoring – The carrier board for the CMIB shall have an externally visible indicator (LED or other) that will provide a user with a physical indication of CMIB operational status (red = fault, green = ok).
1	Hardware	_	NOUN	_	_	4	nmod	_	_
2	Visual	_	ADJ	_	_	4	amod	_	_
3	Health	_	NOUN	_	_	4	compound	_	_
4	Monitoring	_	NOUN	_	_	0	root	_	_
5	–	_	PUNCT	_	_	4	punct	_	_
6	The	_	DET	_	_	8	det	_	_
7	carrier	_	NOUN	_	_	8	nmod	_	_
8	board	_	NOUN	_	_	13	nsubj	_	_
9	for	_	ADP	_	_	11	case	_	_
10	the	_	DET	_	_	11	det	_	_
11	CMIB	_	NOUN	_	_	8	nmod	_	_
12	shall	_	AUX	_	_	13	aux	_	_
13	have	_	VERB	_	_	4	parataxis	_	_
14	an	_	DET	_	_	17	det	_	_
15	externally	_	ADV	_	_	16	advmod	_	_
16	visible	_	ADJ	_	_	17	amod	_	_
17	indicator	_	NOUN	_	_	13	obj	_	_
18	(	_	PUNCT	_	_	19	punct	_	SpaceAfter=No
19	LED	_	NOUN	_	_	17	appos	_	_
20	or	_	CCONJ	_	_	21	cc	_	_
21	other	_	ADJ	_	_	19	conj	_	SpaceAfter=No
22	)	_	PUNCT	_	_	19	punct	_	_
23	that	_	PRON	_	_	25	nsubj	_	_
24	will	_	AUX	_	_	25	aux	_	_
25	provide	_	VERB	_	_	17	acl:relcl	_	_
26	a	_	DET	_	_	27	det	_	_
27	user	_	NOUN	_	_	25	iobj	_	_
28	with	_	ADP	_	_	31	case	_	_
29	a	_	DET	_	_	31	det	_	_
30	physical	_	ADJ	_	_	31	amod	_	_
31	indication	_	NOUN	_	_	25	obj	_	_
32	of	_	ADP	_	_	35	case	_	_
33	CMIB	_	NOUN	_	_	35	nmod	_	_
34	operational	_	ADJ	_	_	35	amod	_	_
35	status	_	NOUN	_	_	31	nmod	_	_
36	(	_	PUNCT	_	_	38	punct	_	SpaceAfter=No
37	red	_	NOUN	_	_	38	nsubj	_	_
38	=	_	SYM	_	_	31	parataxis	_	_
39	fault	_	NOUN	_	_	38	obj	_	SpaceAfter=No
40	,	_	PUNCT	_	_	42	punct	_	_
41	green	_	NOUN	_	_	42	nsubj	_	_
42	=	_	SYM	_	_	38	conj	_	_
43	ok	_	NOUN	_	_	42	obj	_	SpaceAfter=No
44	)	_	PUNCT	_	_	38	punct	_	SpaceAfter=No
45	.	_	PUNCT	_	_	4	punct	_	_

# newdoc id = 2002_evlacorr_3.4.1
# sent_id = 97
# text = Auto-correction – the CMCS shall be self-monitoring.
1	Auto	_	ADJ	_	_	3	amod	_	SpaceAfter=No
2	-	_	PUNCT	_	_	3	punct	_	SpaceAfter=No
3	correction	_	NOUN	_	_	0	root	_	_
4	–	_	PUNCT	_	_	3	punct	_	_
5	the	_	DET	_	_	6	det	_	_
6	CMCS	_	NOUN	_	_	11	nsubj	_	_
7	shall	_	AUX	_	_	11	aux	_	_
8	be	_	AUX	_	_	11	cop	_	_
9	self	_	ADV	_	_	11	advmod	_	SpaceAfter=No
10	-	_	PUNCT	_	_	11	punct	_	SpaceAfter=No
11	monitoring	_	ADJ	_	_	3	parataxis	_	SpaceAfter=No
12	.	_	PUNCT	_	_	3	punct	_	_

# sent_id = 98
# text = It will be capable of detecting, reporting on and automatically taking action to remedy or lessen the impact of, at a minimum, the following types of abnormal conditions: processor hardware failure, operating system hangs or crashes, temperature or voltage deviations, computational performance below minimum specifications, computational error rates above maximum specification, internal communications failures, and external (with the EVLA M&C) communications disruptions.
1	It	_	PRON	_	_	4	nsubj	_	_
2	will	_	AUX	_	_	4	aux	_	_
3	be	_	AUX	_	_	4	cop	_	_
4	capable	_	ADJ	_	_	0	root	_	_
5	of	_	ADP	_	_	6	mark	_	_
6	detecting	_	VERB	_	_	4	xcomp	_	SpaceAfter=No
7	,	_	PUNCT	_	_	8	punct	_	_
8	reporting	_	VERB	_	_	6	conj	_	_
9	on	_	ADP	_	_	28	case	_	_
10	and	_	CCONJ	_	_	12	cc	_	_
11	automatically	_	ADV	_	_	12	advmod	_	_
12	taking	_	VERB	_	_	6	conj	_	_
13	action	_	NOUN	_	_	12	obj	_	_
14	to	_	PART	_	_	15	mark	_	_
15	remedy	_	VERB	_	_	12	xcomp	_	_
16	or	_	CCONJ	_	_	17	cc	_	_
17	lessen	_	VERB	_	_	15	conj	_	_
18	the	_	DET	_	_	19	det	_	_
19	impact	_	NOUN	_	_	15	obj	_	_
20	of	_	ADP	_	_	28	case	_	SpaceAfter=No
21	,	_	PUNCT	_	_	24	punct	_	_
22	at	_	ADP	_	_	24	case	_	_
23	a	_	DET	_	_	24	det	_	_
24	minimum	_	NOUN	_	_	28	nmod	_	SpaceAfter=No
25	,	_	PUNCT	_	_	24	punct	_	_
26	the	_	DET	_	_	28	det	_	_
27	following	_	ADJ	_	_	28	amod	_	_
28	types	_	NOUN	_	_	6	obj	_	_
29	of	_	ADP	_	_	31	case	_	_
30	abnormal	_	ADJ	_	_	31	amod	_	_
31	conditions	_	NOUN	_	_	28	nmod	_	SpaceAfter=No
32	:	_	PUNCT	_	_	35	punct	_	_
33	processor	_	NOUN	_	_	35	nmod	_	_
34	hardware	_	NOUN	_	_	35	compound	_	_
35	failure	_	NOUN	_	_	6	parataxis	_	SpaceAfter=No
36	,	_	PUNCT	_	_	35	punct	_	_
37	operating	_	ADJ	_	_	38	amod	_	_
38	system	_	NOUN	_	_	39	nmod	_	_
39	hangs	_	VERB	_	_	35	conj	_	_
40	or	_	CCONJ	_	_	41	cc	_	_
41	crashes	_	VERB	_	_	39	conj	_	SpaceAfter=No
42	,	_	PUNCT	_	_	46	punct	_	_
43	temperature	_	NOUN	_	_	46	nmod	_	_
44	or	_	CCONJ	_	_	45	cc	_	_
45	voltage	_	NOUN	_	_	43	conj	_	_
46	deviations	_	NOUN	_	_	35	conj	_	SpaceAfter=No
47	,	_	PUNCT	_	_	49	punct	_	_
48	computational	_	ADJ	_	_	49	amod	_	_
49	performance	_	NOUN	_	_	35	conj	_	_
50	below	_	ADP	_	_	52	case	_	_
51	minimum	_	ADJ	_	_	52	amod	_	_
52	specifications	_	NOUN	_	_	49	nmod	_	SpaceAfter=No
53	,	_	PUNCT	_	_	56	punct	_	_
54	computational	_	ADJ	_	_	55	amod	_	_
55	error	_	NOUN	_	_	56	nmod	_	_
56	rates	_	NOUN	_	_	35	conj	_	_
57	above	_	ADP	_	_	59	case	_	_
58	maximum	_	ADJ	_	_	59	amod	_	_
59	specification	_	NOUN	_	_	56	nmod	_	SpaceAfter=No
60	,	_	PUNCT	_	_	63	punct	_	_
61	internal	_	ADJ	_	_	63	amod	_	_
62	communications	_	NOUN	_	_	63	nmod	_	_
63	failures	_	NOUN	_	_	35	conj	_	SpaceAfter=No
64	,	_	PUNCT	_	_	74	punct	_	_
65	and	_	CCONJ	_	_	74	cc	_	_
66	external	_	ADJ	_	_	73	amod	_	_
67	(	_	PUNCT	_	_	71	punct	_	SpaceAfter=No
68	with	_	ADP	_	_	71	case	_	_
69	the	_	DET	_	_	71	det	_	_
70	EVLA	_	PROPN	_	_	71	nmod	_	_
71	M&C	_	NOUN	_	_	74	nmod	_	SpaceAfter=No
72	)	_	PUNCT	_	_	71	punct	_	_
73	communications	_	NOUN	_	_	74	nmod	_	_
74	disruptions	_	NOUN	_	_	35	conj	_	SpaceAfter=No
75	.	_	PUNCT	_	_	74	punct	_	_

# newdoc id = 2000_nasax38_3.2.4.1.1_3
# sent_id = 82
# text = Communication services shall [SRS064] provide the following error handling information as feedback to the "message queue" API calls: a) notification of invalid or out of range application specified parameters on all operations, b) notification of an attempt to create a broadcast message queue, c) message queue "open" of end point ( SENDER/RECEIVER ) by non-assigned virtual group, d) message queue is full when performing a send operation, e) connection/transmission error, f) FTSS unable to create/open message queue, and g) notification that a received message was truncated to the buffer size provided.
1	Communication	_	NOUN	_	_	2	nmod	_	_
2	services	_	NOUN	_	_	7	nsubj	_	_
3	shall	_	AUX	_	_	7	aux	_	_
4	[	_	PUNCT	_	_	5	punct	_	SpaceAfter=No
5	SRS064	_	PROPN	_	_	2	appos	_	SpaceAfter=No
6	]	_	PUNCT	_	_	5	punct	_	_
7	provide	_	VERB	_	_	0	root	_	_
8	the	_	DET	_	_	12	det	_	_
9	following	_	ADJ	_	_	12	amod	_	_
10	error	_	NOUN	_	_	11	compound	_	_
11	handling	_	NOUN	_	_	12	nmod	_	_
12	information	_	NOUN	_	_	7	obj	_	_
13	as	_	ADP	_	_	14	case	_	_
14	feedback	_	NOUN	_	_	7	obl	_	_
15	to	_	ADP	_	_	22	case	_	_
16	the	_	DET	_	_	22	det	_	_
17	"	_	PUNCT	_	_	19	punct	_	SpaceAfter=No
18	message	_	NOUN	_	_	19	compound	_	_
19	queue	_	NOUN	_	_	21	nmod	_	SpaceAfter=No
20	"	_	PUNCT	_	_	19	punct	_	_
21	API	_	NOUN	_	_	22	nmod	_	_
22	calls	_	NOUN	_	_	14	nmod	_	SpaceAfter=No
23	:	_	PUNCT	_	_	26	punct	_	_
24	a	_	NUM	_	_	26	nummod	_	SpaceAfter=No
25	)	_	PUNCT	_	_	24	punct	_	_
26	notification	_	NOUN	_	_	7	parataxis	_	_
27	of	_	ADP	_	_	35	case	_	_
28	invalid	_	ADJ	_	_	35	amod	_	_
29	or	_	CCONJ	_	_	32	cc	_	_
30	out	_	ADV	_	_	32	advmod	_	_
31	of	_	ADP	_	_	30	fixed	_	_
32	range	_	NOUN	_	_	28	conj	_	_
33	application	_	NOUN	_	_	34	obl	_	_
34	specified	_	VERB	_	_	35	acl	_	_
35	parameters	_	NOUN	_	_	26	nmod	_	_
36	on	_	ADP	_	_	38	case	_	_
37	all	_	DET	_	_	38	det	_	_
38	operations	_	NOUN	_	_	26	nmod	_	SpaceAfter=No
39	,	_	PUNCT	_	_	42	punct	_	_
40	b	_	NUM	_	_	42	nummod	_	SpaceAfter=No
41	)	_	PUNCT	_	_	40	punct	_	_
42	notification	_	NOUN	_	_	26	conj	_	_
43	of	_	ADP	_	_	45	case	_	_
44	an	_	DET	_	_	45	det	_	_
45	attempt	_	NOUN	_	_	42	nmod	_	_
46	to	_	PART	_	_	47	mark	_	_
47	create	_	VERB	_	_	45	acl	_	_
48	a	_	DET	_	_	51	det	_	_
49	broadcast	_	ADJ	_	_	51	amod	_	_
50	message	_	NOUN	_	_	51	compound	_	_
51	queue	_	NOUN	_	_	47	obj	_	SpaceAfter=No
52	,	_	PUNCT	_	_	58	punct	_	_
53	c	_	NUM	_	_	58	nummod	_	SpaceAfter=No
54	)	_	PUNCT	_	_	53	punct	_	_
55	message	_	NOUN	_	_	56	compound	_	_
56	queue	_	NOUN	_	_	58	nmod	_	_
57	"	_	PUNCT	_	_	58	punct	_	SpaceAfter=No
58	open	_	VERB	_	_	26	conj	_	SpaceAfter=No
59	"	_	PUNCT	_	_	58	punct	_	_
60	of	_	ADP	_	_	62	case	_	_
61	end	_	NOUN	_	_	62	compound	_	_
62	point	_	NOUN	_	_	58	nmod	_	_
63	(	_	PUNCT	_	_	64	punct	_	_
64	SENDER	_	NOUN	_	_	58	nmod	_	SpaceAfter=No
65	/	_	SYM	_	_	66	cc	_	SpaceAfter=No
66	RECEIVER	_	NOUN	_	_	64	conj	_	_
67	)	_	PUNCT	_	_	64	punct	_	_
68	by	_	ADP	_	_	73	case	_	_
69	non	_	ADV	_	_	71	advmod	_	SpaceAfter=No
70	-	_	PUNCT	_	_	71	punct	_	SpaceAfter=No
71	assigned	_	ADJ	_	_	73	amod	_	_
72	virtual	_	ADJ	_	_	73	amod	_	_
73	group	_	NOUN	_	_	58	nmod	_	SpaceAfter=No
74	,	_	PUNCT	_	_	80	punct	_	_
75	d	_	NUM	_	_	78	nummod	_	SpaceAfter=No
76	)	_	PUNCT	_	_	75	punct	_	_
77	message	_	NOUN	_	_	78	compound	_	_
78	queue	_	NOUN	_	_	80	nsubj	_	_
79	is	_	AUX	_	_	80	cop	_	_
80	full	_	ADJ	_	_	26	conj	_	_
81	when	_	SCONJ	_	_	82	mark	_	_
82	performing	_	VERB	_	_	80	advcl	_	_
83	a	_	DET	_	_	85	det	_	_
84	send	_	VERB	_	_	85	compound	_	_
85	operation	_	NOUN	_	_	82	obj	_	SpaceAfter=No
86	,	_	PUNCT	_	_	92	punct	_	_
87	e	_	NUM	_	_	92	nummod	_	SpaceAfter=No
88	)	_	PUNCT	_	_	87	punct	_	_
89	connection	_	NOUN	_	_	92	nmod	_	SpaceAfter=No
90	/	_	SYM	_	_	91	cc	_	SpaceAfter=No
91	transmission	_	NOUN	_	_	89	conj	_	_
92	error	_	NOUN	_	_	26	conj	_	SpaceAfter=No
93	,	_	PUNCT	_	_	97	punct	_	_
94	f	_	NUM	_	_	97	nummod	_	SpaceAfter=No
95	)	_	PUNCT	_	_	94	punct	_	_
96	FTSS	_	NOUN	_	_	97	nsubj	_	_
97	unable	_	ADJ	_	_	26	conj	_	_
98	to	_	PART	_	_	99	mark	_	_
99	create	_	VERB	_	_	97	xcomp	_	SpaceAfter=No
100	/	_	SYM	_	_	101	cc	_	SpaceAfter=No
101	open	_	VERB	_	_	99	conj	_	_
102	message	_	NOUN	_	_	103	compound	_	_
103	queue	_	NOUN	_	_	99	obj	_	SpaceAfter=No
104	,	_	PUNCT	_	_	108	punct	_	_
105	and	_	CCONJ	_	_	108	cc	_	_
106	g	_	NUM	_	_	108	nummod	_	SpaceAfter=No
107	)	_	PUNCT	_	_	106	punct	_	_
108	notification	_	NOUN	_	_	26	conj	_	_
109	that	_	SCONJ	_	_	114	mark	_	_
110	a	_	DET	_	_	112	det	_	_
111	received	_	ADJ	_	_	112	amod	_	_
112	message	_	NOUN	_	_	114	nsubj:pass	_	_
113	was	_	AUX	_	_	114	aux:pass	_	_
114	truncated	_	VERB	_	_	108	acl	_	_
115	to	_	ADP	_	_	118	case	_	_
116	the	_	DET	_	_	118	det	_	_
117	buffer	_	NOUN	_	_	118	compound	_	_
118	size	_	NOUN	_	_	114	obl	_	_
119	provided	_	ADJ	_	_	118	acl	_	SpaceAfter=No
120	.	_	PUNCT	_	_	7	punct	_	_

# newdoc id = 2015_CS4311_3.1.1.2_Req8
# sent_id = 123
# text = The “Route Details” screen shall display the routes content as shown in Fig. 3.
1	The	_	DET	_	_	6	det	_	_
2	“	_	PUNCT	_	_	4	punct	_	SpaceAfter=No
3	Route	_	NOUN	_	_	4	nmod	_	_
4	Details	_	NOUN	_	_	6	compound	_	SpaceAfter=No
5	”	_	PUNCT	_	_	4	punct	_	_
6	screen	_	NOUN	_	_	8	nsubj	_	_
7	shall	_	AUX	_	_	8	aux	_	_
8	display	_	VERB	_	_	0	root	_	_
9	the	_	DET	_	_	11	det	_	_
10	routes	_	NOUN	_	_	11	nmod	_	_
11	content	_	NOUN	_	_	8	obj	_	_
12	as	_	SCONJ	_	_	13	mark	_	_
13	shown	_	VERB	_	_	8	advcl	_	_
14	in	_	ADP	_	_	15	case	_	_
15	Fig.	_	NOUN	_	_	13	obl	_	_
16	3	_	NUM	_	_	15	flat	_	SpaceAfter=No
17	.	_	PUNCT	_	_	8	punct	_	_

# newdoc id = 2000_nasax38_3.3.7
# sent_id = 50
# text = For MPCC/FTSS interfaces see the Radstone MPCC01 Firmware Manual, Pub #YD681MPCC1, and Radstone MPCC01 Hardware Manual, Pub #HH681MPCC1.
1	For	_	ADP	_	_	5	case	_	_
2	MPCC	_	NOUN	_	_	5	compound	_	SpaceAfter=No
3	/	_	SYM	_	_	4	case	_	SpaceAfter=No
4	FTSS	_	NOUN	_	_	2	nmod	_	_
5	interfaces	_	NOUN	_	_	6	obl	_	_
6	see	_	VERB	_	_	0	root	_	_
7	the	_	DET	_	_	11	det	_	_
8	Radstone	_	PROPN	_	_	11	nmod	_	_
9	MPCC01	_	PROPN	_	_	10	compound	_	_
10	Firmware	_	NOUN	_	_	11	nmod	_	_
11	Manual	_	NOUN	_	_	6	obj	_	SpaceAfter=No
12	,	_	PUNCT	_	_	13	punct	_	_
13	Pub	_	NOUN	_	_	11	appos	_	_
14	#	_	SYM	_	_	13	flat	_	SpaceAfter=No
15	YD681MPCC1	_	PROPN	_	_	13	flat	_	SpaceAfter=No
16	,	_	PUNCT	_	_	21	punct	_	_
17	and	_	CCONJ	_	_	21	cc	_	_
18	Radstone	_	PROPN	_	_	21	nmod	_	_
19	MPCC01	_	PROPN	_	_	20	compound	_	_
20	Hardware	_	NOUN	_	_	21	nmod	_	_
21	Manual	_	NOUN	_	_	11	conj	_	SpaceAfter=No
22	,	_	PUNCT	_	_	23	punct	_	_
23	Pub	_	NOUN	_	_	21	appos	_	_
24	#	_	SYM	_	_	23	flat	_	SpaceAfter=No
25	HH681MPCC1	_	PROPN	_	_	23	flat	_	SpaceAfter=No
26	.	_	PUNCT	_	_	6	punct	_	_

# sent_id = 51
# text = The telemetry serial line on the MPCC cards will be configured as follows: • Mode: 0x1103 o SLDC Mode o Buffered Transfer o Single Frame Transfer o Report a Break character, but do not close the RX channel o Normal Operation - Note: CRC is always generated in SDLC mode • Baud Speed: 2,097,152 bps • Buffer size: 13,000 bytes • No parity, 1 stop bit, 8 bit chars: 0x80
1	The	_	DET	_	_	4	det	_	_
2	telemetry	_	NOUN	_	_	4	nmod	_	_
3	serial	_	ADJ	_	_	4	amod	_	_
4	line	_	NOUN	_	_	11	nsubj:pass	_	_
5	on	_	ADP	_	_	8	case	_	_
6	the	_	DET	_	_	8	det	_	_
7	MPCC	_	NOUN	_	_	8	nmod	_	_
8	cards	_	NOUN	_	_	4	nmod	_	_
9	will	_	AUX	_	_	11	aux	_	_
10	be	_	AUX	_	_	11	aux:pass	_	_
11	configured	_	VERB	_	_	0	root	_	_
12	as	_	SCONJ	_	_	13	mark	_	_
13	follows	_	VERB	_	_	11	advcl	_	SpaceAfter=No
14	:	_	PUNCT	_	_	16	punct	_	_
15	•	_	PUNCT	_	_	16	punct	_	_
16	Mode	_	NOUN	_	_	13	parataxis	_	SpaceAfter=No
17	:	_	PUNCT	_	_	16	punct	_	_
18	0x1103	_	NUM	_	_	16	parataxis	_	_
19	o	_	PUNCT	_	_	21	punct	_	_
20	SLDC	_	PROPN	_	_	21	compound	_	_
21	Mode	_	NOUN	_	_	16	parataxis	_	_
22	o	_	PUNCT	_	_	24	punct	_	_
23	Buffered	_	ADJ	_	_	24	amod	_	_
24	Transfer	_	NOUN	_	_	21	list	_	_
25	o	_	PUNCT	_	_	28	punct	_	_
26	Single	_	ADJ	_	_	27	amod	_	_
27	Frame	_	NOUN	_	_	28	compound	_	_
28	Transfer	_	NOUN	_	_	21	list	_	_
29	o	_	PUNCT	_	_	30	punct	_	_
30	Report	_	VERB	_	_	21	list	_	_
31	a	_	DET	_	_	33	det	_	_
32	Break	_	NOUN	_	_	33	compound	_	_
33	character	_	NOUN	_	_	30	obj	_	SpaceAfter=No
34	,	_	PUNCT	_	_	38	punct	_	_
35	but	_	CCONJ	_	_	38	cc	_	_
36	do	_	AUX	_	_	38	aux	_	_
37	not	_	PART	_	_	38	advmod	_	_
38	close	_	VERB	_	_	30	conj	_	_
39	the	_	DET	_	_	41	det	_	_
40	RX	_	NOUN	_	_	41	nmod	_	_
41	channel	_	NOUN	_	_	38	obj	_	_
42	o	_	PUNCT	_	_	44	punct	_	_
43	Normal	_	ADJ	_	_	44	amod	_	_
44	Operation	_	NOUN	_	_	21	list	_	_
45	-	_	PUNCT	_	_	46	punct	_	_
46	Note	_	NOUN	_	_	44	parataxis	_	SpaceAfter=No
47	:	_	PUNCT	_	_	46	punct	_	_
48	CRC	_	NOUN	_	_	51	nsubj:pass	_	_
49	is	_	AUX	_	_	51	aux:pass	_	_
50	always	_	ADV	_	_	51	advmod	_	_
51	generated	_	VERB	_	_	46	parataxis	_	_
52	in	_	ADP	_	_	54	case	_	_
53	SDLC	_	PROPN	_	_	54	compound	_	_
54	mode	_	NOUN	_	_	51	obl	_	_
55	•	_	PUNCT	_	_	57	punct	_	_
56	Baud	_	NOUN	_	_	57	nmod	_	_
57	Speed	_	NOUN	_	_	16	list	_	SpaceAfter=No
58	:	_	PUNCT	_	_	57	punct	_	_
59	2,097,152	_	NUM	_	_	60	nummod	_	_
60	bps	_	NOUN	_	_	57	parataxis	_	_
61	•	_	PUNCT	_	_	63	punct	_	_
62	Buffer	_	NOUN	_	_	63	compound	_	_
63	size	_	NOUN	_	_	16	list	_	SpaceAfter=No
64	:	_	PUNCT	_	_	63	punct	_	_
65	13,000	_	NUM	_	_	66	nummod	_	_
66	bytes	_	NOUN	_	_	63	parataxis	_	_
67	•	_	PUNCT	_	_	69	punct	_	_
68	No	_	DET	_	_	69	det	_	_
69	parity	_	NOUN	_	_	16	list	_	SpaceAfter=No
70	,	_	PUNCT	_	_	73	punct	_	_
71	1	_	NUM	_	_	73	nummod	_	_
72	stop	_	NOUN	_	_	73	compound	_	_
73	bit	_	NOUN	_	_	69	list	_	SpaceAfter=No
74	,	_	PUNCT	_	_	77	punct	_	_
75	8	_	NUM	_	_	76	nummod	_	_
76	bit	_	NOUN	_	_	77	nmod	_	_
77	chars	_	NOUN	_	_	69	list	_	SpaceAfter=No
78	:	_	PUNCT	_	_	77	punct	_	_
79	0x80	_	NUM	_	_	77	parataxis	_	_

# sent_id = 52
# text = The command serial line on the MPCC cards will be configured as follows: • Mode: 0x1103 o SLDC Mode o Buffered Transfer o Single Frame Transfer o Report a Break character, but do not close the RX channel o Normal Operation - Note: CRC is always generated in SDLC mode • Buffer size: 332 bytes • Baud Speed: 1,048,576 bps • No parity, 1 stop bit, 8 bit chars: 0x80
1	The	_	DET	_	_	4	det	_	_
2	command	_	NOUN	_	_	4	nmod	_	_
3	serial	_	ADJ	_	_	4	amod	_	_
4	line	_	NOUN	_	_	11	nsubj:pass	_	_
5	on	_	ADP	_	_	8	case	_	_
6	the	_	DET	_	_	8	det	_	_
7	MPCC	_	NOUN	_	_	8	nmod	_	_
8	cards	_	NOUN	_	_	4	nmod	_	_
9	will	_	AUX	_	_	11	aux	_	_
10	be	_	AUX	_	_	11	aux:pass	_	_
11	configured	_	VERB	_	_	0	root	_	_
12	as	_	SCONJ	_	_	13	mark	_	_
13	follows	_	VERB	_	_	11	advcl	_	SpaceAfter=No
14	:	_	PUNCT	_	_	16	punct	_	_
15	•	_	PUNCT	_	_	16	punct	_	_
16	Mode	_	NOUN	_	_	13	parataxis	_	SpaceAfter=No
17	:	_	PUNCT	_	_	16	punct	_	_
18	0x1103	_	NUM	_	_	16	parataxis	_	_
19	o	_	PUNCT	_	_	21	punct	_	_
20	SLDC	_	PROPN	_	_	21	compound	_	_
21	Mode	_	NOUN	_	_	16	parataxis	_	_
22	o	_	PUNCT	_	_	24	punct	_	_
23	Buffered	_	ADJ	_	_	24	amod	_	_
24	Transfer	_	NOUN	_	_	21	list	_	_
25	o	_	PUNCT	_	_	28	punct	_	_
26	Single	_	ADJ	_	_	27	amod	_	_
27	Frame	_	NOUN	_	_	28	compound	_	_
28	Transfer	_	NOUN	_	_	21	list	_	_
29	o	_	PUNCT	_	_	30	punct	_	_
30	Report	_	VERB	_	_	21	list	_	_
31	a	_	DET	_	_	33	det	_	_
32	Break	_	NOUN	_	_	33	compound	_	_
33	character	_	NOUN	_	_	30	obj	_	SpaceAfter=No
34	,	_	PUNCT	_	_	38	punct	_	_
35	but	_	CCONJ	_	_	38	cc	_	_
36	do	_	AUX	_	_	38	aux	_	_
37	not	_	PART	_	_	38	advmod	_	_
38	close	_	VERB	_	_	30	conj	_	_
39	the	_	DET	_	_	41	det	_	_
40	RX	_	NOUN	_	_	41	nmod	_	_
41	channel	_	NOUN	_	_	38	obj	_	_
42	o	_	PUNCT	_	_	44	punct	_	_
43	Normal	_	ADJ	_	_	44	amod	_	_
44	Operation	_	NOUN	_	_	21	list	_	_
45	-	_	PUNCT	_	_	44	punct	_	_
46	Note	_	NOUN	_	_	44	parataxis	_	SpaceAfter=No
47	:	_	PUNCT	_	_	46	punct	_	_
48	CRC	_	NOUN	_	_	51	nsubj:pass	_	_
49	is	_	AUX	_	_	51	aux:pass	_	_
50	always	_	ADV	_	_	51	advmod	_	_
51	generated	_	VERB	_	_	46	parataxis	_	_
52	in	_	ADP	_	_	54	case	_	_
53	SDLC	_	PROPN	_	_	54	compound	_	_
54	mode	_	NOUN	_	_	51	obl	_	_
55	•	_	PUNCT	_	_	57	punct	_	_
56	Buffer	_	NOUN	_	_	57	compound	_	_
57	size	_	NOUN	_	_	16	list	_	SpaceAfter=No
58	:	_	PUNCT	_	_	57	punct	_	_
59	332	_	NUM	_	_	60	nummod	_	_
60	bytes	_	NOUN	_	_	57	parataxis	_	_
61	•	_	PUNCT	_	_	63	punct	_	_
62	Baud	_	NOUN	_	_	63	nmod	_	_
63	Speed	_	NOUN	_	_	16	list	_	SpaceAfter=No
64	:	_	PUNCT	_	_	63	punct	_	_
65	1,048,576	_	NUM	_	_	66	nummod	_	_
66	bps	_	NOUN	_	_	63	parataxis	_	_
67	•	_	PUNCT	_	_	69	punct	_	_
68	No	_	DET	_	_	69	det	_	_
69	parity	_	NOUN	_	_	16	list	_	SpaceAfter=No
70	,	_	PUNCT	_	_	73	punct	_	_
71	1	_	NUM	_	_	73	nummod	_	_
72	stop	_	NOUN	_	_	73	compound	_	_
73	bit	_	NOUN	_	_	69	list	_	SpaceAfter=No
74	,	_	PUNCT	_	_	77	punct	_	_
75	8	_	NUM	_	_	76	nummod	_	_
76	bit	_	NOUN	_	_	77	nmod	_	_
77	chars	_	NOUN	_	_	69	list	_	SpaceAfter=No
78	:	_	PUNCT	_	_	77	punct	_	_
79	0x80	_	NUM	_	_	77	parataxis	_	_

# newdoc id = 2001_npac_5.1.2.2.5_RR5-68.3
# sent_id = 175
# text = NPAC SMS shall, upon broadcasting the delete of the Subscription Version to EDR Local SMSs, and create of Subscription Version to non-EDR Local SMSs, set the status of the previously active Subscription Version being disconnected due to the port-to-original request to: (Previously SV-423.3) • Active, if ALL EDR and non-EDR Local SMSs, fail the broadcast. • Old, for all other cases.
1	NPAC	_	PROPN	_	_	2	nmod	_	_
2	SMS	_	NOUN	_	_	30	nsubj	_	_
3	shall	_	AUX	_	_	30	aux	_	SpaceAfter=No
4	,	_	PUNCT	_	_	6	punct	_	_
5	upon	_	SCONJ	_	_	6	mark	_	_
6	broadcasting	_	VERB	_	_	30	advcl	_	_
7	the	_	DET	_	_	8	det	_	_
8	delete	_	VERB	_	_	6	obj	_	_
9	of	_	ADP	_	_	12	case	_	_
10	the	_	DET	_	_	12	det	_	_
11	Subscription	_	NOUN	_	_	12	compound	_	_
12	Version	_	NOUN	_	_	8	nmod	_	_
13	to	_	ADP	_	_	16	case	_	_
14	EDR	_	PROPN	_	_	16	amod	_	_
15	Local	_	ADJ	_	_	16	amod	_	_
16	SMSs	_	NOUN	_	_	6	obl	_	SpaceAfter=No
17	,	_	PUNCT	_	_	19	punct	_	_
18	and	_	CCONJ	_	_	19	cc	_	_
19	create	_	VERB	_	_	6	conj	_	_
20	of	_	ADP	_	_	22	case	_	_
21	Subscription	_	NOUN	_	_	22	nmod	_	_
22	Version	_	NOUN	_	_	19	nmod	_	_
23	to	_	ADP	_	_	28	case	_	_
24	non	_	ADV	_	_	26	advmod	_	SpaceAfter=No
25	-	_	PUNCT	_	_	26	punct	_	SpaceAfter=No
26	EDR	_	PROPN	_	_	28	amod	_	_
27	Local	_	ADJ	_	_	28	amod	_	_
28	SMSs	_	NOUN	_	_	6	obl	_	SpaceAfter=No
29	,	_	PUNCT	_	_	6	punct	_	_
30	set	_	VERB	_	_	0	root	_	_
31	the	_	DET	_	_	32	det	_	_
32	status	_	NOUN	_	_	30	obj	_	_
33	of	_	ADP	_	_	38	case	_	_
34	the	_	DET	_	_	38	det	_	_
35	previously	_	ADV	_	_	36	advmod	_	_
36	active	_	ADJ	_	_	38	amod	_	_
37	Subscription	_	NOUN	_	_	38	nmod	_	_
38	Version	_	NOUN	_	_	32	obj	_	_
39	being	_	AUX	_	_	40	aux	_	_
40	disconnected	_	VERB	_	_	38	acl	_	_
41	due	_	ADP	_	_	49	case	_	_
42	to	_	ADP	_	_	41	fixed	_	_
43	the	_	DET	_	_	49	det	_	_
44	port	_	VERB	_	_	49	acl	_	SpaceAfter=No
45	-	_	PUNCT	_	_	46	punct	_	SpaceAfter=No
46	to	_	ADP	_	_	48	case	_	SpaceAfter=No
47	-	_	PUNCT	_	_	48	punct	_	SpaceAfter=No
48	original	_	ADJ	_	_	44	obl	_	_
49	request	_	NOUN	_	_	40	obl	_	_
50	to	_	ADP	_	_	57	case	_	SpaceAfter=No
51	:	_	PUNCT	_	_	50	punct	_	_
52	(	_	PUNCT	_	_	54	punct	_	SpaceAfter=No
53	Previously	_	ADV	_	_	54	advmod	_	_
54	SV-423.3	_	PROPN	_	_	30	appos	_	SpaceAfter=No
55	)	_	PUNCT	_	_	54	punct	_	_
56	•	_	PUNCT	_	_	57	punct	_	_
57	Active	_	ADJ	_	_	30	iobj	_	SpaceAfter=No
58	,	_	PUNCT	_	_	69	punct	_	_
59	if	_	SCONJ	_	_	69	mark	_	_
60	ALL	_	DET	_	_	67	det	_	_
61	EDR	_	PROPN	_	_	67	amod	_	_
62	and	_	CCONJ	_	_	65	cc	_	_
63	non	_	ADV	_	_	65	advmod	_	SpaceAfter=No
64	-	_	PUNCT	_	_	65	punct	_	SpaceAfter=No
65	EDR	_	PROPN	_	_	61	conj	_	_
66	Local	_	ADJ	_	_	67	amod	_	_
67	SMSs	_	NOUN	_	_	69	nsubj	_	SpaceAfter=No
68	,	_	PUNCT	_	_	69	punct	_	_
69	fail	_	VERB	_	_	57	advcl	_	_
70	the	_	DET	_	_	71	det	_	_
71	broadcast	_	NOUN	_	_	69	obj	_	SpaceAfter=No
72	.	_	PUNCT	_	_	57	punct	_	_
73	•	_	PUNCT	_	_	74	punct	_	_
74	Old	_	ADJ	_	_	57	list	_	SpaceAfter=No
75	,	_	PUNCT	_	_	79	punct	_	_
76	for	_	ADP	_	_	79	case	_	_
77	all	_	DET	_	_	79	det	_	_
78	other	_	ADJ	_	_	79	amod	_	_
79	cases	_	NOUN	_	_	74	obl	_	SpaceAfter=No
80	.	_	PUNCT	_	_	74	punct	_	_

# newdoc id = 1998_themas_3.1.10.1
# sent_id = 124
# text = The THEMAS shall provide the ability for the supervisor to select between two different types of reports: 1) the operational history of the THEMAS system for the past twelve months and 2) a statistical summary for any selected mont h.
1	The	_	DET	_	_	2	det	_	_
2	THEMAS	_	PROPN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	provide	_	VERB	_	_	0	root	_	_
5	the	_	DET	_	_	6	det	_	_
6	ability	_	NOUN	_	_	4	obj	_	_
7	for	_	ADP	_	_	9	case	_	_
8	the	_	DET	_	_	9	det	_	_
9	supervisor	_	NOUN	_	_	6	nmod	_	_
10	to	_	PART	_	_	11	mark	_	_
11	select	_	VERB	_	_	6	acl	_	_
12	between	_	ADP	_	_	15	case	_	_
13	two	_	NUM	_	_	15	nummod	_	_
14	different	_	ADJ	_	_	15	amod	_	_
15	types	_	NOUN	_	_	11	obj	_	_
16	of	_	ADP	_	_	17	case	_	_
17	reports	_	NOUN	_	_	15	nmod	_	SpaceAfter=No
18	:	_	PUNCT	_	_	23	punct	_	_
19	1	_	NUM	_	_	23	nummod	_	SpaceAfter=No
20	)	_	PUNCT	_	_	19	punct	_	_
21	the	_	DET	_	_	23	det	_	_
22	operational	_	ADJ	_	_	23	amod	_	_
23	history	_	NOUN	_	_	4	parataxis	_	_
24	of	_	ADP	_	_	27	case	_	_
25	the	_	DET	_	_	27	det	_	_
26	THEMAS	_	PROPN	_	_	27	compound	_	_
27	system	_	NOUN	_	_	23	nmod	_	_
28	for	_	ADP	_	_	32	case	_	_
29	the	_	DET	_	_	32	det	_	_
30	past	_	ADJ	_	_	32	amod	_	_
31	twelve	_	NUM	_	_	32	nummod	_	_
32	months	_	NOUN	_	_	23	nmod	_	_
33	and	_	CCONJ	_	_	38	cc	_	_
34	2	_	NUM	_	_	38	nummod	_	SpaceAfter=No
35	)	_	PUNCT	_	_	34	punct	_	_
36	a	_	DET	_	_	38	det	_	_
37	statistical	_	ADJ	_	_	38	amod	_	_
38	summary	_	NOUN	_	_	23	conj	_	_
39	for	_	ADP	_	_	42	case	_	_
40	any	_	DET	_	_	42	det	_	_
41	selected	_	ADJ	_	_	42	amod	_	_
42	mont	_	NOUN	_	_	38	nmod	_	_
43	h	_	X	_	_	42	goeswith	_	SpaceAfter=No
44	.	_	PUNCT	_	_	4	punct	_	_

# newdoc id = 2001_npac_7.9.3.1_R7-94.2
# sent_id = 90
# text = NPAC SMS shall support one of the digital signature algorithms listed in the OIW Stable Implementation Agreement, Part 12, 1995.
1	NPAC	_	PROPN	_	_	2	nmod	_	_
2	SMS	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	support	_	VERB	_	_	0	root	_	_
5	one	_	PRON	_	_	4	obj	_	_
6	of	_	ADP	_	_	10	case	_	_
7	the	_	DET	_	_	10	det	_	_
8	digital	_	ADJ	_	_	9	amod	_	_
9	signature	_	NOUN	_	_	10	compound	_	_
10	algorithms	_	NOUN	_	_	5	nmod	_	_
11	listed	_	VERB	_	_	10	acl	_	_
12	in	_	ADP	_	_	17	case	_	_
13	the	_	DET	_	_	17	det	_	_
14	OIW	_	PROPN	_	_	17	nmod	_	_
15	Stable	_	ADJ	_	_	16	amod	_	_
16	Implementation	_	NOUN	_	_	17	compound	_	_
17	Agreement	_	NOUN	_	_	11	obl	_	SpaceAfter=No
18	,	_	PUNCT	_	_	19	punct	_	_
19	Part	_	NOUN	_	_	17	nmod	_	_
20	12	_	NUM	_	_	19	flat	_	SpaceAfter=No
21	,	_	PUNCT	_	_	22	punct	_	_
22	1995	_	NUM	_	_	17	nmod	_	SpaceAfter=No
23	.	_	PUNCT	_	_	4	punct	_	_

# newdoc id = 1998_ALQ-172_3.2.4.2.4
# sent_id = 208
# text = For the AC-130U only, externally mounted LRUs shall withstand the pressure pulses from normal operational firing combinations of the 25mm, 40mm, and 105mm guns at the location on the aircraft appropriate to the mountings the LRU.
1	For	_	ADP	_	_	3	case	_	_
2	the	_	DET	_	_	3	det	_	_
3	AC-130U	_	PROPN	_	_	10	obl	_	_
4	only	_	ADV	_	_	3	advmod	_	SpaceAfter=No
5	,	_	PUNCT	_	_	3	punct	_	_
6	externally	_	ADV	_	_	7	advmod	_	_
7	mounted	_	ADJ	_	_	8	amod	_	_
8	LRUs	_	NOUN	_	_	10	nsubj	_	_
9	shall	_	AUX	_	_	10	aux	_	_
10	withstand	_	VERB	_	_	0	root	_	_
11	the	_	DET	_	_	13	det	_	_
12	pressure	_	NOUN	_	_	13	compound	_	_
13	pulses	_	NOUN	_	_	10	obj	_	_
14	from	_	ADP	_	_	18	case	_	_
15	normal	_	ADJ	_	_	18	amod	_	_
16	operational	_	ADJ	_	_	18	amod	_	_
17	firing	_	NOUN	_	_	18	compound	_	_
18	combinations	_	NOUN	_	_	13	nmod	_	_
19	of	_	ADP	_	_	30	case	_	_
20	the	_	DET	_	_	30	det	_	_
21	25	_	NUM	_	_	22	nummod	_	SpaceAfter=No
22	mm	_	NOUN	_	_	30	nmod	_	SpaceAfter=No
23	,	_	PUNCT	_	_	25	punct	_	_
24	40	_	NUM	_	_	25	nummod	_	SpaceAfter=No
25	mm	_	NOUN	_	_	22	conj	_	SpaceAfter=No
26	,	_	PUNCT	_	_	29	punct	_	_
27	and	_	CCONJ	_	_	29	cc	_	_
28	105	_	NUM	_	_	29	nummod	_	SpaceAfter=No
29	mm	_	NOUN	_	_	22	conj	_	_
30	guns	_	NOUN	_	_	18	nmod	_	_
31	at	_	ADP	_	_	33	case	_	_
32	the	_	DET	_	_	33	det	_	_
33	location	_	NOUN	_	_	10	obl	_	_
34	on	_	ADP	_	_	36	case	_	_
35	the	_	DET	_	_	36	det	_	_
36	aircraft	_	NOUN	_	_	33	nmod	_	_
37	appropriate	_	ADJ	_	_	33	amod	_	_
38	to	_	ADP	_	_	40	case	_	_
39	the	_	DET	_	_	40	det	_	_
40	mountings	_	NOUN	_	_	37	obl	_	_
41	the	_	DET	_	_	42	det	_	_
42	LRU	_	NOUN	_	_	40	nmod	_	SpaceAfter=No
43	.	_	PUNCT	_	_	10	punct	_	_

# sent_id = 209
# text = The magnitude of the gunblast shall be that of the pointing and firing rate of each gun that produces the maximum pressure pulses, or resonant conditions, within or on the LRU.
1	The	_	DET	_	_	2	det	_	_
2	magnitude	_	NOUN	_	_	8	nsubj	_	_
3	of	_	ADP	_	_	5	case	_	_
4	the	_	DET	_	_	5	det	_	_
5	gunblast	_	NOUN	_	_	2	nmod	_	_
6	shall	_	AUX	_	_	8	aux	_	_
7	be	_	AUX	_	_	8	cop	_	_
8	that	_	PRON	_	_	0	root	_	_
9	of	_	ADP	_	_	14	case	_	_
10	the	_	DET	_	_	14	det	_	_
11	pointing	_	NOUN	_	_	14	compound	_	_
12	and	_	CCONJ	_	_	13	cc	_	_
13	firing	_	NOUN	_	_	11	conj	_	_
14	rate	_	NOUN	_	_	8	nmod	_	_
15	of	_	ADP	_	_	17	case	_	_
16	each	_	DET	_	_	17	det	_	_
17	gun	_	NOUN	_	_	14	nmod	_	_
18	that	_	PRON	_	_	19	nsubj	_	_
19	produces	_	VERB	_	_	17	acl:relcl	_	_
20	the	_	DET	_	_	23	det	_	_
21	maximum	_	ADJ	_	_	23	amod	_	_
22	pressure	_	NOUN	_	_	23	compound	_	_
23	pulses	_	NOUN	_	_	19	obj	_	SpaceAfter=No
24	,	_	PUNCT	_	_	27	punct	_	_
25	or	_	CCONJ	_	_	27	cc	_	_
26	resonant	_	ADJ	_	_	27	amod	_	_
27	conditions	_	NOUN	_	_	23	conj	_	SpaceAfter=No
28	,	_	PUNCT	_	_	27	punct	_	_
29	within	_	ADP	_	_	33	case	_	_
30	or	_	CCONJ	_	_	31	cc	_	_
31	on	_	ADP	_	_	29	conj	_	_
32	the	_	DET	_	_	33	det	_	_
33	LRU	_	NOUN	_	_	19	obl	_	SpaceAfter=No
34	.	_	PUNCT	_	_	8	punct	_	_

# sent_id = 210
# text = The possible combinations of firings are: 25mm & 40 mm; 25mm & 105mm; 40mm & 105mm; and each singly (25mm, 40mm, 105mm).
1	The	_	DET	_	_	3	det	_	_
2	possible	_	ADJ	_	_	3	amod	_	_
3	combinations	_	NOUN	_	_	9	nsubj	_	_
4	of	_	ADP	_	_	5	case	_	_
5	firings	_	NOUN	_	_	3	nmod	_	_
6	are	_	AUX	_	_	9	cop	_	SpaceAfter=No
7	:	_	PUNCT	_	_	9	punct	_	_
8	25	_	NUM	_	_	9	nummod	_	SpaceAfter=No
9	mm	_	NOUN	_	_	0	root	_	_
10	&	_	SYM	_	_	12	cc	_	_
11	40	_	NUM	_	_	12	nummod	_	_
12	mm	_	NOUN	_	_	9	conj	_	SpaceAfter=No
13	;	_	PUNCT	_	_	15	punct	_	_
14	25	_	NUM	_	_	15	nummod	_	SpaceAfter=No
15	mm	_	NOUN	_	_	9	conj	_	_
16	&	_	SYM	_	_	18	cc	_	_
17	105	_	NUM	_	_	18	nummod	_	SpaceAfter=No
18	mm	_	NOUN	_	_	15	conj	_	SpaceAfter=No
19	;	_	PUNCT	_	_	21	punct	_	_
20	40	_	NUM	_	_	21	nummod	_	SpaceAfter=No
21	mm	_	NOUN	_	_	9	conj	_	_
22	&	_	SYM	_	_	24	cc	_	_
23	105	_	NUM	_	_	24	nummod	_	SpaceAfter=No
24	mm	_	NOUN	_	_	21	conj	_	SpaceAfter=No
25	;	_	PUNCT	_	_	27	punct	_	_
26	and	_	CCONJ	_	_	27	cc	_	_
27	each	_	PRON	_	_	9	conj	_	_
28	singly	_	ADV	_	_	27	advmod	_	_
29	(	_	PUNCT	_	_	31	punct	_	SpaceAfter=No
30	25	_	NUM	_	_	31	nummod	_	SpaceAfter=No
31	mm	_	NOUN	_	_	27	appos	_	SpaceAfter=No
32	,	_	PUNCT	_	_	34	punct	_	_
33	40	_	NUM	_	_	34	nummod	_	SpaceAfter=No
34	mm	_	NOUN	_	_	31	conj	_	SpaceAfter=No
35	,	_	PUNCT	_	_	37	punct	_	_
36	105	_	NUM	_	_	37	nummod	_	SpaceAfter=No
37	mm	_	NOUN	_	_	34	conj	_	SpaceAfter=No
38	)	_	PUNCT	_	_	31	punct	_	SpaceAfter=No
39	.	_	PUNCT	_	_	9	punct	_	_

# newdoc id = 2007_wateruse_4.1.1.1_SR24
# sent_id = 233
# text = Report on any water use amounts sold or given from one permit to another permit, especially reclaimed water (reclaimed water can be taken away, depending on the contract.
1	Report	_	VERB	_	_	0	root	_	_
2	on	_	ADP	_	_	6	case	_	_
3	any	_	DET	_	_	6	det	_	_
4	water	_	NOUN	_	_	5	nmod	_	_
5	use	_	NOUN	_	_	6	compound	_	_
6	amounts	_	NOUN	_	_	1	obj	_	_
7	sold	_	VERB	_	_	6	acl	_	_
8	or	_	CCONJ	_	_	9	cc	_	_
9	given	_	VERB	_	_	7	conj	_	_
10	from	_	ADP	_	_	12	case	_	_
11	one	_	NUM	_	_	12	nummod	_	_
12	permit	_	NOUN	_	_	7	obl	_	_
13	to	_	ADP	_	_	15	case	_	_
14	another	_	ADJ	_	_	15	amod	_	_
15	permit	_	NOUN	_	_	12	nmod	_	SpaceAfter=No
16	,	_	PUNCT	_	_	19	punct	_	_
17	especially	_	ADV	_	_	19	advmod	_	_
18	reclaimed	_	ADJ	_	_	19	amod	_	_
19	water	_	NOUN	_	_	6	nmod	_	_
20	(	_	PUNCT	_	_	25	punct	_	SpaceAfter=No
21	reclaimed	_	ADJ	_	_	22	amod	_	_
22	water	_	NOUN	_	_	25	nsubj:pass	_	_
23	can	_	AUX	_	_	25	aux	_	_
24	be	_	AUX	_	_	25	aux:pass	_	_
25	taken	_	VERB	_	_	1	parataxis	_	_
26	away	_	ADV	_	_	25	advmod	_	SpaceAfter=No
27	,	_	PUNCT	_	_	28	punct	_	_
28	depending	_	VERB	_	_	25	advcl	_	_
29	on	_	ADP	_	_	31	case	_	_
30	the	_	DET	_	_	31	det	_	_
31	contract	_	NOUN	_	_	28	iobj	_	SpaceAfter=No
32	.	_	PUNCT	_	_	1	punct	_	_

# sent_id = 234
# text = It is kind-of-like “leasing” the water, but can be taken away).
1	It	_	PRON	_	_	2	expl	_	_
2	is	_	AUX	_	_	0	root	_	_
3	kind	_	ADV	_	_	9	advmod	_	SpaceAfter=No
4	-	_	PUNCT	_	_	5	punct	_	SpaceAfter=No
5	of	_	ADP	_	_	3	fixed	_	SpaceAfter=No
6	-	_	PUNCT	_	_	7	punct	_	SpaceAfter=No
7	like	_	SCONJ	_	_	9	mark	_	_
8	“	_	PUNCT	_	_	9	punct	_	SpaceAfter=No
9	leasing	_	VERB	_	_	2	csubj	_	SpaceAfter=No
10	”	_	PUNCT	_	_	9	punct	_	_
11	the	_	DET	_	_	12	det	_	_
12	water	_	NOUN	_	_	9	obj	_	SpaceAfter=No
13	,	_	PUNCT	_	_	17	punct	_	_
14	but	_	CCONJ	_	_	17	cc	_	_
15	can	_	AUX	_	_	17	aux	_	_
16	be	_	AUX	_	_	17	aux:pass	_	_
17	taken	_	VERB	_	_	9	conj	_	_
18	away	_	ADV	_	_	17	advmod	_	SpaceAfter=No
19	)	_	PUNCT	_	_	2	punct	_	SpaceAfter=No
20	.	_	PUNCT	_	_	2	punct	_	_

# newdoc id = 2007_ertms_4.8.10.1
# sent_id = 30
# text = It shall be possible to send information regarding the inhibition of the following different types of brake(M): - Regenerative brake, - Eddy current brake, - Magnetic shoe brake.
1	It	_	PRON	_	_	4	expl	_	_
2	shall	_	AUX	_	_	4	aux	_	_
3	be	_	AUX	_	_	4	cop	_	_
4	possible	_	ADJ	_	_	0	root	_	_
5	to	_	PART	_	_	6	mark	_	_
6	send	_	VERB	_	_	4	csubj	_	_
7	information	_	NOUN	_	_	6	obj	_	_
8	regarding	_	ADP	_	_	10	case	_	_
9	the	_	DET	_	_	10	det	_	_
10	inhibition	_	NOUN	_	_	7	nmod	_	_
11	of	_	ADP	_	_	15	case	_	_
12	the	_	DET	_	_	15	det	_	_
13	following	_	ADJ	_	_	15	amod	_	_
14	different	_	ADJ	_	_	15	amod	_	_
15	types	_	NOUN	_	_	10	nmod	_	_
16	of	_	ADP	_	_	17	case	_	_
17	brake	_	NOUN	_	_	15	nmod	_	SpaceAfter=No
18	(	_	PUNCT	_	_	19	punct	_	SpaceAfter=No
19	M	_	ADJ	_	_	4	advmod	_	SpaceAfter=No
20	)	_	PUNCT	_	_	19	punct	_	SpaceAfter=No
21	:	_	PUNCT	_	_	24	punct	_	_
22	-	_	PUNCT	_	_	24	punct	_	_
23	Regenerative	_	ADJ	_	_	24	amod	_	_
24	brake	_	NOUN	_	_	4	parataxis	_	SpaceAfter=No
25	,	_	PUNCT	_	_	29	punct	_	_
26	-	_	PUNCT	_	_	29	punct	_	_
27	Eddy	_	NOUN	_	_	28	compound	_	_
28	current	_	NOUN	_	_	29	compound	_	_
29	brake	_	NOUN	_	_	24	list	_	SpaceAfter=No
30	,	_	PUNCT	_	_	34	punct	_	_
31	-	_	PUNCT	_	_	34	punct	_	_
32	Magnetic	_	ADJ	_	_	33	amod	_	_
33	shoe	_	NOUN	_	_	34	compound	_	_
34	brake	_	NOUN	_	_	24	list	_	SpaceAfter=No
35	.	_	PUNCT	_	_	4	punct	_	_

# newdoc id = 2006_eirenesys15_9A.3
# sent_id = 10
# text = The Function Codes used in association with Maintenance Services Team Numbers (CT=6) shall conform to table 9A-2. (M)
1	The	_	DET	_	_	3	det	_	_
2	Function	_	NOUN	_	_	3	compound	_	_
3	Codes	_	NOUN	_	_	18	nsubj	_	_
4	used	_	VERB	_	_	3	acl	_	_
5	in	_	ADP	_	_	6	case	_	_
6	association	_	NOUN	_	_	4	obl	_	_
7	with	_	ADP	_	_	11	case	_	_
8	Maintenance	_	NOUN	_	_	9	nmod	_	_
9	Services	_	NOUN	_	_	10	nmod	_	_
10	Team	_	NOUN	_	_	11	nmod	_	_
11	Numbers	_	NOUN	_	_	6	nmod	_	_
12	(	_	PUNCT	_	_	14	punct	_	SpaceAfter=No
13	CT	_	NOUN	_	_	14	nsubj	_	SpaceAfter=No
14	=	_	SYM	_	_	11	parataxis	_	SpaceAfter=No
15	6	_	NUM	_	_	14	obj	_	SpaceAfter=No
16	)	_	PUNCT	_	_	14	punct	_	_
17	shall	_	AUX	_	_	18	aux	_	_
18	conform	_	VERB	_	_	0	root	_	_
19	to	_	ADP	_	_	20	case	_	_
20	table	_	NOUN	_	_	18	iobj	_	_
21	9A-2	_	NOUN	_	_	20	flat	_	SpaceAfter=No
22	.	_	PUNCT	_	_	18	punct	_	_
23	(	_	PUNCT	_	_	24	punct	_	SpaceAfter=No
24	M	_	ADJ	_	_	18	advmod	_	SpaceAfter=No
25	)	_	PUNCT	_	_	24	punct	_	_

# newdoc id = 2000_nasax38_3.2.5.2_7
# sent_id = 275
# text = Continuous BIT shall [SRS096] diagnose the faulty FCR within 1 second after detecting a failure.
1	Continuous	_	ADJ	_	_	2	amod	_	_
2	BIT	_	NOUN	_	_	7	nsubj	_	_
3	shall	_	AUX	_	_	7	aux	_	_
4	[	_	PUNCT	_	_	5	punct	_	SpaceAfter=No
5	SRS096	_	PROPN	_	_	2	appos	_	SpaceAfter=No
6	]	_	PUNCT	_	_	5	punct	_	_
7	diagnose	_	VERB	_	_	0	root	_	_
8	the	_	DET	_	_	10	det	_	_
9	faulty	_	ADJ	_	_	10	amod	_	_
10	FCR	_	NOUN	_	_	7	obj	_	_
11	within	_	ADP	_	_	13	case	_	_
12	1	_	NUM	_	_	13	nummod	_	_
13	second	_	NOUN	_	_	7	obl	_	_
14	after	_	SCONJ	_	_	15	mark	_	_
15	detecting	_	VERB	_	_	7	advcl	_	_
16	a	_	DET	_	_	17	det	_	_
17	failure	_	NOUN	_	_	15	obj	_	SpaceAfter=No
18	.	_	PUNCT	_	_	7	punct	_	_

# newdoc id = 2015_CS4311_3.2.3.3_Req92
# sent_id = 7
# text = When the user selects “Edit” and a flight plan has not been selected, FPMS shall display a standard OK message box that states “Flight plan has not been selected.”
1	When	_	SCONJ	_	_	4	mark	_	_
2	the	_	DET	_	_	3	det	_	_
3	user	_	NOUN	_	_	4	nsubj	_	_
4	selects	_	VERB	_	_	19	advcl	_	_
5	“	_	PUNCT	_	_	6	punct	_	SpaceAfter=No
6	Edit	_	VERB	_	_	4	obj	_	SpaceAfter=No
7	”	_	PUNCT	_	_	6	punct	_	_
8	and	_	CCONJ	_	_	15	cc	_	_
9	a	_	DET	_	_	11	det	_	_
10	flight	_	NOUN	_	_	11	compound	_	_
11	plan	_	NOUN	_	_	15	nsubj:pass	_	_
12	has	_	AUX	_	_	15	aux	_	_
13	not	_	PART	_	_	15	advmod	_	_
14	been	_	AUX	_	_	15	aux:pass	_	_
15	selected	_	VERB	_	_	4	conj	_	SpaceAfter=No
16	,	_	PUNCT	_	_	4	punct	_	_
17	FPMS	_	PROPN	_	_	19	nsubj	_	_
18	shall	_	AUX	_	_	19	aux	_	_
19	display	_	VERB	_	_	0	root	_	_
20	a	_	DET	_	_	24	det	_	_
21	standard	_	ADJ	_	_	24	amod	_	_
22	OK	_	INTJ	_	_	23	compound	_	_
23	message	_	NOUN	_	_	24	compound	_	_
24	box	_	NOUN	_	_	19	obj	_	_
25	that	_	PRON	_	_	26	nsubj	_	_
26	states	_	VERB	_	_	24	acl:relcl	_	_
27	“	_	PUNCT	_	_	33	punct	_	SpaceAfter=No
28	Flight	_	NOUN	_	_	29	compound	_	_
29	plan	_	NOUN	_	_	33	nsubj:pass	_	_
30	has	_	AUX	_	_	33	aux	_	_
31	not	_	PART	_	_	33	advmod	_	_
32	been	_	AUX	_	_	33	aux:pass	_	_
33	selected	_	VERB	_	_	26	parataxis	_	SpaceAfter=No
34	.	_	PUNCT	_	_	33	punct	_	SpaceAfter=No
35	”	_	PUNCT	_	_	34	punct	_	_

# newdoc id = 2002_evlaback_3.2.2.14
# sent_id = 165
# text = Fourier Transform Processing – The BE shall be able to perform Fourier Transform the lag set time series.
1	Fourier	_	PROPN	_	_	2	compound	_	_
2	Transform	_	NOUN	_	_	3	nmod	_	_
3	Processing	_	NOUN	_	_	0	root	_	_
4	–	_	PUNCT	_	_	3	punct	_	_
5	The	_	DET	_	_	6	det	_	_
6	BE	_	NOUN	_	_	9	nsubj	_	_
7	shall	_	AUX	_	_	9	aux	_	_
8	be	_	AUX	_	_	9	cop	_	_
9	able	_	ADJ	_	_	3	parataxis	_	_
10	to	_	PART	_	_	11	mark	_	_
11	perform	_	VERB	_	_	9	xcomp	_	_
12	Fourier	_	PROPN	_	_	13	compound	_	_
13	Transform	_	NOUN	_	_	11	obj	_	_
14	the	_	DET	_	_	18	det	_	_
15	lag	_	NOUN	_	_	16	compound	_	_
16	set	_	NOUN	_	_	18	nmod	_	_
17	time	_	NOUN	_	_	18	compound	_	_
18	series	_	NOUN	_	_	11	obl	_	SpaceAfter=No
19	.	_	PUNCT	_	_	3	punct	_	_

# sent_id = 166
# text = A power-of-two complex-to-complex Fast Fourier Transform with retention of all output positive and negative frequencies will be used.
1	A	_	DET	_	_	14	det	_	_
2	power	_	NOUN	_	_	14	amod	_	SpaceAfter=No
3	-	_	PUNCT	_	_	4	punct	_	SpaceAfter=No
4	of	_	ADP	_	_	6	case	_	SpaceAfter=No
5	-	_	PUNCT	_	_	6	punct	_	SpaceAfter=No
6	two	_	NUM	_	_	2	nmod	_	_
7	complex	_	NOUN	_	_	14	amod	_	SpaceAfter=No
8	-	_	PUNCT	_	_	9	punct	_	SpaceAfter=No
9	to	_	ADP	_	_	11	case	_	SpaceAfter=No
10	-	_	PUNCT	_	_	11	punct	_	SpaceAfter=No
11	complex	_	NOUN	_	_	7	nmod	_	_
12	Fast	_	ADJ	_	_	14	amod	_	_
13	Fourier	_	PROPN	_	_	14	compound	_	_
14	Transform	_	NOUN	_	_	26	nsubj:pass	_	_
15	with	_	ADP	_	_	16	case	_	_
16	retention	_	NOUN	_	_	14	nmod	_	_
17	of	_	ADP	_	_	23	case	_	_
18	all	_	DET	_	_	23	det	_	_
19	output	_	NOUN	_	_	23	compound	_	_
20	positive	_	ADJ	_	_	23	amod	_	_
21	and	_	CCONJ	_	_	22	cc	_	_
22	negative	_	ADJ	_	_	20	conj	_	_
23	frequencies	_	NOUN	_	_	16	nmod	_	_
24	will	_	AUX	_	_	26	aux	_	_
25	be	_	AUX	_	_	26	aux:pass	_	_
26	used	_	VERB	_	_	0	root	_	SpaceAfter=No
27	.	_	PUNCT	_	_	26	punct	_	_

# sent_id = 167
# text = This process must be able to accept as input the output of any of the time domain processes.
1	This	_	DET	_	_	2	det	_	_
2	process	_	NOUN	_	_	5	nsubj	_	_
3	must	_	AUX	_	_	5	aux	_	_
4	be	_	AUX	_	_	5	cop	_	_
5	able	_	ADJ	_	_	0	root	_	_
6	to	_	PART	_	_	7	mark	_	_
7	accept	_	VERB	_	_	5	xcomp	_	_
8	as	_	ADP	_	_	9	case	_	_
9	input	_	NOUN	_	_	7	obl	_	_
10	the	_	DET	_	_	11	det	_	_
11	output	_	NOUN	_	_	7	obj	_	_
12	of	_	ADP	_	_	13	case	_	_
13	any	_	PRON	_	_	11	nmod	_	_
14	of	_	ADP	_	_	18	case	_	_
15	the	_	DET	_	_	18	det	_	_
16	time	_	NOUN	_	_	17	compound	_	_
17	domain	_	NOUN	_	_	18	nmod	_	_
18	processes	_	NOUN	_	_	13	nmod	_	SpaceAfter=No
19	.	_	PUNCT	_	_	5	punct	_	_

# newdoc id = 1999_tcs_3.2.1.1_par9
# sent_id = 117
# text = The algorithmic accuracy of all flight planning calculations shall not deviate by more than 10% when compared with a mission flown by a validated 6 degree-of-freedom air vehicle simulator. [SSS090]
1	The	_	DET	_	_	3	det	_	_
2	algorithmic	_	ADJ	_	_	3	amod	_	_
3	accuracy	_	NOUN	_	_	11	nsubj	_	_
4	of	_	ADP	_	_	8	case	_	_
5	all	_	DET	_	_	8	det	_	_
6	flight	_	NOUN	_	_	7	compound	_	_
7	planning	_	NOUN	_	_	8	nmod	_	_
8	calculations	_	NOUN	_	_	3	nmod	_	_
9	shall	_	AUX	_	_	11	aux	_	_
10	not	_	PART	_	_	11	advmod	_	_
11	deviate	_	VERB	_	_	0	root	_	_
12	by	_	ADP	_	_	16	case	_	_
13	more	_	ADV	_	_	16	advmod	_	_
14	than	_	SCONJ	_	_	13	fixed	_	_
15	10	_	NUM	_	_	16	nummod	_	SpaceAfter=No
16	%	_	SYM	_	_	11	obl	_	_
17	when	_	SCONJ	_	_	18	mark	_	_
18	compared	_	VERB	_	_	11	advcl	_	_
19	with	_	ADP	_	_	21	case	_	_
20	a	_	DET	_	_	21	det	_	_
21	mission	_	NOUN	_	_	18	obl	_	_
22	flown	_	VERB	_	_	21	acl	_	_
23	by	_	ADP	_	_	34	case	_	_
24	a	_	DET	_	_	34	det	_	_
25	validated	_	ADJ	_	_	34	amod	_	_
26	6	_	NUM	_	_	27	nummod	_	_
27	degree	_	NOUN	_	_	34	nmod	_	SpaceAfter=No
28	-	_	PUNCT	_	_	29	punct	_	SpaceAfter=No
29	of	_	ADP	_	_	31	case	_	SpaceAfter=No
30	-	_	PUNCT	_	_	31	punct	_	SpaceAfter=No
31	freedom	_	NOUN	_	_	27	nmod	_	_
32	air	_	NOUN	_	_	33	compound	_	_
33	vehicle	_	NOUN	_	_	34	nmod	_	_
34	simulator	_	NOUN	_	_	22	obl:agent	_	SpaceAfter=No
35	.	_	PUNCT	_	_	11	punct	_	_
36	[	_	PUNCT	_	_	37	punct	_	SpaceAfter=No
37	SSS090	_	PROPN	_	_	11	appos	_	SpaceAfter=No
38	]	_	PUNCT	_	_	37	punct	_	_

# newdoc id = 1999_tcs_3.1.1.1_par1
# sent_id = 245
# text = When executing in the Normal Startup Mode, the TCS shall provide the system functionality necessary to initialize the system to place it in the Operations State within 60 seconds from the time power is supplied and the TCS application is launched. [SSS024]
1	When	_	SCONJ	_	_	2	mark	_	_
2	executing	_	VERB	_	_	12	advcl	_	_
3	in	_	ADP	_	_	7	case	_	_
4	the	_	DET	_	_	7	det	_	_
5	Normal	_	ADJ	_	_	7	amod	_	_
6	Startup	_	NOUN	_	_	7	compound	_	_
7	Mode	_	NOUN	_	_	2	obl	_	SpaceAfter=No
8	,	_	PUNCT	_	_	2	punct	_	_
9	the	_	DET	_	_	10	det	_	_
10	TCS	_	PROPN	_	_	12	nsubj	_	_
11	shall	_	AUX	_	_	12	aux	_	_
12	provide	_	VERB	_	_	0	root	_	_
13	the	_	DET	_	_	15	det	_	_
14	system	_	NOUN	_	_	15	nmod	_	_
15	functionality	_	NOUN	_	_	12	obj	_	_
16	necessary	_	ADJ	_	_	15	amod	_	_
17	to	_	PART	_	_	18	mark	_	_
18	initialize	_	VERB	_	_	16	xcomp	_	_
19	the	_	DET	_	_	20	det	_	_
20	system	_	NOUN	_	_	18	obj	_	_
21	to	_	PART	_	_	22	mark	_	_
22	place	_	VERB	_	_	12	xcomp	_	_
23	it	_	PRON	_	_	22	compound	_	_
24	in	_	ADP	_	_	27	case	_	_
25	the	_	DET	_	_	27	det	_	_
26	Operations	_	NOUN	_	_	27	nmod	_	_
27	State	_	NOUN	_	_	22	obl	_	_
28	within	_	ADP	_	_	30	case	_	_
29	60	_	NUM	_	_	30	nummod	_	_
30	seconds	_	NOUN	_	_	22	obl	_	_
31	from	_	ADP	_	_	33	case	_	_
32	the	_	DET	_	_	33	det	_	_
33	time	_	NOUN	_	_	30	nmod	_	_
34	power	_	NOUN	_	_	36	nsubj:pass	_	_
35	is	_	AUX	_	_	36	aux:pass	_	_
36	supplied	_	VERB	_	_	33	acl	_	_
37	and	_	CCONJ	_	_	42	cc	_	_
38	the	_	DET	_	_	40	det	_	_
39	TCS	_	PROPN	_	_	40	nmod	_	_
40	application	_	NOUN	_	_	42	nsubj:pass	_	_
41	is	_	AUX	_	_	42	aux:pass	_	_
42	launched	_	VERB	_	_	36	conj	_	SpaceAfter=No
43	.	_	PUNCT	_	_	12	punct	_	_
44	[	_	PUNCT	_	_	45	punct	_	SpaceAfter=No
45	SSS024	_	PROPN	_	_	12	appos	_	SpaceAfter=No
46	]	_	PUNCT	_	_	45	punct	_	_

# newdoc id = 2002_evlacorr_3.1.3.2
# sent_id = 231
# text = Hardware identification – The CMIB shall be capable of reading a 16-bit identifier from the host correlator board.
1	Hardware	_	NOUN	_	_	2	nmod	_	_
2	identification	_	NOUN	_	_	0	root	_	_
3	–	_	PUNCT	_	_	2	punct	_	_
4	The	_	DET	_	_	5	det	_	_
5	CMIB	_	NOUN	_	_	8	nsubj	_	_
6	shall	_	AUX	_	_	8	aux	_	_
7	be	_	AUX	_	_	8	cop	_	_
8	capable	_	ADJ	_	_	2	parataxis	_	_
9	of	_	ADP	_	_	10	mark	_	_
10	reading	_	VERB	_	_	8	xcomp	_	_
11	a	_	DET	_	_	15	det	_	_
12	16	_	NUM	_	_	14	nummod	_	SpaceAfter=No
13	-	_	PUNCT	_	_	14	punct	_	SpaceAfter=No
14	bit	_	NOUN	_	_	15	nmod	_	_
15	identifier	_	NOUN	_	_	10	obj	_	_
16	from	_	ADP	_	_	20	case	_	_
17	the	_	DET	_	_	20	det	_	_
18	host	_	NOUN	_	_	20	compound	_	_
19	correlator	_	NOUN	_	_	20	nmod	_	_
20	board	_	NOUN	_	_	10	obl	_	SpaceAfter=No
21	.	_	PUNCT	_	_	2	punct	_	_

# sent_id = 232
# text = This identifier will be used to form a unique IP address for CMIB network addressing and allow carry over IP addressing for hot swap modules.
1	This	_	DET	_	_	2	det	_	_
2	identifier	_	NOUN	_	_	5	nsubj:pass	_	_
3	will	_	AUX	_	_	5	aux	_	_
4	be	_	AUX	_	_	5	aux:pass	_	_
5	used	_	VERB	_	_	0	root	_	_
6	to	_	PART	_	_	7	mark	_	_
7	form	_	VERB	_	_	5	xcomp	_	_
8	a	_	DET	_	_	11	det	_	_
9	unique	_	ADJ	_	_	11	amod	_	_
10	IP	_	PROPN	_	_	11	compound	_	_
11	address	_	NOUN	_	_	7	obj	_	_
12	for	_	ADP	_	_	15	case	_	_
13	CMIB	_	NOUN	_	_	15	nmod	_	_
14	network	_	NOUN	_	_	15	nmod	_	_
15	addressing	_	NOUN	_	_	11	nmod	_	_
16	and	_	CCONJ	_	_	17	cc	_	_
17	allow	_	VERB	_	_	7	conj	_	_
18	carry	_	VERB	_	_	21	acl	_	_
19	over	_	ADV	_	_	18	fixed	_	_
20	IP	_	PROPN	_	_	21	compound	_	_
21	addressing	_	VERB	_	_	17	obj	_	_
22	for	_	ADP	_	_	25	case	_	_
23	hot	_	ADJ	_	_	24	amod	_	_
24	swap	_	NOUN	_	_	25	compound	_	_
25	modules	_	NOUN	_	_	17	obl	_	SpaceAfter=No
26	.	_	PUNCT	_	_	5	punct	_	_

# newdoc id = 2019_MOSAR_3.3.1_FuncR_A115
# sent_id = 5
# text = The 3D pose estimation of the camera mounted on the WM could be computed based on the image stream, with a mean error not larger than 1 cm translation and 5° rotation, with a minimum of 30 frame/sec
1	The	_	DET	_	_	4	det	_	_
2	3D	_	ADJ	_	_	3	amod	_	_
3	pose	_	NOUN	_	_	4	nmod	_	_
4	estimation	_	NOUN	_	_	14	nsubj:pass	_	_
5	of	_	ADP	_	_	7	case	_	_
6	the	_	DET	_	_	7	det	_	_
7	camera	_	NOUN	_	_	4	nmod	_	_
8	mounted	_	VERB	_	_	7	acl	_	_
9	on	_	ADP	_	_	11	case	_	_
10	the	_	DET	_	_	11	det	_	_
11	WM	_	NOUN	_	_	8	obl	_	_
12	could	_	AUX	_	_	14	aux	_	_
13	be	_	AUX	_	_	14	aux:pass	_	_
14	computed	_	VERB	_	_	0	root	_	_
15	based	_	VERB	_	_	14	advcl	_	_
16	on	_	ADP	_	_	19	case	_	_
17	the	_	DET	_	_	19	det	_	_
18	image	_	NOUN	_	_	19	nmod	_	_
19	stream	_	NOUN	_	_	15	obl	_	SpaceAfter=No
20	,	_	PUNCT	_	_	24	punct	_	_
21	with	_	ADP	_	_	24	case	_	_
22	a	_	DET	_	_	24	det	_	_
23	mean	_	ADJ	_	_	24	amod	_	_
24	error	_	NOUN	_	_	14	obl	_	_
25	not	_	PART	_	_	26	advmod	_	_
26	larger	_	ADJ	_	_	28	advmod	_	_
27	than	_	SCONJ	_	_	26	fixed	_	_
28	1	_	NUM	_	_	29	nummod	_	_
29	cm	_	NOUN	_	_	30	compound	_	_
30	translation	_	NOUN	_	_	24	nmod	_	_
31	and	_	CCONJ	_	_	34	cc	_	_
32	5	_	NUM	_	_	33	nummod	_	SpaceAfter=No
33	°	_	SYM	_	_	34	compound	_	_
34	rotation	_	NOUN	_	_	30	conj	_	SpaceAfter=No
35	,	_	PUNCT	_	_	38	punct	_	_
36	with	_	ADP	_	_	38	case	_	_
37	a	_	DET	_	_	38	det	_	_
38	minimum	_	NOUN	_	_	14	obl	_	_
39	of	_	ADP	_	_	41	case	_	_
40	30	_	NUM	_	_	41	nummod	_	_
41	frame	_	NOUN	_	_	38	nmod	_	SpaceAfter=No
42	/	_	SYM	_	_	43	case	_	SpaceAfter=No
43	sec	_	NOUN	_	_	41	nmod	_	_

# newdoc id = 2001_hats_3.2.3.3.4_SRSreq133
# sent_id = 259
# text = For displayed graph windows, the keyboard cursor location shall move according the following rules:
1	For	_	ADP	_	_	4	case	_	_
2	displayed	_	ADJ	_	_	4	amod	_	_
3	graph	_	NOUN	_	_	4	compound	_	_
4	windows	_	NOUN	_	_	11	obl	_	SpaceAfter=No
5	,	_	PUNCT	_	_	4	punct	_	_
6	the	_	DET	_	_	9	det	_	_
7	keyboard	_	NOUN	_	_	8	nmod	_	_
8	cursor	_	NOUN	_	_	9	nmod	_	_
9	location	_	NOUN	_	_	11	nsubj	_	_
10	shall	_	AUX	_	_	11	aux	_	_
11	move	_	VERB	_	_	0	root	_	_
12	according	_	VERB	_	_	15	case	_	_
13	the	_	DET	_	_	15	det	_	_
14	following	_	ADJ	_	_	15	amod	_	_
15	rules	_	NOUN	_	_	11	obl	_	SpaceAfter=No
16	:	_	PUNCT	_	_	11	punct	_	_

# sent_id = 260
# text = • A left arrow key moves the cursor to the next unhidden node to the left.
1	•	_	PUNCT	_	_	6	punct	_	_
2	A	_	DET	_	_	5	det	_	_
3	left	_	ADJ	_	_	5	amod	_	_
4	arrow	_	NOUN	_	_	5	compound	_	_
5	key	_	NOUN	_	_	6	nsubj	_	_
6	moves	_	VERB	_	_	0	root	_	_
7	the	_	DET	_	_	8	det	_	_
8	cursor	_	NOUN	_	_	6	obj	_	_
9	to	_	ADP	_	_	13	case	_	_
10	the	_	DET	_	_	13	det	_	_
11	next	_	ADJ	_	_	13	amod	_	_
12	unhidden	_	ADJ	_	_	13	amod	_	_
13	node	_	NOUN	_	_	6	obl	_	_
14	to	_	ADP	_	_	16	case	_	_
15	the	_	DET	_	_	16	det	_	_
16	left	_	NOUN	_	_	13	nmod	_	SpaceAfter=No
17	.	_	PUNCT	_	_	6	punct	_	_

# sent_id = 261
# text = The node to the left does not need to be a sibling of the current node, but it does need to be at the same level as the current node.
1	The	_	DET	_	_	2	det	_	_
2	node	_	NOUN	_	_	8	nsubj	_	_
3	to	_	ADP	_	_	5	case	_	_
4	the	_	DET	_	_	5	det	_	_
5	left	_	NOUN	_	_	2	nmod	_	_
6	does	_	AUX	_	_	8	aux	_	_
7	not	_	PART	_	_	8	advmod	_	_
8	need	_	VERB	_	_	0	root	_	_
9	to	_	PART	_	_	12	mark	_	_
10	be	_	AUX	_	_	12	cop	_	_
11	a	_	DET	_	_	12	det	_	_
12	sibling	_	NOUN	_	_	8	xcomp	_	_
13	of	_	ADP	_	_	16	case	_	_
14	the	_	DET	_	_	16	det	_	_
15	current	_	ADJ	_	_	16	amod	_	_
16	node	_	NOUN	_	_	12	nmod	_	SpaceAfter=No
17	,	_	PUNCT	_	_	21	punct	_	_
18	but	_	CCONJ	_	_	21	cc	_	_
19	it	_	PRON	_	_	21	nsubj	_	_
20	does	_	AUX	_	_	21	aux	_	_
21	need	_	VERB	_	_	8	conj	_	_
22	to	_	PART	_	_	27	mark	_	_
23	be	_	AUX	_	_	27	cop	_	_
24	at	_	ADP	_	_	27	case	_	_
25	the	_	DET	_	_	27	det	_	_
26	same	_	ADJ	_	_	27	amod	_	_
27	level	_	NOUN	_	_	21	xcomp	_	_
28	as	_	SCONJ	_	_	31	case	_	_
29	the	_	DET	_	_	31	det	_	_
30	current	_	ADJ	_	_	31	amod	_	_
31	node	_	NOUN	_	_	27	obl	_	SpaceAfter=No
32	.	_	PUNCT	_	_	8	punct	_	_

# sent_id = 262
# text = If there are no nodes to the left, the cursor does not move.
1	If	_	SCONJ	_	_	3	mark	_	_
2	there	_	PRON	_	_	3	expl	_	_
3	are	_	VERB	_	_	14	advcl	_	_
4	no	_	DET	_	_	5	det	_	_
5	nodes	_	NOUN	_	_	3	nsubj	_	_
6	to	_	ADP	_	_	8	case	_	_
7	the	_	DET	_	_	8	det	_	_
8	left	_	NOUN	_	_	3	obl	_	SpaceAfter=No
9	,	_	PUNCT	_	_	3	punct	_	_
10	the	_	DET	_	_	11	det	_	_
11	cursor	_	NOUN	_	_	14	nsubj	_	_
12	does	_	AUX	_	_	14	aux	_	_
13	not	_	PART	_	_	14	advmod	_	_
14	move	_	VERB	_	_	0	root	_	SpaceAfter=No
15	.	_	PUNCT	_	_	14	punct	_	_

# sent_id = 263
# text = • A right arrow key moves the cursor to the next unhidden node to the right.
1	•	_	PUNCT	_	_	6	punct	_	_
2	A	_	DET	_	_	5	det	_	_
3	right	_	ADJ	_	_	5	amod	_	_
4	arrow	_	NOUN	_	_	5	compound	_	_
5	key	_	NOUN	_	_	6	nsubj	_	_
6	moves	_	VERB	_	_	0	root	_	_
7	the	_	DET	_	_	8	det	_	_
8	cursor	_	NOUN	_	_	6	obj	_	_
9	to	_	ADP	_	_	13	case	_	_
10	the	_	DET	_	_	13	det	_	_
11	next	_	ADJ	_	_	13	amod	_	_
12	unhidden	_	ADJ	_	_	13	amod	_	_
13	node	_	NOUN	_	_	6	obl	_	_
14	to	_	ADP	_	_	16	case	_	_
15	the	_	DET	_	_	16	det	_	_
16	right	_	NOUN	_	_	13	nmod	_	SpaceAfter=No
17	.	_	PUNCT	_	_	6	punct	_	_

# sent_id = 264
# text = The node to the right does not need to be a sibling of the current node, but it does need to be at the same level as the current node.
1	The	_	DET	_	_	2	det	_	_
2	node	_	NOUN	_	_	8	nsubj	_	_
3	to	_	ADP	_	_	5	case	_	_
4	the	_	DET	_	_	5	det	_	_
5	right	_	NOUN	_	_	2	nmod	_	_
6	does	_	AUX	_	_	8	aux	_	_
7	not	_	PART	_	_	8	advmod	_	_
8	need	_	VERB	_	_	0	root	_	_
9	to	_	PART	_	_	12	mark	_	_
10	be	_	AUX	_	_	12	cop	_	_
11	a	_	DET	_	_	12	det	_	_
12	sibling	_	NOUN	_	_	8	xcomp	_	_
13	of	_	ADP	_	_	16	case	_	_
14	the	_	DET	_	_	16	det	_	_
15	current	_	ADJ	_	_	16	amod	_	_
16	node	_	NOUN	_	_	12	nmod	_	SpaceAfter=No
17	,	_	PUNCT	_	_	21	punct	_	_
18	but	_	CCONJ	_	_	21	cc	_	_
19	it	_	PRON	_	_	21	nsubj	_	_
20	does	_	AUX	_	_	21	aux	_	_
21	need	_	VERB	_	_	8	conj	_	_
22	to	_	PART	_	_	27	mark	_	_
23	be	_	AUX	_	_	27	cop	_	_
24	at	_	ADP	_	_	27	case	_	_
25	the	_	DET	_	_	27	det	_	_
26	same	_	ADJ	_	_	27	amod	_	_
27	level	_	NOUN	_	_	21	xcomp	_	_
28	as	_	SCONJ	_	_	31	case	_	_
29	the	_	DET	_	_	31	det	_	_
30	current	_	ADJ	_	_	31	amod	_	_
31	node	_	NOUN	_	_	27	obl	_	SpaceAfter=No
32	.	_	PUNCT	_	_	8	punct	_	_

# sent_id = 265
# text = If there are no nodes to the right, the cursor does not move.
1	If	_	SCONJ	_	_	3	mark	_	_
2	there	_	PRON	_	_	3	expl	_	_
3	are	_	VERB	_	_	14	advcl	_	_
4	no	_	DET	_	_	5	det	_	_
5	nodes	_	NOUN	_	_	3	nsubj	_	_
6	to	_	ADP	_	_	8	case	_	_
7	the	_	DET	_	_	8	det	_	_
8	right	_	NOUN	_	_	3	obl	_	SpaceAfter=No
9	,	_	PUNCT	_	_	3	punct	_	_
10	the	_	DET	_	_	11	det	_	_
11	cursor	_	NOUN	_	_	14	nsubj	_	_
12	does	_	AUX	_	_	14	aux	_	_
13	not	_	PART	_	_	14	advmod	_	_
14	move	_	VERB	_	_	0	root	_	SpaceAfter=No
15	.	_	PUNCT	_	_	14	punct	_	_

# sent_id = 266
# text = • An up arrow key moves the cursor to the closest ancestor that is not hidden.
1	•	_	PUNCT	_	_	6	punct	_	_
2	An	_	DET	_	_	5	det	_	_
3	up	_	ADJ	_	_	5	amod	_	_
4	arrow	_	NOUN	_	_	5	compound	_	_
5	key	_	NOUN	_	_	6	nsubj	_	_
6	moves	_	VERB	_	_	0	root	_	_
7	the	_	DET	_	_	8	det	_	_
8	cursor	_	NOUN	_	_	6	obj	_	_
9	to	_	ADP	_	_	12	case	_	_
10	the	_	DET	_	_	12	det	_	_
11	closest	_	ADJ	_	_	12	amod	_	_
12	ancestor	_	NOUN	_	_	6	obl	_	_
13	that	_	PRON	_	_	16	nsubj	_	_
14	is	_	AUX	_	_	16	cop	_	_
15	not	_	PART	_	_	16	advmod	_	_
16	hidden	_	ADJ	_	_	12	acl:relcl	_	SpaceAfter=No
17	.	_	PUNCT	_	_	6	punct	_	_

# sent_id = 267
# text = If there is no such node, the cursor does not move.
1	If	_	SCONJ	_	_	3	mark	_	_
2	there	_	PRON	_	_	3	expl	_	_
3	is	_	VERB	_	_	12	advcl	_	_
4	no	_	DET	_	_	6	det	_	_
5	such	_	DET	_	_	6	det	_	_
6	node	_	NOUN	_	_	3	nsubj	_	SpaceAfter=No
7	,	_	PUNCT	_	_	12	punct	_	_
8	the	_	DET	_	_	9	det	_	_
9	cursor	_	NOUN	_	_	12	nsubj	_	_
10	does	_	AUX	_	_	12	aux	_	_
11	not	_	PART	_	_	12	advmod	_	_
12	move	_	VERB	_	_	0	root	_	SpaceAfter=No
13	.	_	PUNCT	_	_	12	punct	_	_

# sent_id = 268
# text = • An down arrow key moves the cursor to the leftmost, nearest descendant that is not hidden.
1	•	_	PUNCT	_	_	6	punct	_	_
2	An	_	DET	_	_	5	det	_	_
3	down	_	ADJ	_	_	5	amod	_	_
4	arrow	_	NOUN	_	_	5	compound	_	_
5	key	_	NOUN	_	_	6	nsubj	_	_
6	moves	_	VERB	_	_	0	root	_	_
7	the	_	DET	_	_	8	det	_	_
8	cursor	_	NOUN	_	_	6	obj	_	_
9	to	_	ADP	_	_	14	case	_	_
10	the	_	DET	_	_	14	det	_	_
11	leftmost	_	ADJ	_	_	14	amod	_	SpaceAfter=No
12	,	_	PUNCT	_	_	13	punct	_	_
13	nearest	_	ADJ	_	_	11	conj	_	_
14	descendant	_	NOUN	_	_	6	obl	_	_
15	that	_	PRON	_	_	18	nsubj	_	_
16	is	_	AUX	_	_	18	cop	_	_
17	not	_	PART	_	_	18	advmod	_	_
18	hidden	_	ADJ	_	_	14	acl:relcl	_	SpaceAfter=No
19	.	_	PUNCT	_	_	6	punct	_	_

# sent_id = 269
# text = If there is no such node, the cursor does not move.
1	If	_	SCONJ	_	_	3	mark	_	_
2	there	_	PRON	_	_	3	expl	_	_
3	is	_	VERB	_	_	12	advcl	_	_
4	no	_	DET	_	_	6	det	_	_
5	such	_	DET	_	_	6	det	_	_
6	node	_	NOUN	_	_	3	nsubj	_	SpaceAfter=No
7	,	_	PUNCT	_	_	3	punct	_	_
8	the	_	DET	_	_	9	det	_	_
9	cursor	_	NOUN	_	_	12	nsubj	_	_
10	does	_	AUX	_	_	12	aux	_	_
11	not	_	PART	_	_	12	advmod	_	_
12	move	_	VERB	_	_	0	root	_	SpaceAfter=No
13	.	_	PUNCT	_	_	12	punct	_	_

# newdoc id = 2011_tfms_3.2.3.2.2_SSS449
# sent_id = 134
# text = The system shall determine that a flight is RVSM non-conformant in the future if all of the following conditions are met: a. The system has a filed flight plan for the flight b. The flight does not have one of the RVSM equipment suffixes c. The flight is predicted to be between the static adaptable parameters FL-Lower and FL-Upper, at any time in the flight's future.
1	The	_	DET	_	_	2	det	_	_
2	system	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	determine	_	VERB	_	_	0	root	_	_
5	that	_	SCONJ	_	_	12	mark	_	_
6	a	_	DET	_	_	7	det	_	_
7	flight	_	NOUN	_	_	12	nsubj	_	_
8	is	_	AUX	_	_	12	cop	_	_
9	RVSM	_	PROPN	_	_	12	obl	_	_
10	non	_	ADV	_	_	12	advmod	_	SpaceAfter=No
11	-	_	PUNCT	_	_	12	punct	_	SpaceAfter=No
12	conformant	_	ADJ	_	_	4	ccomp	_	_
13	in	_	ADP	_	_	15	case	_	_
14	the	_	DET	_	_	15	det	_	_
15	future	_	NOUN	_	_	12	obl	_	_
16	if	_	SCONJ	_	_	23	mark	_	_
17	all	_	PRON	_	_	23	nsubj:pass	_	_
18	of	_	ADP	_	_	21	case	_	_
19	the	_	DET	_	_	21	det	_	_
20	following	_	ADJ	_	_	21	amod	_	_
21	conditions	_	NOUN	_	_	17	nmod	_	_
22	are	_	AUX	_	_	23	aux:pass	_	_
23	met	_	VERB	_	_	4	advcl	_	SpaceAfter=No
24	:	_	PUNCT	_	_	4	punct	_	_
25	a	_	NUM	_	_	29	nummod	_	SpaceAfter=No
26	.	_	PUNCT	_	_	25	punct	_	_
27	The	_	DET	_	_	28	det	_	_
28	system	_	NOUN	_	_	29	nsubj	_	_
29	has	_	VERB	_	_	4	parataxis	_	_
30	a	_	DET	_	_	33	det	_	_
31	filed	_	ADJ	_	_	33	amod	_	_
32	flight	_	NOUN	_	_	33	compound	_	_
33	plan	_	NOUN	_	_	29	obj	_	_
34	for	_	ADP	_	_	36	case	_	_
35	the	_	DET	_	_	36	det	_	_
36	flight	_	NOUN	_	_	33	obl	_	_
37	b	_	NUM	_	_	43	nummod	_	SpaceAfter=No
38	.	_	PUNCT	_	_	37	punct	_	_
39	The	_	DET	_	_	40	det	_	_
40	flight	_	NOUN	_	_	43	nsubj	_	_
41	does	_	AUX	_	_	43	aux	_	_
42	not	_	PART	_	_	43	advmod	_	_
43	have	_	VERB	_	_	29	list	_	_
44	one	_	PRON	_	_	43	obj	_	_
45	of	_	ADP	_	_	49	case	_	_
46	the	_	DET	_	_	49	det	_	_
47	RVSM	_	PROPN	_	_	49	compound	_	_
48	equipment	_	NOUN	_	_	49	compound	_	_
49	suffixes	_	NOUN	_	_	44	nmod	_	_
50	c	_	NUM	_	_	55	nummod	_	SpaceAfter=No
51	.	_	PUNCT	_	_	50	punct	_	_
52	The	_	DET	_	_	53	det	_	_
53	flight	_	NOUN	_	_	55	nsubj:pass	_	_
54	is	_	AUX	_	_	55	aux:pass	_	_
55	predicted	_	VERB	_	_	29	list	_	_
56	to	_	PART	_	_	62	mark	_	_
57	be	_	AUX	_	_	62	cop	_	_
58	between	_	ADP	_	_	62	case	_	_
59	the	_	DET	_	_	62	det	_	_
60	static	_	ADJ	_	_	62	amod	_	_
61	adaptable	_	ADJ	_	_	62	amod	_	_
62	parameters	_	NOUN	_	_	55	xcomp	_	_
63	FL-Lower	_	PROPN	_	_	62	appos	_	_
64	and	_	CCONJ	_	_	65	cc	_	_
65	FL-Upper	_	PROPN	_	_	63	conj	_	SpaceAfter=No
66	,	_	PUNCT	_	_	69	punct	_	_
67	at	_	ADP	_	_	69	case	_	_
68	any	_	DET	_	_	69	det	_	_
69	time	_	NOUN	_	_	62	obl	_	_
70	in	_	ADP	_	_	74	case	_	_
71	the	_	DET	_	_	74	det	_	_
72	flight	_	NOUN	_	_	74	nmod	_	SpaceAfter=No
73	's	_	PART	_	_	72	case	_	_
74	future	_	NOUN	_	_	69	nmod	_	SpaceAfter=No
75	.	_	PUNCT	_	_	4	punct	_	_

# newdoc id = 2009_gaia_4.2_GOG-EPCH-S-FUN-020
# sent_id = 57
# text = Determine for epoch data the astrometric parameter (with instrumental and reduction errors): transit times and field angles in each CCD mean transit time and field angle for the transit.
1	Determine	_	VERB	_	_	0	root	_	_
2	for	_	ADP	_	_	4	case	_	_
3	epoch	_	NOUN	_	_	4	nmod	_	_
4	data	_	NOUN	_	_	1	obl	_	_
5	the	_	DET	_	_	7	det	_	_
6	astrometric	_	ADJ	_	_	7	amod	_	_
7	parameter	_	NOUN	_	_	1	obj	_	_
8	(	_	PUNCT	_	_	13	punct	_	SpaceAfter=No
9	with	_	ADP	_	_	13	case	_	_
10	instrumental	_	ADJ	_	_	13	amod	_	_
11	and	_	CCONJ	_	_	12	cc	_	_
12	reduction	_	NOUN	_	_	10	conj	_	_
13	errors	_	NOUN	_	_	7	nmod	_	SpaceAfter=No
14	)	_	PUNCT	_	_	13	punct	_	SpaceAfter=No
15	:	_	PUNCT	_	_	17	punct	_	_
16	transit	_	NOUN	_	_	17	nmod	_	_
17	times	_	NOUN	_	_	1	parataxis	_	_
18	and	_	CCONJ	_	_	20	cc	_	_
19	field	_	NOUN	_	_	20	compound	_	_
20	angles	_	NOUN	_	_	17	conj	_	_
21	in	_	ADP	_	_	26	case	_	_
22	each	_	DET	_	_	26	det	_	_
23	CCD	_	NOUN	_	_	26	nmod	_	_
24	mean	_	ADJ	_	_	26	amod	_	_
25	transit	_	NOUN	_	_	26	nmod	_	_
26	time	_	NOUN	_	_	17	nmod	_	_
27	and	_	CCONJ	_	_	29	cc	_	_
28	field	_	NOUN	_	_	29	compound	_	_
29	angle	_	NOUN	_	_	17	conj	_	_
30	for	_	ADP	_	_	32	case	_	_
31	the	_	DET	_	_	32	det	_	_
32	transit	_	NOUN	_	_	29	nmod	_	SpaceAfter=No
33	.	_	PUNCT	_	_	1	punct	_	SpaceAfter=No

# sent_id = 58
# text = Gate activation and signal loss due to window cutoff must be taken into account.
1	Gate	_	NOUN	_	_	2	nmod	_	_
2	activation	_	NOUN	_	_	12	nsubj:pass	_	_
3	and	_	CCONJ	_	_	5	cc	_	_
4	signal	_	NOUN	_	_	5	nmod	_	_
5	loss	_	NOUN	_	_	2	conj	_	_
6	due	_	ADP	_	_	9	case	_	_
7	to	_	ADP	_	_	6	fixed	_	_
8	window	_	NOUN	_	_	9	nmod	_	_
9	cutoff	_	NOUN	_	_	5	nmod	_	_
10	must	_	AUX	_	_	12	aux	_	_
11	be	_	AUX	_	_	12	aux:pass	_	_
12	taken	_	VERB	_	_	0	root	_	_
13	into	_	ADP	_	_	14	case	_	_
14	account	_	NOUN	_	_	12	obl	_	SpaceAfter=No
15	.	_	PUNCT	_	_	12	punct	_	_

# newdoc id = 2006_eirenesys15_3.7.2
# sent_id = 172
# text = The network shall terminate the ongoing VGCS/VBS call if it receives the 3-digit sequence “***” transmitted via DTMF signals. (M)
1	The	_	DET	_	_	2	det	_	_
2	network	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	terminate	_	VERB	_	_	0	root	_	_
5	the	_	DET	_	_	10	det	_	_
6	ongoing	_	ADJ	_	_	10	amod	_	_
7	VGCS	_	NOUN	_	_	10	compound	_	SpaceAfter=No
8	/	_	SYM	_	_	9	cc	_	SpaceAfter=No
9	VBS	_	NOUN	_	_	7	conj	_	_
10	call	_	NOUN	_	_	4	obj	_	_
11	if	_	SCONJ	_	_	13	mark	_	_
12	it	_	PRON	_	_	13	nsubj	_	_
13	receives	_	VERB	_	_	4	advcl	_	_
14	the	_	DET	_	_	18	det	_	_
15	3	_	NUM	_	_	17	nummod	_	SpaceAfter=No
16	-	_	PUNCT	_	_	17	punct	_	SpaceAfter=No
17	digit	_	NOUN	_	_	18	nmod	_	_
18	sequence	_	NOUN	_	_	13	obj	_	_
19	“	_	PUNCT	_	_	20	punct	_	SpaceAfter=No
20	***	_	SYM	_	_	18	appos	_	SpaceAfter=No
21	”	_	PUNCT	_	_	20	punct	_	_
22	transmitted	_	VERB	_	_	18	acl	_	_
23	via	_	ADP	_	_	25	case	_	_
24	DTMF	_	PROPN	_	_	25	compound	_	_
25	signals	_	NOUN	_	_	22	obl	_	SpaceAfter=No
26	.	_	PUNCT	_	_	4	punct	_	_
27	(	_	PUNCT	_	_	28	punct	_	SpaceAfter=No
28	M	_	ADJ	_	_	4	advmod	_	SpaceAfter=No
29	)	_	PUNCT	_	_	28	punct	_	_

# newdoc id = 2000_nasax38_3.2.6.2_1
# sent_id = 48
# text = Redundancy Management shall [SRS104] implement the following strategies to reconfigure hardware resources: a) degrade the FCP virtual group, b) re-integrate an FCP processor into the FCP virtual group, c) re-integrate a Network Element, or d) mask a Network Element.
1	Redundancy	_	NOUN	_	_	2	nmod	_	_
2	Management	_	NOUN	_	_	7	nsubj	_	_
3	shall	_	AUX	_	_	7	aux	_	_
4	[	_	PUNCT	_	_	5	punct	_	SpaceAfter=No
5	SRS104	_	PROPN	_	_	2	appos	_	SpaceAfter=No
6	]	_	PUNCT	_	_	5	punct	_	_
7	implement	_	VERB	_	_	0	root	_	_
8	the	_	DET	_	_	10	det	_	_
9	following	_	ADJ	_	_	10	amod	_	_
10	strategies	_	NOUN	_	_	7	obj	_	_
11	to	_	PART	_	_	12	mark	_	_
12	reconfigure	_	VERB	_	_	7	advcl	_	_
13	hardware	_	NOUN	_	_	14	nmod	_	_
14	resources	_	NOUN	_	_	12	obj	_	SpaceAfter=No
15	:	_	PUNCT	_	_	18	punct	_	_
16	a	_	NUM	_	_	18	nummod	_	SpaceAfter=No
17	)	_	PUNCT	_	_	16	punct	_	_
18	degrade	_	VERB	_	_	7	parataxis	_	_
19	the	_	DET	_	_	22	det	_	_
20	FCP	_	NOUN	_	_	22	nmod	_	_
21	virtual	_	ADJ	_	_	22	amod	_	_
22	group	_	NOUN	_	_	18	obj	_	SpaceAfter=No
23	,	_	PUNCT	_	_	28	punct	_	_
24	b	_	NUM	_	_	28	nummod	_	SpaceAfter=No
25	)	_	PUNCT	_	_	24	punct	_	_
26	re	_	ADV	_	_	28	advmod	_	SpaceAfter=No
27	-	_	PUNCT	_	_	28	punct	_	SpaceAfter=No
28	integrate	_	VERB	_	_	18	conj	_	_
29	an	_	DET	_	_	31	det	_	_
30	FCP	_	NOUN	_	_	31	compound	_	_
31	processor	_	NOUN	_	_	28	obj	_	_
32	into	_	ADP	_	_	36	case	_	_
33	the	_	DET	_	_	36	det	_	_
34	FCP	_	NOUN	_	_	36	nmod	_	_
35	virtual	_	ADJ	_	_	36	amod	_	_
36	group	_	NOUN	_	_	28	obl	_	SpaceAfter=No
37	,	_	PUNCT	_	_	42	punct	_	_
38	c	_	NUM	_	_	42	nummod	_	SpaceAfter=No
39	)	_	PUNCT	_	_	38	punct	_	_
40	re	_	ADV	_	_	42	advmod	_	SpaceAfter=No
41	-	_	PUNCT	_	_	42	punct	_	SpaceAfter=No
42	integrate	_	VERB	_	_	18	conj	_	_
43	a	_	DET	_	_	45	det	_	_
44	Network	_	NOUN	_	_	45	compound	_	_
45	Element	_	NOUN	_	_	42	obj	_	SpaceAfter=No
46	,	_	PUNCT	_	_	50	punct	_	_
47	or	_	CCONJ	_	_	50	cc	_	_
48	d	_	NUM	_	_	50	nummod	_	SpaceAfter=No
49	)	_	PUNCT	_	_	48	punct	_	_
50	mask	_	VERB	_	_	18	conj	_	_
51	a	_	DET	_	_	53	det	_	_
52	Network	_	NOUN	_	_	53	compound	_	_
53	Element	_	NOUN	_	_	50	obj	_	SpaceAfter=No
54	.	_	PUNCT	_	_	7	punct	_	_

# newdoc id = 2007_nde_3.10.1.5
# sent_id = 103
# text = The Development and Maintenance Environment shall be available to at least 25 developers 85% of the time during normal business hours over any consecutive twelve month period.
1	The	_	DET	_	_	5	det	_	_
2	Development	_	NOUN	_	_	5	nmod	_	_
3	and	_	CCONJ	_	_	4	cc	_	_
4	Maintenance	_	NOUN	_	_	2	conj	_	_
5	Environment	_	NOUN	_	_	8	nsubj	_	_
6	shall	_	AUX	_	_	8	aux	_	_
7	be	_	AUX	_	_	8	cop	_	_
8	available	_	ADJ	_	_	0	root	_	_
9	to	_	ADP	_	_	13	case	_	_
10	at	_	ADV	_	_	12	advmod	_	_
11	least	_	NOUN	_	_	10	fixed	_	_
12	25	_	NUM	_	_	13	nummod	_	_
13	developers	_	NOUN	_	_	8	obl	_	_
14	85	_	NUM	_	_	15	nummod	_	SpaceAfter=No
15	%	_	SYM	_	_	8	obl	_	_
16	of	_	ADP	_	_	18	case	_	_
17	the	_	DET	_	_	18	det	_	_
18	time	_	NOUN	_	_	15	nmod	_	_
19	during	_	ADP	_	_	22	case	_	_
20	normal	_	ADJ	_	_	22	amod	_	_
21	business	_	NOUN	_	_	22	compound	_	_
22	hours	_	NOUN	_	_	8	obl	_	_
23	over	_	ADP	_	_	28	case	_	_
24	any	_	DET	_	_	28	det	_	_
25	consecutive	_	ADJ	_	_	27	amod	_	_
26	twelve	_	NUM	_	_	27	nummod	_	_
27	month	_	NOUN	_	_	28	nmod	_	_
28	period	_	NOUN	_	_	8	obl	_	SpaceAfter=No
29	.	_	PUNCT	_	_	8	punct	_	_

# sent_id = 104
# text = Normal business hours are 8am to 4pm Eastern Time, Monday through Friday.
1	Normal	_	ADJ	_	_	3	amod	_	_
2	business	_	NOUN	_	_	3	compound	_	_
3	hours	_	NOUN	_	_	5	nsubj	_	_
4	are	_	AUX	_	_	5	cop	_	_
5	8	_	NUM	_	_	0	root	_	SpaceAfter=No
6	am	_	ADV	_	_	5	advmod	_	_
7	to	_	ADP	_	_	8	case	_	_
8	4	_	NUM	_	_	5	nmod	_	SpaceAfter=No
9	pm	_	ADV	_	_	8	advmod	_	_
10	Eastern	_	ADJ	_	_	11	amod	_	_
11	Time	_	NOUN	_	_	5	nmod	_	SpaceAfter=No
12	,	_	PUNCT	_	_	13	punct	_	_
13	Monday	_	NOUN	_	_	5	nmod	_	_
14	through	_	ADP	_	_	15	case	_	_
15	Friday	_	NOUN	_	_	13	nmod	_	SpaceAfter=No
16	.	_	PUNCT	_	_	5	punct	_	_

# newdoc id = 2001_hats_3.3.2.2_SRSreq164
# sent_id = 49
# text = The GUI shall run on Windows 2000, Sun Solaris 8, and Linux operating systems without modification of the Java code.
1	The	_	DET	_	_	2	det	_	_
2	GUI	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	run	_	VERB	_	_	0	root	_	_
5	on	_	ADP	_	_	6	case	_	_
6	Windows	_	PROPN	_	_	4	obl	_	_
7	2000	_	NUM	_	_	6	flat	_	SpaceAfter=No
8	,	_	PUNCT	_	_	9	punct	_	_
9	Sun	_	PROPN	_	_	6	conj	_	_
10	Solaris	_	PROPN	_	_	9	flat	_	_
11	8	_	NUM	_	_	9	flat	_	SpaceAfter=No
12	,	_	PUNCT	_	_	14	punct	_	_
13	and	_	CCONJ	_	_	14	cc	_	_
14	Linux	_	PROPN	_	_	6	conj	_	_
15	operating	_	NOUN	_	_	16	compound	_	_
16	systems	_	NOUN	_	_	6	appos	_	_
17	without	_	ADP	_	_	18	case	_	_
18	modification	_	NOUN	_	_	16	nmod	_	_
19	of	_	ADP	_	_	22	case	_	_
20	the	_	DET	_	_	22	det	_	_
21	Java	_	PROPN	_	_	22	compound	_	_
22	code	_	NOUN	_	_	18	nmod	_	SpaceAfter=No
23	.	_	PUNCT	_	_	4	punct	_	_

# newdoc id = 2005_phin_2.2.6.9
# sent_id = 203
# text = Systems supporting OM must be able to store laboratory result(s) and link the result(s) to the original laboratory test request.
1	Systems	_	NOUN	_	_	6	nsubj	_	_
2	supporting	_	VERB	_	_	1	acl	_	_
3	OM	_	PROPN	_	_	2	obj	_	_
4	must	_	AUX	_	_	6	aux	_	_
5	be	_	AUX	_	_	6	cop	_	_
6	able	_	ADJ	_	_	0	root	_	_
7	to	_	PART	_	_	8	mark	_	_
8	store	_	VERB	_	_	6	xcomp	_	_
9	laboratory	_	NOUN	_	_	10	compound	_	_
10	result	_	NOUN	_	_	8	obj	_	SpaceAfter=No
11	(	_	PUNCT	_	_	12	punct	_	SpaceAfter=No
12	s	_	X	_	_	10	dep	_	SpaceAfter=No
13	)	_	PUNCT	_	_	12	punct	_	_
14	and	_	CCONJ	_	_	15	cc	_	_
15	link	_	VERB	_	_	8	conj	_	_
16	the	_	DET	_	_	17	det	_	_
17	result	_	NOUN	_	_	15	obj	_	SpaceAfter=No
18	(	_	PUNCT	_	_	19	punct	_	SpaceAfter=No
19	s	_	X	_	_	17	dep	_	SpaceAfter=No
20	)	_	PUNCT	_	_	19	punct	_	_
21	to	_	ADP	_	_	26	case	_	_
22	the	_	DET	_	_	26	det	_	_
23	original	_	ADJ	_	_	26	amod	_	_
24	laboratory	_	NOUN	_	_	25	compound	_	_
25	test	_	NOUN	_	_	26	compound	_	_
26	request	_	NOUN	_	_	15	obl	_	SpaceAfter=No
27	.	_	PUNCT	_	_	6	punct	_	_

# sent_id = 204
# text = More information about receiving and linking laboratory test requests is found in section 2.5 System Integration and Data Exchange of this document.
1	More	_	DET	_	_	2	det	_	_
2	information	_	NOUN	_	_	11	nsubj:pass	_	_
3	about	_	ADP	_	_	4	mark	_	_
4	receiving	_	VERB	_	_	2	acl	_	_
5	and	_	CCONJ	_	_	6	cc	_	_
6	linking	_	VERB	_	_	4	conj	_	_
7	laboratory	_	NOUN	_	_	8	compound	_	_
8	test	_	NOUN	_	_	9	compound	_	_
9	requests	_	NOUN	_	_	4	obj	_	_
10	is	_	AUX	_	_	11	aux:pass	_	_
11	found	_	VERB	_	_	0	root	_	_
12	in	_	ADP	_	_	13	case	_	_
13	section	_	NOUN	_	_	11	obl	_	_
14	2.5	_	NUM	_	_	13	flat	_	_
15	System	_	NOUN	_	_	16	nmod	_	_
16	Integration	_	NOUN	_	_	13	appos	_	_
17	and	_	CCONJ	_	_	19	cc	_	_
18	Data	_	NOUN	_	_	19	nmod	_	_
19	Exchange	_	NOUN	_	_	16	conj	_	_
20	of	_	ADP	_	_	22	case	_	_
21	this	_	DET	_	_	22	det	_	_
22	document	_	NOUN	_	_	13	nmod	_	SpaceAfter=No
23	.	_	PUNCT	_	_	11	punct	_	_

# newdoc id = 2001_ctcnetwork_tab23_C2C-MP-09
# sent_id = 73
# text = The map shall be capable of displaying the following for a DMS: 1. Location 2. Current Message
1	The	_	DET	_	_	2	det	_	_
2	map	_	NOUN	_	_	5	nsubj	_	_
3	shall	_	AUX	_	_	5	aux	_	_
4	be	_	AUX	_	_	5	aux	_	_
5	capable	_	ADJ	_	_	0	root	_	_
6	of	_	SCONJ	_	_	7	mark	_	_
7	displaying	_	VERB	_	_	5	xcomp	_	_
8	the	_	DET	_	_	9	det	_	_
9	following	_	NOUN	_	_	7	obj	_	_
10	for	_	ADP	_	_	12	case	_	_
11	a	_	DET	_	_	12	det	_	_
12	DMS	_	NOUN	_	_	7	obl	_	SpaceAfter=No
13	:	_	PUNCT	_	_	16	punct	_	_
14	1	_	NUM	_	_	16	nummod	_	SpaceAfter=No
15	.	_	PUNCT	_	_	14	punct	_	_
16	Location	_	NOUN	_	_	7	parataxis	_	_
17	2	_	NUM	_	_	20	nummod	_	SpaceAfter=No
18	.	_	PUNCT	_	_	17	punct	_	_
19	Current	_	ADJ	_	_	20	amod	_	_
20	Message	_	NOUN	_	_	16	list	_	_

# newdoc id = 2001_npac_5.1.2.2.1.1_R5-19.2
# sent_id = 93
# text = NPAC SMS shall validate that the old Service Provider in the create message is the Service Provider to which the TN’s NPA-NXX is assigned (as stored in the NPAC SMS service provider data tables) if there is currently no active Subscription Version for the TN in the NPAC SMS.
1	NPAC	_	PROPN	_	_	2	nmod	_	_
2	SMS	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	validate	_	VERB	_	_	0	root	_	_
5	that	_	SCONJ	_	_	17	mark	_	_
6	the	_	DET	_	_	9	det	_	_
7	old	_	ADJ	_	_	9	amod	_	_
8	Service	_	NOUN	_	_	9	compound	_	_
9	Provider	_	NOUN	_	_	17	nsubj	_	_
10	in	_	ADP	_	_	13	case	_	_
11	the	_	DET	_	_	13	det	_	_
12	create	_	VERB	_	_	13	compound	_	_
13	message	_	NOUN	_	_	9	nmod	_	_
14	is	_	AUX	_	_	17	cop	_	_
15	the	_	DET	_	_	17	det	_	_
16	Service	_	NOUN	_	_	17	compound	_	_
17	Provider	_	NOUN	_	_	4	ccomp	_	_
18	to	_	PART	_	_	19	case	_	_
19	which	_	PRON	_	_	25	iobj	_	_
20	the	_	DET	_	_	21	det	_	_
21	TN	_	NOUN	_	_	23	nmod	_	SpaceAfter=No
22	’s	_	PART	_	_	21	case	_	_
23	NPA-NXX	_	PROPN	_	_	25	nsubj:pass	_	_
24	is	_	AUX	_	_	25	aux:pass	_	_
25	assigned	_	VERB	_	_	17	acl:relcl	_	_
26	(	_	PUNCT	_	_	28	punct	_	SpaceAfter=No
27	as	_	SCONJ	_	_	28	mark	_	_
28	stored	_	VERB	_	_	17	advcl	_	_
29	in	_	ADP	_	_	36	case	_	_
30	the	_	DET	_	_	36	det	_	_
31	NPAC	_	PROPN	_	_	32	nmod	_	_
32	SMS	_	NOUN	_	_	34	nmod	_	_
33	service	_	NOUN	_	_	34	compound	_	_
34	provider	_	NOUN	_	_	36	nmod	_	_
35	data	_	NOUN	_	_	36	compound	_	_
36	tables	_	NOUN	_	_	28	obl	_	SpaceAfter=No
37	)	_	PUNCT	_	_	28	punct	_	_
38	if	_	SCONJ	_	_	40	mark	_	_
39	there	_	PRON	_	_	40	expl	_	_
40	is	_	VERB	_	_	4	advcl	_	_
41	currently	_	ADV	_	_	40	advmod	_	_
42	no	_	DET	_	_	45	det	_	_
43	active	_	ADJ	_	_	45	amod	_	_
44	Subscription	_	NOUN	_	_	45	nmod	_	_
45	Version	_	NOUN	_	_	40	nsubj	_	_
46	for	_	ADP	_	_	48	case	_	_
47	the	_	DET	_	_	48	det	_	_
48	TN	_	NOUN	_	_	45	nmod	_	_
49	in	_	ADP	_	_	52	case	_	_
50	the	_	DET	_	_	52	det	_	_
51	NPAC	_	PROPN	_	_	52	nmod	_	_
52	SMS	_	NOUN	_	_	40	obl	_	SpaceAfter=No
53	.	_	PUNCT	_	_	4	punct	_	_

# newdoc id = 2011_tfms_3.2.1.1.1_SSS3494
# sent_id = 160
# text = When a TOS Message is received and it does not include at least one option containing a route that can be parsed from departure to destination based on the syntax for ICAO field 15c, the system shall reject the TOS message.
1	When	_	SCONJ	_	_	4	mark	_	_
2	a	_	DET	_	_	4	det	_	_
3	TOS	_	NOUN	_	_	4	compound	_	_
4	Message	_	NOUN	_	_	6	nsubj:pass	_	_
5	is	_	AUX	_	_	6	aux:pass	_	_
6	received	_	VERB	_	_	39	advcl	_	_
7	and	_	CCONJ	_	_	11	cc	_	_
8	it	_	PRON	_	_	11	nsubj	_	_
9	does	_	AUX	_	_	11	aux	_	_
10	not	_	PART	_	_	11	advmod	_	_
11	include	_	VERB	_	_	6	conj	_	_
12	at	_	ADV	_	_	14	advmod	_	_
13	least	_	NOUN	_	_	12	fixed	_	_
14	one	_	NUM	_	_	15	nummod	_	_
15	option	_	NOUN	_	_	11	obj	_	_
16	containing	_	VERB	_	_	15	acl	_	_
17	a	_	DET	_	_	18	det	_	_
18	route	_	NOUN	_	_	16	obj	_	_
19	that	_	PRON	_	_	22	nsubj:pass	_	_
20	can	_	AUX	_	_	22	aux	_	_
21	be	_	AUX	_	_	22	aux:pass	_	_
22	parsed	_	VERB	_	_	18	acl	_	_
23	from	_	ADP	_	_	24	case	_	_
24	departure	_	NOUN	_	_	22	obl	_	_
25	to	_	ADP	_	_	26	case	_	_
26	destination	_	NOUN	_	_	24	nmod	_	_
27	based	_	VERB	_	_	22	advcl	_	_
28	on	_	ADP	_	_	30	case	_	_
29	the	_	DET	_	_	30	det	_	_
30	syntax	_	NOUN	_	_	27	obl	_	_
31	for	_	ADP	_	_	33	case	_	_
32	ICAO	_	PROPN	_	_	33	nmod	_	_
33	field	_	NOUN	_	_	30	nmod	_	_
34	15c	_	NOUN	_	_	33	flat	_	SpaceAfter=No
35	,	_	PUNCT	_	_	6	punct	_	_
36	the	_	DET	_	_	37	det	_	_
37	system	_	NOUN	_	_	39	nsubj	_	_
38	shall	_	AUX	_	_	39	aux	_	_
39	reject	_	VERB	_	_	0	root	_	_
40	the	_	DET	_	_	42	det	_	_
41	TOS	_	NOUN	_	_	42	compound	_	_
42	message	_	NOUN	_	_	39	obj	_	SpaceAfter=No
43	.	_	PUNCT	_	_	39	punct	_	_

# newdoc id = 2007_eirenefun7_5.2.3.7
# sent_id = 168
# text = When the MMI is switched on, the configuration shall be determined by the time elapsed since the MMI was last switched off: (M) - less than t minutes – the MMI shall power up with the same configuration as when it was last powered down; - greater than t minutes – the MMI shall power up with default settings.
1	When	_	SCONJ	_	_	5	mark	_	_
2	the	_	DET	_	_	3	det	_	_
3	MMI	_	NOUN	_	_	5	nsubj:pass	_	_
4	is	_	AUX	_	_	5	aux:pass	_	_
5	switched	_	VERB	_	_	12	advcl	_	_
6	on	_	ADV	_	_	5	advmod	_	SpaceAfter=No
7	,	_	PUNCT	_	_	5	punct	_	_
8	the	_	DET	_	_	9	det	_	_
9	configuration	_	NOUN	_	_	12	nsubj:pass	_	_
10	shall	_	AUX	_	_	12	aux	_	_
11	be	_	AUX	_	_	12	aux:pass	_	_
12	determined	_	VERB	_	_	0	root	_	_
13	by	_	ADP	_	_	15	case	_	_
14	the	_	DET	_	_	15	det	_	_
15	time	_	NOUN	_	_	12	obl:agent	_	_
16	elapsed	_	VERB	_	_	15	acl	_	_
17	since	_	SCONJ	_	_	22	mark	_	_
18	the	_	DET	_	_	19	det	_	_
19	MMI	_	NOUN	_	_	22	nsubj:pass	_	_
20	was	_	AUX	_	_	22	aux:pass	_	_
21	last	_	ADV	_	_	22	advmod	_	_
22	switched	_	VERB	_	_	16	advcl	_	_
23	off	_	ADV	_	_	22	advmod	_	SpaceAfter=No
24	:	_	PUNCT	_	_	23	punct	_	_
25	(	_	PUNCT	_	_	26	punct	_	SpaceAfter=No
26	M	_	ADJ	_	_	12	advmod	_	SpaceAfter=No
27	)	_	PUNCT	_	_	26	punct	_	_
28	-	_	PUNCT	_	_	32	punct	_	_
29	less	_	ADV	_	_	31	advmod	_	_
30	than	_	SCONJ	_	_	29	fixed	_	_
31	t	_	NUM	_	_	32	nummod	_	_
32	minutes	_	NOUN	_	_	12	parataxis	_	_
33	–	_	PUNCT	_	_	37	punct	_	_
34	the	_	DET	_	_	35	det	_	_
35	MMI	_	NOUN	_	_	37	nsubj	_	_
36	shall	_	AUX	_	_	37	aux	_	_
37	power	_	VERB	_	_	32	parataxis	_	_
38	up	_	ADP	_	_	37	compound	_	_
39	with	_	ADP	_	_	42	case	_	_
40	the	_	DET	_	_	42	det	_	_
41	same	_	ADJ	_	_	42	amod	_	_
42	configuration	_	NOUN	_	_	37	obl	_	_
43	as	_	SCONJ	_	_	48	mark	_	_
44	when	_	SCONJ	_	_	48	mark	_	_
45	it	_	PRON	_	_	48	nsubj:pass	_	_
46	was	_	AUX	_	_	48	aux:pass	_	_
47	last	_	ADV	_	_	48	advmod	_	_
48	powered	_	VERB	_	_	42	advcl	_	_
49	down	_	ADP	_	_	48	compound	_	SpaceAfter=No
50	;	_	PUNCT	_	_	55	punct	_	_
51	-	_	PUNCT	_	_	55	punct	_	_
52	greater	_	ADJ	_	_	54	advmod	_	_
53	than	_	SCONJ	_	_	52	fixed	_	_
54	t	_	NUM	_	_	55	nummod	_	_
55	minutes	_	NOUN	_	_	32	list	_	_
56	–	_	PUNCT	_	_	60	punct	_	_
57	the	_	DET	_	_	58	det	_	_
58	MMI	_	NOUN	_	_	60	nsubj	_	_
59	shall	_	AUX	_	_	60	aux	_	_
60	power	_	VERB	_	_	55	parataxis	_	_
61	up	_	ADP	_	_	60	compound	_	_
62	with	_	ADP	_	_	64	case	_	_
63	default	_	ADJ	_	_	64	amod	_	_
64	settings	_	NOUN	_	_	60	obl	_	SpaceAfter=No
65	.	_	PUNCT	_	_	12	punct	_	_

# newdoc id = 1998_themas_3.1.7.1
# sent_id = 216
# text = There are two events that shall result in an alarm condition: 1) an invalid temperature value is reported from a thermostat, or 2) the reported temperature has exceeded the defined limits.
1	There	_	PRON	_	_	2	expl	_	_
2	are	_	VERB	_	_	0	root	_	_
3	two	_	NUM	_	_	4	nummod	_	_
4	events	_	NOUN	_	_	2	nsubj	_	_
5	that	_	PRON	_	_	7	nsubj	_	_
6	shall	_	AUX	_	_	7	aux	_	_
7	result	_	VERB	_	_	4	acl:relcl	_	_
8	in	_	ADP	_	_	11	case	_	_
9	an	_	DET	_	_	11	det	_	_
10	alarm	_	NOUN	_	_	11	compound	_	_
11	condition	_	NOUN	_	_	7	obl	_	SpaceAfter=No
12	:	_	PUNCT	_	_	20	punct	_	_
13	1	_	NUM	_	_	20	nummod	_	SpaceAfter=No
14	)	_	PUNCT	_	_	13	punct	_	_
15	an	_	DET	_	_	18	det	_	_
16	invalid	_	ADJ	_	_	18	amod	_	_
17	temperature	_	NOUN	_	_	18	nmod	_	_
18	value	_	NOUN	_	_	20	nsubj:pass	_	_
19	is	_	AUX	_	_	20	aux:pass	_	_
20	reported	_	VERB	_	_	2	parataxis	_	_
21	from	_	ADP	_	_	23	case	_	_
22	a	_	DET	_	_	23	det	_	_
23	thermostat	_	NOUN	_	_	20	obl	_	SpaceAfter=No
24	,	_	PUNCT	_	_	32	punct	_	_
25	or	_	CCONJ	_	_	32	cc	_	_
26	2	_	NUM	_	_	32	nummod	_	SpaceAfter=No
27	)	_	PUNCT	_	_	26	punct	_	_
28	the	_	DET	_	_	30	det	_	_
29	reported	_	ADJ	_	_	30	amod	_	_
30	temperature	_	NOUN	_	_	32	nsubj	_	_
31	has	_	AUX	_	_	32	aux	_	_
32	exceeded	_	VERB	_	_	20	conj	_	_
33	the	_	DET	_	_	35	det	_	_
34	defined	_	ADJ	_	_	35	amod	_	_
35	limits	_	NOUN	_	_	32	obj	_	SpaceAfter=No
36	.	_	PUNCT	_	_	2	punct	_	_

# sent_id = 217
# text = This process shall determine which alarm event is to be generated.
1	This	_	DET	_	_	2	det	_	_
2	process	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	determine	_	VERB	_	_	0	root	_	_
5	which	_	DET	_	_	7	det	_	_
6	alarm	_	NOUN	_	_	7	compound	_	_
7	event	_	NOUN	_	_	8	nsubj	_	_
8	is	_	VERB	_	_	4	ccomp	_	_
9	to	_	ADP	_	_	11	mark	_	_
10	be	_	AUX	_	_	11	aux:pass	_	_
11	generated	_	VERB	_	_	8	xcomp	_	SpaceAfter=No
12	.	_	PUNCT	_	_	4	punct	_	_

# newdoc id = 2001_npac_6.4.2_R6-28.1
# sent_id = 32
# text = A transaction rate of 2 CMIP transactions (sustained) per second shall be supported by each SOA to NPAC SMS interface association.
1	A	_	DET	_	_	3	det	_	_
2	transaction	_	NOUN	_	_	3	compound	_	_
3	rate	_	NOUN	_	_	15	nsubj:pass	_	_
4	of	_	ADP	_	_	7	case	_	_
5	2	_	NUM	_	_	7	nummod	_	_
6	CMIP	_	PROPN	_	_	7	compound	_	_
7	transactions	_	NOUN	_	_	3	nmod	_	_
8	(	_	PUNCT	_	_	9	punct	_	SpaceAfter=No
9	sustained	_	ADJ	_	_	3	amod	_	SpaceAfter=No
10	)	_	PUNCT	_	_	9	punct	_	_
11	per	_	ADP	_	_	12	case	_	_
12	second	_	NOUN	_	_	7	nmod	_	_
13	shall	_	AUX	_	_	15	aux	_	_
14	be	_	AUX	_	_	15	aux:pass	_	_
15	supported	_	VERB	_	_	0	root	_	_
16	by	_	ADP	_	_	23	case	_	_
17	each	_	DET	_	_	23	det	_	_
18	SOA	_	NOUN	_	_	23	nmod	_	_
19	to	_	ADP	_	_	22	case	_	_
20	NPAC	_	PROPN	_	_	21	nmod	_	_
21	SMS	_	NOUN	_	_	22	nmod	_	_
22	interface	_	NOUN	_	_	18	nmod	_	_
23	association	_	NOUN	_	_	15	obl:agent	_	SpaceAfter=No
24	.	_	PUNCT	_	_	15	punct	_	_

# newdoc id = 2007_eirenefun7_5.2.2.39
# sent_id = 3
# text = Upon activation of this function, the Cab radio shall provide the driver with a list of ‘generic’ staff, eg: (M) - chief conductor; - conductor 1; - conductor 2; - catering staff 1.
1	Upon	_	ADP	_	_	2	case	_	_
2	activation	_	NOUN	_	_	11	obl	_	_
3	of	_	ADP	_	_	5	case	_	_
4	this	_	DET	_	_	5	det	_	_
5	function	_	NOUN	_	_	2	nmod	_	SpaceAfter=No
6	,	_	PUNCT	_	_	2	punct	_	_
7	the	_	DET	_	_	9	det	_	_
8	Cab	_	NOUN	_	_	9	compound	_	_
9	radio	_	NOUN	_	_	11	nsubj	_	_
10	shall	_	AUX	_	_	11	aux	_	_
11	provide	_	VERB	_	_	0	root	_	_
12	the	_	DET	_	_	13	det	_	_
13	driver	_	NOUN	_	_	11	iobj	_	_
14	with	_	ADP	_	_	16	case	_	_
15	a	_	DET	_	_	16	det	_	_
16	list	_	NOUN	_	_	11	obj	_	_
17	of	_	ADP	_	_	21	case	_	_
18	‘	_	PUNCT	_	_	19	punct	_	SpaceAfter=No
19	generic	_	ADJ	_	_	21	amod	_	SpaceAfter=No
20	’	_	PUNCT	_	_	19	punct	_	_
21	staff	_	NOUN	_	_	16	nmod	_	SpaceAfter=No
22	,	_	PUNCT	_	_	23	punct	_	_
23	eg	_	ADV	_	_	30	parataxis	_	SpaceAfter=No
24	:	_	PUNCT	_	_	23	punct	_	_
25	(	_	PUNCT	_	_	26	punct	_	SpaceAfter=No
26	M	_	ADJ	_	_	11	advmod	_	SpaceAfter=No
27	)	_	PUNCT	_	_	26	punct	_	_
28	-	_	PUNCT	_	_	30	punct	_	_
29	chief	_	ADJ	_	_	30	amod	_	_
30	conductor	_	NOUN	_	_	21	appos	_	SpaceAfter=No
31	;	_	PUNCT	_	_	33	punct	_	_
32	-	_	PUNCT	_	_	33	punct	_	_
33	conductor	_	NOUN	_	_	30	list	_	_
34	1	_	NUM	_	_	33	flat	_	SpaceAfter=No
35	;	_	PUNCT	_	_	37	punct	_	_
36	-	_	PUNCT	_	_	37	punct	_	_
37	conductor	_	NOUN	_	_	30	list	_	_
38	2	_	NUM	_	_	37	flat	_	SpaceAfter=No
39	;	_	PUNCT	_	_	42	punct	_	_
40	-	_	PUNCT	_	_	42	punct	_	_
41	catering	_	NOUN	_	_	42	compound	_	_
42	staff	_	NOUN	_	_	30	list	_	_
43	1	_	NUM	_	_	42	flat	_	SpaceAfter=No
44	.	_	PUNCT	_	_	11	punct	_	_

# newdoc id = 2007_nde_3.10.1.1
# sent_id = 9
# text = The NDE Ingest capability shall not be interrupted for more than 2 hours in any consecutive 24 hour period and no more than 4 hours in any consecutive 30 day period.
1	The	_	DET	_	_	4	det	_	_
2	NDE	_	PROPN	_	_	4	nmod	_	_
3	Ingest	_	VERB	_	_	4	nmod	_	_
4	capability	_	NOUN	_	_	8	nsubj:pass	_	_
5	shall	_	AUX	_	_	8	aux	_	_
6	not	_	PART	_	_	8	advmod	_	_
7	be	_	AUX	_	_	8	aux:pass	_	_
8	interrupted	_	VERB	_	_	0	root	_	_
9	for	_	ADP	_	_	13	case	_	_
10	more	_	ADV	_	_	12	advmod	_	_
11	than	_	SCONJ	_	_	10	fixed	_	_
12	2	_	NUM	_	_	13	nummod	_	_
13	hours	_	NOUN	_	_	8	obl	_	_
14	in	_	ADP	_	_	19	case	_	_
15	any	_	DET	_	_	19	det	_	_
16	consecutive	_	ADJ	_	_	18	amod	_	_
17	24	_	NUM	_	_	18	nummod	_	_
18	hour	_	NOUN	_	_	19	nmod	_	_
19	period	_	NOUN	_	_	13	nmod	_	_
20	and	_	CCONJ	_	_	25	cc	_	_
21	no	_	ADV	_	_	22	advmod	_	_
22	more	_	ADV	_	_	24	advmod	_	_
23	than	_	SCONJ	_	_	22	fixed	_	_
24	4	_	NUM	_	_	25	nummod	_	_
25	hours	_	NOUN	_	_	13	conj	_	_
26	in	_	ADP	_	_	31	case	_	_
27	any	_	DET	_	_	31	det	_	_
28	consecutive	_	ADJ	_	_	30	amod	_	_
29	30	_	NUM	_	_	30	nummod	_	_
30	day	_	NOUN	_	_	31	nmod	_	_
31	period	_	NOUN	_	_	25	nmod	_	SpaceAfter=No
32	.	_	PUNCT	_	_	8	punct	_	_

# newdoc id = 2010_home1.3_4.1.4
# sent_id = 258
# text = The DigitalHome shall be equipped with various environmental controllers and sensors (temperature controller-sensors: thermostats, humidity controller-sensors: humidistats, contact sensors, security sound and light alarms, and power switches).
1	The	_	DET	_	_	2	det	_	_
2	DigitalHome	_	PROPN	_	_	5	nsubj:pass	_	_
3	shall	_	AUX	_	_	5	aux	_	_
4	be	_	AUX	_	_	5	aux:pass	_	_
5	equipped	_	VERB	_	_	0	root	_	_
6	with	_	ADP	_	_	9	case	_	_
7	various	_	ADJ	_	_	9	amod	_	_
8	environmental	_	ADJ	_	_	9	amod	_	_
9	controllers	_	NOUN	_	_	5	obl	_	_
10	and	_	CCONJ	_	_	11	cc	_	_
11	sensors	_	NOUN	_	_	9	conj	_	_
12	(	_	PUNCT	_	_	14	punct	_	SpaceAfter=No
13	temperature	_	NOUN	_	_	14	nmod	_	_
14	controller	_	NOUN	_	_	9	appos	_	SpaceAfter=No
15	-	_	PUNCT	_	_	16	punct	_	SpaceAfter=No
16	sensors	_	NOUN	_	_	14	conj	_	SpaceAfter=No
17	:	_	PUNCT	_	_	18	punct	_	_
18	thermostats	_	NOUN	_	_	14	appos	_	SpaceAfter=No
19	,	_	PUNCT	_	_	21	punct	_	_
20	humidity	_	NOUN	_	_	21	nmod	_	_
21	controller	_	NOUN	_	_	14	conj	_	SpaceAfter=No
22	-	_	PUNCT	_	_	23	punct	_	SpaceAfter=No
23	sensors	_	NOUN	_	_	21	conj	_	SpaceAfter=No
24	:	_	PUNCT	_	_	25	punct	_	_
25	humidistats	_	NOUN	_	_	21	appos	_	SpaceAfter=No
26	,	_	PUNCT	_	_	28	punct	_	_
27	contact	_	NOUN	_	_	28	compound	_	_
28	sensors	_	NOUN	_	_	25	conj	_	SpaceAfter=No
29	,	_	PUNCT	_	_	34	punct	_	_
30	security	_	NOUN	_	_	34	compound	_	_
31	sound	_	NOUN	_	_	34	compound	_	_
32	and	_	CCONJ	_	_	33	cc	_	_
33	light	_	NOUN	_	_	31	conj	_	_
34	alarms	_	NOUN	_	_	25	conj	_	SpaceAfter=No
35	,	_	PUNCT	_	_	38	punct	_	_
36	and	_	CCONJ	_	_	38	cc	_	_
37	power	_	NOUN	_	_	38	compound	_	_
38	switches	_	NOUN	_	_	25	conj	_	SpaceAfter=No
39	)	_	PUNCT	_	_	14	punct	_	SpaceAfter=No
40	.	_	PUNCT	_	_	5	punct	_	_

# newdoc id = 2002_evlaback_3.7.2
# sent_id = 248
# text = Transparency – 3.7.1, above, shall be accomplished in manner that is transparent to processing, communications and I/O software functions with the possible exception of recompilation of executables.
1	Transparency	_	NOUN	_	_	0	root	_	_
2	–	_	PUNCT	_	_	1	punct	_	_
3	3.7.1	_	NUM	_	_	9	nsubj:pass	_	SpaceAfter=No
4	,	_	PUNCT	_	_	5	punct	_	_
5	above	_	ADV	_	_	3	advmod	_	SpaceAfter=No
6	,	_	PUNCT	_	_	5	punct	_	_
7	shall	_	AUX	_	_	9	aux	_	_
8	be	_	AUX	_	_	9	aux:pass	_	_
9	accomplished	_	VERB	_	_	1	parataxis	_	_
10	in	_	ADP	_	_	11	case	_	_
11	manner	_	NOUN	_	_	9	obl	_	_
12	that	_	PRON	_	_	14	nsubj	_	_
13	is	_	AUX	_	_	14	cop	_	_
14	transparent	_	ADJ	_	_	11	acl:relcl	_	_
15	to	_	ADP	_	_	16	case	_	_
16	processing	_	NOUN	_	_	22	nmod	_	SpaceAfter=No
17	,	_	PUNCT	_	_	18	punct	_	_
18	communications	_	NOUN	_	_	16	conj	_	_
19	and	_	CCONJ	_	_	20	cc	_	_
20	I/O	_	NOUN	_	_	16	conj	_	_
21	software	_	NOUN	_	_	22	nmod	_	_
22	functions	_	NOUN	_	_	14	obl	_	_
23	with	_	ADP	_	_	26	case	_	_
24	the	_	DET	_	_	26	det	_	_
25	possible	_	ADJ	_	_	26	amod	_	_
26	exception	_	NOUN	_	_	22	nmod	_	_
27	of	_	ADP	_	_	28	case	_	_
28	recompilation	_	NOUN	_	_	26	nmod	_	_
29	of	_	ADP	_	_	30	case	_	_
30	executables	_	NOUN	_	_	28	nmod	_	SpaceAfter=No
31	.	_	PUNCT	_	_	1	punct	_	_

# newdoc id = 2019_MOSAR_3.9_VerR_G105
# sent_id = 239
# text = The test facility shall ensure a volume of 5 m (L)x 3.5 m (W)x 3 m (H) in order to allow the integration of the test bench and all required components for the regular performance of the demonstration
1	The	_	DET	_	_	3	det	_	_
2	test	_	NOUN	_	_	3	compound	_	_
3	facility	_	NOUN	_	_	5	nsubj	_	_
4	shall	_	AUX	_	_	5	aux	_	_
5	ensure	_	VERB	_	_	0	root	_	_
6	a	_	DET	_	_	7	det	_	_
7	volume	_	NOUN	_	_	5	obj	_	_
8	of	_	ADP	_	_	10	case	_	_
9	5	_	NUM	_	_	10	nummod	_	_
10	m	_	NOUN	_	_	7	nmod	_	_
11	(	_	PUNCT	_	_	12	punct	_	SpaceAfter=No
12	L	_	NOUN	_	_	10	appos	_	SpaceAfter=No
13	)	_	PUNCT	_	_	12	punct	_	SpaceAfter=No
14	x	_	SYM	_	_	16	cc	_	_
15	3.5	_	NUM	_	_	16	nummod	_	_
16	m	_	NOUN	_	_	10	conj	_	_
17	(	_	PUNCT	_	_	18	punct	_	SpaceAfter=No
18	W	_	NOUN	_	_	16	appos	_	SpaceAfter=No
19	)	_	PUNCT	_	_	18	punct	_	SpaceAfter=No
20	x	_	SYM	_	_	22	cc	_	_
21	3	_	NUM	_	_	22	nummod	_	_
22	m	_	NOUN	_	_	10	conj	_	_
23	(	_	PUNCT	_	_	24	punct	_	SpaceAfter=No
24	H	_	NOUN	_	_	22	appos	_	SpaceAfter=No
25	)	_	PUNCT	_	_	24	punct	_	_
26	in	_	ADP	_	_	29	mark	_	_
27	order	_	NOUN	_	_	26	fixed	_	_
28	to	_	PART	_	_	26	fixed	_	_
29	allow	_	VERB	_	_	5	advcl	_	_
30	the	_	DET	_	_	31	det	_	_
31	integration	_	NOUN	_	_	29	obj	_	_
32	of	_	ADP	_	_	35	case	_	_
33	the	_	DET	_	_	35	det	_	_
34	test	_	NOUN	_	_	35	compound	_	_
35	bench	_	NOUN	_	_	31	nmod	_	_
36	and	_	CCONJ	_	_	39	cc	_	_
37	all	_	DET	_	_	39	det	_	_
38	required	_	ADJ	_	_	39	amod	_	_
39	components	_	NOUN	_	_	31	conj	_	_
40	for	_	ADP	_	_	43	case	_	_
41	the	_	DET	_	_	43	det	_	_
42	regular	_	ADJ	_	_	43	amod	_	_
43	performance	_	NOUN	_	_	29	obl	_	_
44	of	_	ADP	_	_	46	case	_	_
45	the	_	DET	_	_	46	det	_	_
46	demonstration	_	NOUN	_	_	43	nmod	_	_

# newdoc id = 2000_nasax38_3.2.1_8
# sent_id = 222
# text = If the failed FCP processor has not synced in 2.5 seconds after the surviving triplex has detected the loss of the FCP, then the surviving triplex shall [SRS178], within 1 second, send a single voted VMEbus reset through the NE to the failed FCP.
1	If	_	SCONJ	_	_	8	mark	_	_
2	the	_	DET	_	_	5	det	_	_
3	failed	_	ADJ	_	_	5	amod	_	_
4	FCP	_	NOUN	_	_	5	compound	_	_
5	processor	_	NOUN	_	_	8	nsubj	_	_
6	has	_	AUX	_	_	8	aux	_	_
7	not	_	PART	_	_	8	advmod	_	_
8	synced	_	VERB	_	_	37	advcl	_	_
9	in	_	ADP	_	_	11	case	_	_
10	2.5	_	NUM	_	_	11	nummod	_	_
11	seconds	_	NOUN	_	_	8	obl	_	_
12	after	_	ADP	_	_	17	mark	_	_
13	the	_	DET	_	_	15	det	_	_
14	surviving	_	ADJ	_	_	15	amod	_	_
15	triplex	_	NOUN	_	_	17	nsubj	_	_
16	has	_	AUX	_	_	17	aux	_	_
17	detected	_	VERB	_	_	11	acl	_	_
18	the	_	DET	_	_	19	det	_	_
19	loss	_	NOUN	_	_	17	obj	_	_
20	of	_	ADP	_	_	22	case	_	_
21	the	_	DET	_	_	22	det	_	_
22	FCP	_	PROPN	_	_	19	nmod	_	SpaceAfter=No
23	,	_	PUNCT	_	_	8	punct	_	_
24	then	_	ADV	_	_	37	advmod	_	_
25	the	_	DET	_	_	27	det	_	_
26	surviving	_	ADJ	_	_	27	amod	_	_
27	triplex	_	NOUN	_	_	37	nsubj	_	_
28	shall	_	AUX	_	_	37	aux	_	_
29	[	_	PUNCT	_	_	30	punct	_	SpaceAfter=No
30	SRS178	_	PROPN	_	_	27	appos	_	SpaceAfter=No
31	]	_	PUNCT	_	_	30	punct	_	SpaceAfter=No
32	,	_	PUNCT	_	_	35	punct	_	_
33	within	_	ADP	_	_	35	case	_	_
34	1	_	NUM	_	_	35	nummod	_	_
35	second	_	NOUN	_	_	37	obl	_	SpaceAfter=No
36	,	_	PUNCT	_	_	35	punct	_	_
37	send	_	VERB	_	_	0	root	_	_
38	a	_	DET	_	_	42	det	_	_
39	single	_	ADJ	_	_	42	amod	_	_
40	voted	_	ADJ	_	_	42	amod	_	_
41	VMEbus	_	NOUN	_	_	42	nmod	_	_
42	reset	_	NOUN	_	_	37	obj	_	_
43	through	_	ADP	_	_	45	case	_	_
44	the	_	DET	_	_	45	det	_	_
45	NE	_	NOUN	_	_	37	obl	_	_
46	to	_	ADP	_	_	49	case	_	_
47	the	_	DET	_	_	49	det	_	_
48	failed	_	ADJ	_	_	49	amod	_	_
49	FCP	_	NOUN	_	_	37	obl	_	SpaceAfter=No
50	.	_	PUNCT	_	_	37	punct	_	_

# newdoc id = 2011_tfms_3.2.1.1.4_SSS2252
# sent_id = 13
# text = When the system receives a Flight Plan message or an Airline Flight Create message to create a new flight that has: a. Same flight ID as an existing flight, and b. Same destination (but with different origin) as that existing flight, And that existing flight has: c. A departure time within 10 hours prior to the new flight's departure time, and d. A status of "cancelled", i.e. 'diversion cancelled', the system shall identify the new flight to be an 'auto' Diversion Recovery flight.
1	When	_	SCONJ	_	_	4	mark	_	_
2	the	_	DET	_	_	3	det	_	_
3	system	_	NOUN	_	_	4	nsubj	_	_
4	receives	_	VERB	_	_	91	advcl	_	_
5	a	_	DET	_	_	8	det	_	_
6	Flight	_	NOUN	_	_	7	compound	_	_
7	Plan	_	NOUN	_	_	8	compound	_	_
8	message	_	NOUN	_	_	4	obj	_	_
9	or	_	CCONJ	_	_	14	cc	_	_
10	an	_	DET	_	_	14	det	_	_
11	Airline	_	NOUN	_	_	12	compound	_	_
12	Flight	_	NOUN	_	_	13	compound	_	_
13	Create	_	VERB	_	_	14	compound	_	_
14	message	_	NOUN	_	_	8	conj	_	_
15	to	_	PART	_	_	16	mark	_	_
16	create	_	VERB	_	_	8	acl	_	_
17	a	_	DET	_	_	19	det	_	_
18	new	_	ADJ	_	_	19	amod	_	_
19	flight	_	NOUN	_	_	16	obj	_	_
20	that	_	PRON	_	_	21	nsubj	_	_
21	has	_	VERB	_	_	19	acl:relcl	_	SpaceAfter=No
22	:	_	PUNCT	_	_	27	punct	_	_
23	a	_	NUM	_	_	27	nummod	_	SpaceAfter=No
24	.	_	PUNCT	_	_	23	punct	_	_
25	Same	_	ADJ	_	_	27	amod	_	_
26	flight	_	NOUN	_	_	27	nmod	_	_
27	ID	_	NOUN	_	_	21	obj	_	_
28	as	_	SCONJ	_	_	31	case	_	_
29	an	_	DET	_	_	31	det	_	_
30	existing	_	ADJ	_	_	31	amod	_	_
31	flight	_	NOUN	_	_	27	obl	_	SpaceAfter=No
32	,	_	PUNCT	_	_	37	punct	_	_
33	and	_	CCONJ	_	_	37	cc	_	_
34	b	_	NUM	_	_	37	nummod	_	SpaceAfter=No
35	.	_	PUNCT	_	_	34	punct	_	_
36	Same	_	ADJ	_	_	37	amod	_	_
37	destination	_	NOUN	_	_	27	conj	_	_
38	(	_	PUNCT	_	_	42	punct	_	SpaceAfter=No
39	but	_	CCONJ	_	_	42	cc	_	_
40	with	_	ADP	_	_	42	case	_	_
41	different	_	ADJ	_	_	42	amod	_	_
42	origin	_	NOUN	_	_	37	conj	_	SpaceAfter=No
43	)	_	PUNCT	_	_	42	punct	_	_
44	as	_	SCONJ	_	_	47	case	_	_
45	that	_	DET	_	_	47	det	_	_
46	existing	_	ADJ	_	_	47	amod	_	_
47	flight	_	NOUN	_	_	37	obl	_	SpaceAfter=No
48	,	_	PUNCT	_	_	53	punct	_	_
49	And	_	CCONJ	_	_	53	cc	_	_
50	that	_	DET	_	_	52	det	_	_
51	existing	_	ADJ	_	_	52	amod	_	_
52	flight	_	NOUN	_	_	53	nsubj	_	_
53	has	_	VERB	_	_	27	conj	_	SpaceAfter=No
54	:	_	PUNCT	_	_	59	punct	_	_
55	c	_	NUM	_	_	59	nummod	_	SpaceAfter=No
56	.	_	PUNCT	_	_	55	punct	_	_
57	A	_	DET	_	_	59	det	_	_
58	departure	_	NOUN	_	_	59	nmod	_	_
59	time	_	NOUN	_	_	53	obj	_	_
60	within	_	ADP	_	_	62	case	_	_
61	10	_	NUM	_	_	62	nummod	_	_
62	hours	_	NOUN	_	_	59	nmod	_	_
63	prior	_	ADP	_	_	70	case	_	_
64	to	_	ADP	_	_	63	fixed	_	_
65	the	_	DET	_	_	70	det	_	_
66	new	_	ADJ	_	_	70	amod	_	_
67	flight	_	NOUN	_	_	69	nmod	_	SpaceAfter=No
68	's	_	PART	_	_	67	case	_	_
69	departure	_	NOUN	_	_	70	nmod	_	_
70	time	_	NOUN	_	_	62	nmod	_	SpaceAfter=No
71	,	_	PUNCT	_	_	76	punct	_	_
72	and	_	CCONJ	_	_	76	cc	_	_
73	d	_	NUM	_	_	76	nummod	_	SpaceAfter=No
74	.	_	PUNCT	_	_	73	punct	_	_
75	A	_	DET	_	_	76	det	_	_
76	status	_	NOUN	_	_	59	conj	_	_
77	of	_	ADP	_	_	79	case	_	_
78	"	_	PUNCT	_	_	79	punct	_	SpaceAfter=No
79	cancelled	_	VERB	_	_	76	nmod	_	SpaceAfter=No
80	"	_	PUNCT	_	_	79	punct	_	SpaceAfter=No
81	,	_	PUNCT	_	_	85	punct	_	_
82	i.e.	_	ADV	_	_	85	parataxis	_	_
83	'	_	PUNCT	_	_	85	punct	_	SpaceAfter=No
84	diversion	_	NOUN	_	_	85	nsubj	_	_
85	cancelled	_	VERB	_	_	79	appos	_	SpaceAfter=No
86	'	_	PUNCT	_	_	85	punct	_	SpaceAfter=No
87	,	_	PUNCT	_	_	85	punct	_	_
88	the	_	DET	_	_	89	det	_	_
89	system	_	NOUN	_	_	91	nsubj	_	_
90	shall	_	AUX	_	_	91	aux	_	_
91	identify	_	VERB	_	_	0	root	_	_
92	the	_	DET	_	_	94	det	_	_
93	new	_	ADJ	_	_	94	amod	_	_
94	flight	_	NOUN	_	_	91	obj	_	_
95	to	_	PART	_	_	103	mark	_	_
96	be	_	AUX	_	_	103	cop	_	_
97	an	_	DET	_	_	103	det	_	_
98	'	_	PUNCT	_	_	99	punct	_	SpaceAfter=No
99	auto	_	ADJ	_	_	103	amod	_	SpaceAfter=No
100	'	_	PUNCT	_	_	99	punct	_	_
101	Diversion	_	NOUN	_	_	102	compound	_	_
102	Recovery	_	NOUN	_	_	103	compound	_	_
103	flight	_	NOUN	_	_	91	xcomp	_	SpaceAfter=No
104	.	_	PUNCT	_	_	91	punct	_	_

# newdoc id = 2019_MOSAR_3.6.2_PerfR_D201
# sent_id = 76
# text = The mechanical interface shall withstand, in connected mode, all mechanical loads induced by the demonstration operations: - Axial Force: 250 / 160 N - Radial Force: 250 / 160 N - Bending Moment: 204 / 84 Nm - Torsion: TBD Nm As function of the gravity compensation of the SM (TBC).
1	The	_	DET	_	_	3	det	_	_
2	mechanical	_	ADJ	_	_	3	amod	_	_
3	interface	_	NOUN	_	_	5	nsubj	_	_
4	shall	_	AUX	_	_	5	aux	_	_
5	withstand	_	VERB	_	_	0	root	_	SpaceAfter=No
6	,	_	PUNCT	_	_	9	punct	_	_
7	in	_	ADP	_	_	9	case	_	_
8	connected	_	ADJ	_	_	9	amod	_	_
9	mode	_	NOUN	_	_	5	obl	_	SpaceAfter=No
10	,	_	PUNCT	_	_	9	punct	_	_
11	all	_	DET	_	_	13	det	_	_
12	mechanical	_	ADJ	_	_	13	amod	_	_
13	loads	_	NOUN	_	_	5	obj	_	_
14	induced	_	VERB	_	_	13	acl	_	_
15	by	_	ADP	_	_	18	case	_	_
16	the	_	DET	_	_	18	det	_	_
17	demonstration	_	NOUN	_	_	18	nmod	_	_
18	operations	_	NOUN	_	_	14	obl:agent	_	SpaceAfter=No
19	:	_	PUNCT	_	_	22	punct	_	_
20	-	_	PUNCT	_	_	22	punct	_	_
21	Axial	_	ADJ	_	_	22	amod	_	_
22	Force	_	NOUN	_	_	5	parataxis	_	SpaceAfter=No
23	:	_	PUNCT	_	_	22	punct	_	_
24	250	_	NUM	_	_	27	nummod	_	_
25	/	_	SYM	_	_	24	flat	_	Foreign=Yes
26	160	_	NUM	_	_	24	flat	_	Foreign=Yes
27	N	_	NOUN	_	_	22	parataxis	_	_
28	-	_	PUNCT	_	_	30	punct	_	_
29	Radial	_	ADJ	_	_	30	amod	_	_
30	Force	_	NOUN	_	_	22	list	_	SpaceAfter=No
31	:	_	PUNCT	_	_	30	punct	_	_
32	250	_	NUM	_	_	35	nummod	_	_
33	/	_	SYM	_	_	32	flat	_	Foreign=Yes
34	160	_	NUM	_	_	32	flat	_	Foreign=Yes
35	N	_	NOUN	_	_	30	parataxis	_	_
36	-	_	PUNCT	_	_	38	punct	_	_
37	Bending	_	NOUN	_	_	38	compound	_	_
38	Moment	_	NOUN	_	_	22	list	_	SpaceAfter=No
39	:	_	PUNCT	_	_	38	punct	_	_
40	204	_	NUM	_	_	43	nummod	_	_
41	/	_	SYM	_	_	40	flat	_	Foreign=Yes
42	84	_	NUM	_	_	40	flat	_	Foreign=Yes
43	Nm	_	NOUN	_	_	38	parataxis	_	_
44	-	_	PUNCT	_	_	45	punct	_	_
45	Torsion	_	NOUN	_	_	22	list	_	SpaceAfter=No
46	:	_	PUNCT	_	_	45	punct	_	_
47	TBD	_	NUM	_	_	48	nummod	_	_
48	Nm	_	NOUN	_	_	45	parataxis	_	_
49	As	_	ADP	_	_	50	case	_	_
50	function	_	NOUN	_	_	5	obl	_	_
51	of	_	ADP	_	_	54	case	_	_
52	the	_	DET	_	_	54	det	_	_
53	gravity	_	NOUN	_	_	54	nmod	_	_
54	compensation	_	NOUN	_	_	50	nmod	_	_
55	of	_	ADP	_	_	57	case	_	_
56	the	_	DET	_	_	57	det	_	_
57	SM	_	NOUN	_	_	54	nmod	_	_
58	(	_	PUNCT	_	_	59	punct	_	SpaceAfter=No
59	TBC	_	VERB	_	_	50	acl	_	SpaceAfter=No
60	)	_	PUNCT	_	_	59	punct	_	SpaceAfter=No
61	.	_	PUNCT	_	_	5	punct	_	_

# newdoc id = 2000_nasax38_3.2.5.3_3
# sent_id = 15
# text = RAM scrub shall [SRS187] be capable of scrubbing at least 10 megabytes every 8 minutes, given at least 1% of the CPU is available for this processing.
1	RAM	_	NOUN	_	_	2	nmod	_	_
2	scrub	_	NOUN	_	_	8	nsubj	_	_
3	shall	_	AUX	_	_	8	aux	_	_
4	[	_	PUNCT	_	_	5	punct	_	SpaceAfter=No
5	SRS187	_	PROPN	_	_	2	appos	_	SpaceAfter=No
6	]	_	PUNCT	_	_	5	punct	_	_
7	be	_	AUX	_	_	8	cop	_	_
8	capable	_	ADJ	_	_	0	root	_	_
9	of	_	SCONJ	_	_	10	mark	_	_
10	scrubbing	_	VERB	_	_	8	xcomp	_	_
11	at	_	ADV	_	_	13	advmod	_	_
12	least	_	NOUN	_	_	11	fixed	_	_
13	10	_	NUM	_	_	14	nummod	_	_
14	megabytes	_	NOUN	_	_	10	obj	_	_
15	every	_	DET	_	_	17	det	_	_
16	8	_	NUM	_	_	17	nummod	_	_
17	minutes	_	NOUN	_	_	10	obl	_	SpaceAfter=No
18	,	_	PUNCT	_	_	8	punct	_	_
19	given	_	SCONJ	_	_	28	mark	_	_
20	at	_	ADV	_	_	23	advmod	_	_
21	least	_	NOUN	_	_	20	fixed	_	_
22	1	_	NUM	_	_	23	nummod	_	SpaceAfter=No
23	%	_	SYM	_	_	28	nsubj	_	_
24	of	_	ADP	_	_	26	case	_	_
25	the	_	DET	_	_	26	det	_	_
26	CPU	_	NOUN	_	_	23	nmod	_	_
27	is	_	AUX	_	_	28	cop	_	_
28	available	_	ADJ	_	_	8	advcl	_	_
29	for	_	ADP	_	_	31	case	_	_
30	this	_	DET	_	_	31	det	_	_
31	processing	_	NOUN	_	_	28	obl	_	SpaceAfter=No
32	.	_	PUNCT	_	_	8	punct	_	_

# newdoc id = 2007_ertms_3.9.1.1
# sent_id = 197
# text = The ETCS trainborne equipment shall be capable of supervising the following operational states: (M) 1. Full Supervision operation 2. Partial Supervision operation - Staff Responsible operation - On Sight operation - Unfitted Line operation - Train Trip operation - Post Trip operation 3. National operation (STM) 4. Tandem operation 5. Multiple operation 6. Shunting operation 7. Stand By operation 8. Reversing operation
1	The	_	DET	_	_	4	det	_	_
2	ETCS	_	PROPN	_	_	4	nmod	_	_
3	trainborne	_	ADJ	_	_	4	amod	_	_
4	equipment	_	NOUN	_	_	7	nsubj	_	_
5	shall	_	AUX	_	_	7	aux	_	_
6	be	_	AUX	_	_	7	cop	_	_
7	capable	_	ADJ	_	_	0	root	_	_
8	of	_	SCONJ	_	_	9	mark	_	_
9	supervising	_	VERB	_	_	7	xcomp	_	_
10	the	_	DET	_	_	13	det	_	_
11	following	_	ADJ	_	_	13	amod	_	_
12	operational	_	ADJ	_	_	13	amod	_	_
13	states	_	NOUN	_	_	9	obj	_	SpaceAfter=No
14	:	_	PUNCT	_	_	13	punct	_	_
15	(	_	PUNCT	_	_	16	punct	_	SpaceAfter=No
16	M	_	ADJ	_	_	7	advmod	_	SpaceAfter=No
17	)	_	PUNCT	_	_	16	punct	_	_
18	1	_	NUM	_	_	22	nummod	_	SpaceAfter=No
19	.	_	PUNCT	_	_	18	punct	_	_
20	Full	_	ADJ	_	_	21	amod	_	_
21	Supervision	_	NOUN	_	_	22	compound	_	_
22	operation	_	NOUN	_	_	9	parataxis	_	_
23	2	_	NUM	_	_	27	nummod	_	SpaceAfter=No
24	.	_	PUNCT	_	_	23	punct	_	_
25	Partial	_	ADJ	_	_	26	amod	_	_
26	Supervision	_	NOUN	_	_	27	compound	_	_
27	operation	_	NOUN	_	_	22	list	_	_
28	-	_	PUNCT	_	_	31	punct	_	_
29	Staff	_	NOUN	_	_	31	compound	_	_
30	Responsible	_	ADJ	_	_	29	amod	_	_
31	operation	_	NOUN	_	_	27	parataxis	_	_
32	-	_	PUNCT	_	_	35	punct	_	_
33	On	_	ADP	_	_	34	case	_	_
34	Sight	_	NOUN	_	_	35	compound	_	_
35	operation	_	NOUN	_	_	31	list	_	_
36	-	_	PUNCT	_	_	39	punct	_	_
37	Unfitted	_	ADJ	_	_	38	amod	_	_
38	Line	_	NOUN	_	_	39	compound	_	_
39	operation	_	NOUN	_	_	31	list	_	_
40	-	_	PUNCT	_	_	43	punct	_	_
41	Train	_	NOUN	_	_	42	nmod	_	_
42	Trip	_	NOUN	_	_	43	compound	_	_
43	operation	_	NOUN	_	_	31	list	_	_
44	-	_	PUNCT	_	_	47	punct	_	_
45	Post	_	ADV	_	_	46	advmod	_	_
46	Trip	_	NOUN	_	_	47	compound	_	_
47	operation	_	NOUN	_	_	31	list	_	_
48	3	_	NUM	_	_	51	nummod	_	SpaceAfter=No
49	.	_	PUNCT	_	_	48	punct	_	_
50	National	_	ADJ	_	_	51	amod	_	_
51	operation	_	NOUN	_	_	22	list	_	_
52	(	_	PUNCT	_	_	53	punct	_	SpaceAfter=No
53	STM	_	NOUN	_	_	51	appos	_	SpaceAfter=No
54	)	_	PUNCT	_	_	53	punct	_	_
55	4	_	NUM	_	_	58	nummod	_	SpaceAfter=No
56	.	_	PUNCT	_	_	55	punct	_	_
57	Tandem	_	NOUN	_	_	58	compound	_	_
58	operation	_	NOUN	_	_	22	list	_	_
59	5	_	NUM	_	_	62	nummod	_	SpaceAfter=No
60	.	_	PUNCT	_	_	59	punct	_	_
61	Multiple	_	ADJ	_	_	62	amod	_	_
62	operation	_	NOUN	_	_	22	list	_	_
63	6	_	NUM	_	_	66	nummod	_	SpaceAfter=No
64	.	_	PUNCT	_	_	63	punct	_	_
65	Shunting	_	NOUN	_	_	66	compound	_	_
66	operation	_	NOUN	_	_	22	list	_	_
67	7	_	NUM	_	_	71	nummod	_	SpaceAfter=No
68	.	_	PUNCT	_	_	67	punct	_	_
69	Stand	_	ADJ	_	_	71	compound	_	_
70	By	_	X	_	_	69	goeswith	_	_
71	operation	_	NOUN	_	_	22	list	_	_
72	8	_	NUM	_	_	75	nummod	_	SpaceAfter=No
73	.	_	PUNCT	_	_	72	punct	_	_
74	Reversing	_	NOUN	_	_	75	compound	_	_
75	operation	_	NOUN	_	_	22	list	_	_

# newdoc id = 2001_npac_6.4.2_R6-26
# sent_id = 24
# text = Both the SOA to NPAC SMS and the NPAC SMS to Local SMS interfaces shall be available on a 24 by 7 basis, consistent with other availability requirements in this specification.
1	Both	_	CCONJ	_	_	3	cc	_	_
2	the	_	DET	_	_	3	det	_	_
3	SOA	_	NOUN	_	_	14	compound	_	_
4	to	_	ADP	_	_	6	case	_	_
5	NPAC	_	PROPN	_	_	6	nmod	_	_
6	SMS	_	NOUN	_	_	3	nmod	_	_
7	and	_	CCONJ	_	_	10	cc	_	_
8	the	_	DET	_	_	10	det	_	_
9	NPAC	_	PROPN	_	_	10	nmod	_	_
10	SMS	_	NOUN	_	_	3	conj	_	_
11	to	_	ADP	_	_	13	case	_	_
12	Local	_	ADJ	_	_	13	amod	_	_
13	SMS	_	NOUN	_	_	10	nmod	_	_
14	interfaces	_	NOUN	_	_	17	nsubj	_	_
15	shall	_	AUX	_	_	17	aux	_	_
16	be	_	AUX	_	_	17	cop	_	_
17	available	_	ADJ	_	_	0	root	_	_
18	on	_	ADP	_	_	23	case	_	_
19	a	_	DET	_	_	23	det	_	_
20	24	_	NUM	_	_	23	compound	_	_
21	by	_	ADP	_	_	22	case	_	_
22	7	_	NUM	_	_	20	nmod	_	_
23	basis	_	NOUN	_	_	17	obl	_	SpaceAfter=No
24	,	_	PUNCT	_	_	25	punct	_	_
25	consistent	_	ADJ	_	_	17	advmod	_	_
26	with	_	ADP	_	_	29	case	_	_
27	other	_	DET	_	_	29	det	_	_
28	availability	_	NOUN	_	_	29	nmod	_	_
29	requirements	_	NOUN	_	_	25	obl	_	_
30	in	_	ADP	_	_	32	case	_	_
31	this	_	DET	_	_	32	det	_	_
32	specification	_	NOUN	_	_	29	nmod	_	SpaceAfter=No
33	.	_	PUNCT	_	_	17	punct	_	_

# newdoc id = 2000_nasax38_3.2.5.2_5
# sent_id = 116
# text = Continuous BIT shall [SRS095] exercise the presence test at 50 Hz to ensure that all processors in the FCP virtual group are synchronized.
1	Continuous	_	ADJ	_	_	2	amod	_	_
2	BIT	_	NOUN	_	_	7	nsubj	_	_
3	shall	_	AUX	_	_	7	aux	_	_
4	[	_	PUNCT	_	_	5	punct	_	SpaceAfter=No
5	SRS095	_	PROPN	_	_	2	appos	_	SpaceAfter=No
6	]	_	PUNCT	_	_	5	punct	_	_
7	exercise	_	VERB	_	_	0	root	_	_
8	the	_	DET	_	_	10	det	_	_
9	presence	_	NOUN	_	_	10	compound	_	_
10	test	_	NOUN	_	_	7	obj	_	_
11	at	_	ADP	_	_	13	case	_	_
12	50	_	NUM	_	_	13	nummod	_	_
13	Hz	_	NOUN	_	_	7	obl	_	_
14	to	_	PART	_	_	15	mark	_	_
15	ensure	_	VERB	_	_	7	advcl	_	_
16	that	_	SCONJ	_	_	25	mark	_	_
17	all	_	DET	_	_	18	det	_	_
18	processors	_	NOUN	_	_	25	nsubj:pass	_	_
19	in	_	ADP	_	_	23	case	_	_
20	the	_	DET	_	_	23	det	_	_
21	FCP	_	NOUN	_	_	23	nmod	_	_
22	virtual	_	ADJ	_	_	23	amod	_	_
23	group	_	NOUN	_	_	18	nmod	_	_
24	are	_	AUX	_	_	25	aux:pass	_	_
25	synchronized	_	VERB	_	_	15	ccomp	_	SpaceAfter=No
26	.	_	PUNCT	_	_	7	punct	_	_

# newdoc id = 2007_nde_3.7.1
# sent_id = 110
# text = The System shall comply with ESPC (DoC/NOAA/NESDIS) procedures and policies as stated in the NOAA IT Security Manual 212-1300, Version 3.3, dated May 15, 2007.
1	The	_	DET	_	_	2	det	_	_
2	System	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	comply	_	VERB	_	_	0	root	_	_
5	with	_	ADP	_	_	14	case	_	_
6	ESPC	_	PROPN	_	_	14	nmod	_	_
7	(	_	PUNCT	_	_	8	punct	_	SpaceAfter=No
8	DoC	_	PROPN	_	_	6	appos	_	SpaceAfter=No
9	/	_	SYM	_	_	10	cc	_	SpaceAfter=No
10	NOAA	_	PROPN	_	_	8	conj	_	SpaceAfter=No
11	/	_	SYM	_	_	12	cc	_	SpaceAfter=No
12	NESDIS	_	PROPN	_	_	8	conj	_	SpaceAfter=No
13	)	_	PUNCT	_	_	8	punct	_	_
14	procedures	_	NOUN	_	_	4	obl	_	_
15	and	_	CCONJ	_	_	16	cc	_	_
16	policies	_	NOUN	_	_	14	conj	_	_
17	as	_	SCONJ	_	_	18	mark	_	_
18	stated	_	VERB	_	_	4	advcl	_	_
19	in	_	ADP	_	_	24	case	_	_
20	the	_	DET	_	_	24	det	_	_
21	NOAA	_	PROPN	_	_	24	nmod	_	_
22	IT	_	NOUN	_	_	23	compound	_	_
23	Security	_	NOUN	_	_	24	compound	_	_
24	Manual	_	NOUN	_	_	18	obl	_	_
25	212-1300	_	NUM	_	_	24	flat	_	SpaceAfter=No
26	,	_	PUNCT	_	_	27	punct	_	_
27	Version	_	NOUN	_	_	24	nmod	_	_
28	3.3	_	NUM	_	_	27	flat	_	SpaceAfter=No
29	,	_	PUNCT	_	_	30	punct	_	_
30	dated	_	VERB	_	_	27	acl	_	_
31	May	_	NOUN	_	_	30	obl	_	_
32	15	_	NUM	_	_	31	flat	_	SpaceAfter=No
33	,	_	PUNCT	_	_	34	punct	_	_
34	2007	_	NUM	_	_	31	flat	_	SpaceAfter=No
35	.	_	PUNCT	_	_	4	punct	_	_

# newdoc id = 2006_eirenesys15_3.8.3
# sent_id = 202
# text = When the network has detected the 3-digit DTMF sequence “###” transmitted via DTMF from a controller terminal and if the controller was not previously talking it should indicate its recognition by playing a single DTMF grant tone “#” of duration of 100ms ± 5ms to be sent to that controller terminal only. (O)
1	When	_	SCONJ	_	_	5	mark	_	_
2	the	_	DET	_	_	3	det	_	_
3	network	_	NOUN	_	_	5	nsubj	_	_
4	has	_	AUX	_	_	5	aux	_	_
5	detected	_	VERB	_	_	32	advcl	_	_
6	the	_	DET	_	_	11	det	_	_
7	3	_	NUM	_	_	9	nummod	_	SpaceAfter=No
8	-	_	PUNCT	_	_	9	punct	_	SpaceAfter=No
9	digit	_	NOUN	_	_	11	nmod	_	_
10	DTMF	_	PROPN	_	_	11	compound	_	_
11	sequence	_	NOUN	_	_	5	obj	_	_
12	“	_	PUNCT	_	_	13	punct	_	SpaceAfter=No
13	###	_	SYM	_	_	11	appos	_	SpaceAfter=No
14	”	_	PUNCT	_	_	13	punct	_	_
15	transmitted	_	VERB	_	_	11	acl	_	_
16	via	_	ADP	_	_	17	case	_	_
17	DTMF	_	PROPN	_	_	15	obl	_	_
18	from	_	ADP	_	_	21	case	_	_
19	a	_	DET	_	_	21	det	_	_
20	controller	_	NOUN	_	_	21	nmod	_	_
21	terminal	_	NOUN	_	_	15	obl	_	_
22	and	_	CCONJ	_	_	29	cc	_	_
23	if	_	SCONJ	_	_	29	mark	_	_
24	the	_	DET	_	_	25	det	_	_
25	controller	_	NOUN	_	_	29	nsubj	_	_
26	was	_	AUX	_	_	29	aux	_	_
27	not	_	PART	_	_	29	advmod	_	_
28	previously	_	ADV	_	_	29	advmod	_	_
29	talking	_	VERB	_	_	5	conj	_	_
30	it	_	PRON	_	_	32	nsubj	_	_
31	should	_	AUX	_	_	32	aux	_	_
32	indicate	_	VERB	_	_	0	root	_	_
33	its	_	DET	_	_	34	nmod	_	_
34	recognition	_	NOUN	_	_	32	obj	_	_
35	by	_	SCONJ	_	_	36	mark	_	_
36	playing	_	VERB	_	_	32	advcl	_	_
37	a	_	DET	_	_	41	det	_	_
38	single	_	ADJ	_	_	41	amod	_	_
39	DTMF	_	PROPN	_	_	41	compound	_	_
40	grant	_	NOUN	_	_	41	nmod	_	_
41	tone	_	NOUN	_	_	36	obj	_	_
42	“	_	PUNCT	_	_	43	punct	_	SpaceAfter=No
43	#	_	SYM	_	_	41	appos	_	SpaceAfter=No
44	”	_	PUNCT	_	_	43	punct	_	_
45	of	_	ADP	_	_	46	case	_	_
46	duration	_	NOUN	_	_	41	nmod	_	_
47	of	_	ADP	_	_	49	case	_	_
48	100	_	NUM	_	_	49	nummod	_	SpaceAfter=No
49	ms	_	NOUN	_	_	46	nmod	_	_
50	±	_	SYM	_	_	52	cc	_	_
51	5	_	NUM	_	_	52	nummod	_	SpaceAfter=No
52	ms	_	NOUN	_	_	49	conj	_	_
53	to	_	PART	_	_	55	mark	_	_
54	be	_	AUX	_	_	55	aux:pass	_	_
55	sent	_	VERB	_	_	41	acl	_	_
56	to	_	ADP	_	_	59	case	_	_
57	that	_	DET	_	_	59	det	_	_
58	controller	_	NOUN	_	_	59	nmod	_	_
59	terminal	_	NOUN	_	_	55	iobj	_	_
60	only	_	ADV	_	_	55	advmod	_	SpaceAfter=No
61	.	_	PUNCT	_	_	32	punct	_	_
62	(	_	PUNCT	_	_	63	punct	_	SpaceAfter=No
63	O	_	ADJ	_	_	32	advmod	_	SpaceAfter=No
64	)	_	PUNCT	_	_	63	punct	_	_

# newdoc id = 2005_pontis_UC-7_7.7
# sent_id = 193
# text = The system administrator shall be able to configure the recalculation behavior of the derived data.
1	The	_	DET	_	_	3	det	_	_
2	system	_	NOUN	_	_	3	nmod	_	_
3	administrator	_	NOUN	_	_	6	nsubj	_	_
4	shall	_	AUX	_	_	6	aux	_	_
5	be	_	AUX	_	_	6	cop	_	_
6	able	_	ADJ	_	_	0	root	_	_
7	to	_	PART	_	_	8	mark	_	_
8	configure	_	VERB	_	_	6	xcomp	_	_
9	the	_	DET	_	_	11	det	_	_
10	recalculation	_	NOUN	_	_	11	nmod	_	_
11	behavior	_	NOUN	_	_	8	obj	_	_
12	of	_	ADP	_	_	15	case	_	_
13	the	_	DET	_	_	15	det	_	_
14	derived	_	ADJ	_	_	15	amod	_	_
15	data	_	NOUN	_	_	11	nmod	_	SpaceAfter=No
16	.	_	PUNCT	_	_	6	punct	_	_

# sent_id = 194
# text = The options shall include 1) do nothing, 2) alert user that recalculation is required and give option to recalculate before update/save, and 3) recalculate silently with no confirmation prompt when user saves the inspection.
1	The	_	DET	_	_	2	det	_	_
2	options	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	include	_	VERB	_	_	0	root	_	_
5	1	_	NUM	_	_	7	nummod	_	SpaceAfter=No
6	)	_	PUNCT	_	_	5	punct	_	_
7	do	_	VERB	_	_	4	parataxis	_	_
8	nothing	_	PRON	_	_	7	obj	_	SpaceAfter=No
9	,	_	PUNCT	_	_	12	punct	_	_
10	2	_	NUM	_	_	12	nummod	_	SpaceAfter=No
11	)	_	PUNCT	_	_	10	punct	_	_
12	alert	_	VERB	_	_	7	conj	_	_
13	user	_	NOUN	_	_	12	obj	_	_
14	that	_	SCONJ	_	_	17	mark	_	_
15	recalculation	_	NOUN	_	_	17	nsubj:pass	_	_
16	is	_	AUX	_	_	17	aux:pass	_	_
17	required	_	VERB	_	_	13	ccomp	_	_
18	and	_	CCONJ	_	_	19	cc	_	_
19	give	_	VERB	_	_	12	conj	_	_
20	option	_	NOUN	_	_	19	obj	_	_
21	to	_	PART	_	_	22	mark	_	_
22	recalculate	_	VERB	_	_	20	acl	_	_
23	before	_	ADP	_	_	24	case	_	_
24	update	_	NOUN	_	_	22	obl	_	SpaceAfter=No
25	/	_	SYM	_	_	26	cc	_	SpaceAfter=No
26	save	_	NOUN	_	_	24	conj	_	SpaceAfter=No
27	,	_	PUNCT	_	_	31	punct	_	_
28	and	_	CCONJ	_	_	31	cc	_	_
29	3	_	NUM	_	_	31	nummod	_	SpaceAfter=No
30	)	_	PUNCT	_	_	29	punct	_	_
31	recalculate	_	VERB	_	_	7	conj	_	_
32	silently	_	ADV	_	_	31	advmod	_	_
33	with	_	ADP	_	_	36	case	_	_
34	no	_	DET	_	_	36	det	_	_
35	confirmation	_	NOUN	_	_	36	compound	_	_
36	prompt	_	NOUN	_	_	31	obl	_	_
37	when	_	SCONJ	_	_	39	mark	_	_
38	user	_	NOUN	_	_	39	nsubj	_	_
39	saves	_	VERB	_	_	31	advcl	_	_
40	the	_	DET	_	_	41	det	_	_
41	inspection	_	NOUN	_	_	39	obj	_	SpaceAfter=No
42	.	_	PUNCT	_	_	4	punct	_	_

# newdoc id = 2010_home1.3_4.2.1.2
# sent_id = 59
# text = A DH user shall be able to set the thermostat temperatures to between 60 ° F and 80 ° F, inclusive, at one degree increments.
1	A	_	DET	_	_	3	det	_	_
2	DH	_	PROPN	_	_	3	nmod	_	_
3	user	_	NOUN	_	_	6	nsubj	_	_
4	shall	_	AUX	_	_	6	aux	_	_
5	be	_	AUX	_	_	6	cop	_	_
6	able	_	ADJ	_	_	0	root	_	_
7	to	_	PART	_	_	8	mark	_	_
8	set	_	VERB	_	_	6	xcomp	_	_
9	the	_	DET	_	_	11	det	_	_
10	thermostat	_	NOUN	_	_	11	nmod	_	_
11	temperatures	_	NOUN	_	_	8	obj	_	_
12	to	_	ADP	_	_	15	case	_	_
13	between	_	ADP	_	_	15	case	_	_
14	60	_	NUM	_	_	15	nummod	_	_
15	°	_	SYM	_	_	8	iobj	_	_
16	F	_	PROPN	_	_	15	compound	_	_
17	and	_	CCONJ	_	_	19	cc	_	_
18	80	_	NUM	_	_	19	nummod	_	_
19	°	_	SYM	_	_	15	conj	_	_
20	F	_	PROPN	_	_	19	compound	_	SpaceAfter=No
21	,	_	PUNCT	_	_	22	punct	_	_
22	inclusive	_	ADJ	_	_	19	amod	_	SpaceAfter=No
23	,	_	PUNCT	_	_	27	punct	_	_
24	at	_	ADP	_	_	27	case	_	_
25	one	_	NUM	_	_	26	nummod	_	_
26	degree	_	NOUN	_	_	27	compound	_	_
27	increments	_	NOUN	_	_	8	obl	_	SpaceAfter=No
28	.	_	PUNCT	_	_	6	punct	_	_

# newdoc id = 2007_wateruse_4.1.1_EW11b
# sent_id = 273
# text = Track the movement of lapsed quantities in an area, including: • Which permit and well obtained the lapsed quantities. • Where the lapsed quantities are located. • Why the quantities are lapsed (i.e. expired, cancelled, retired). • What MFL zone the lapsed quantities are in.
1	Track	_	VERB	_	_	0	root	_	_
2	the	_	DET	_	_	3	det	_	_
3	movement	_	NOUN	_	_	1	obj	_	_
4	of	_	ADP	_	_	6	case	_	_
5	lapsed	_	ADJ	_	_	6	amod	_	_
6	quantities	_	NOUN	_	_	3	nmod	_	_
7	in	_	ADP	_	_	9	case	_	_
8	an	_	DET	_	_	9	det	_	_
9	area	_	NOUN	_	_	3	nmod	_	SpaceAfter=No
10	,	_	PUNCT	_	_	11	punct	_	_
11	including	_	VERB	_	_	18	mark	_	SpaceAfter=No
12	:	_	PUNCT	_	_	18	punct	_	_
13	•	_	PUNCT	_	_	18	punct	_	_
14	Which	_	DET	_	_	15	det	_	_
15	permit	_	NOUN	_	_	18	nsubj	_	_
16	and	_	CCONJ	_	_	17	cc	_	_
17	well	_	NOUN	_	_	15	conj	_	_
18	obtained	_	VERB	_	_	3	acl	_	_
19	the	_	DET	_	_	21	det	_	_
20	lapsed	_	ADJ	_	_	21	amod	_	_
21	quantities	_	NOUN	_	_	18	obj	_	SpaceAfter=No
22	.	_	PUNCT	_	_	18	punct	_	_
23	•	_	PUNCT	_	_	29	punct	_	_
24	Where	_	ADV	_	_	29	advmod	_	_
25	the	_	DET	_	_	27	det	_	_
26	lapsed	_	ADJ	_	_	27	amod	_	_
27	quantities	_	NOUN	_	_	29	nsubj	_	_
28	are	_	AUX	_	_	29	cop	_	_
29	located	_	VERB	_	_	18	list	_	SpaceAfter=No
30	.	_	PUNCT	_	_	29	punct	_	_
31	•	_	PUNCT	_	_	36	punct	_	_
32	Why	_	ADV	_	_	36	nsubj	_	_
33	the	_	DET	_	_	34	det	_	_
34	quantities	_	NOUN	_	_	36	nsubj:outer	_	_
35	are	_	AUX	_	_	36	cop	_	_
36	lapsed	_	ADJ	_	_	18	list	_	_
37	(	_	PUNCT	_	_	39	punct	_	SpaceAfter=No
38	i.e.	_	ADV	_	_	39	parataxis	_	_
39	expired	_	ADJ	_	_	36	parataxis	_	SpaceAfter=No
40	,	_	PUNCT	_	_	41	punct	_	_
41	cancelled	_	ADJ	_	_	39	conj	_	SpaceAfter=No
42	,	_	PUNCT	_	_	43	punct	_	_
43	retired	_	ADJ	_	_	39	conj	_	SpaceAfter=No
44	)	_	PUNCT	_	_	39	punct	_	SpaceAfter=No
45	.	_	PUNCT	_	_	36	punct	_	_
46	•	_	PUNCT	_	_	49	punct	_	_
47	What	_	DET	_	_	49	det	_	_
48	MFL	_	NOUN	_	_	49	nmod	_	_
49	zone	_	NOUN	_	_	18	list	_	_
50	the	_	DET	_	_	52	det	_	_
51	lapsed	_	ADJ	_	_	52	amod	_	_
52	quantities	_	NOUN	_	_	49	nsubj	_	_
53	are	_	AUX	_	_	49	cop	_	_
54	in	_	ADP	_	_	49	case	_	SpaceAfter=No
55	.	_	PUNCT	_	_	49	punct	_	_

# newdoc id = 2000_nasax38_3.2.5.2_9
# sent_id = 70
# text = Continuous BIT shall [SRS098] report all diagnosed failures and recovery actions to the application for incorporation in the telemetry stream.
1	Continuous	_	ADJ	_	_	2	amod	_	_
2	BIT	_	NOUN	_	_	7	nsubj	_	_
3	shall	_	AUX	_	_	7	aux	_	_
4	[	_	PUNCT	_	_	5	punct	_	SpaceAfter=No
5	SRS098	_	PROPN	_	_	2	appos	_	SpaceAfter=No
6	]	_	PUNCT	_	_	5	punct	_	_
7	report	_	VERB	_	_	0	root	_	_
8	all	_	DET	_	_	10	det	_	_
9	diagnosed	_	ADJ	_	_	10	amod	_	_
10	failures	_	NOUN	_	_	7	obj	_	_
11	and	_	CCONJ	_	_	13	cc	_	_
12	recovery	_	NOUN	_	_	13	compound	_	_
13	actions	_	NOUN	_	_	10	conj	_	_
14	to	_	ADP	_	_	16	case	_	_
15	the	_	DET	_	_	16	det	_	_
16	application	_	NOUN	_	_	7	obl	_	_
17	for	_	ADP	_	_	18	case	_	_
18	incorporation	_	NOUN	_	_	7	obl	_	_
19	in	_	ADP	_	_	22	case	_	_
20	the	_	DET	_	_	22	det	_	_
21	telemetry	_	NOUN	_	_	22	nmod	_	_
22	stream	_	NOUN	_	_	18	nmod	_	SpaceAfter=No
23	.	_	PUNCT	_	_	7	punct	_	_

# newdoc id = 2006_eirenesys15_3.2.2
# sent_id = 147
# text = The following minimum values shall apply: (M) - coverage probability of 95% based on a coverage level of 38.5 dBmV/m (-98 dBm) for voice and non-safety critical data; - coverage probability of 95% based on a coverage level of 41.5 dBmV/m (-95 dBm) on lines with ETCS levels 2/3 for speeds lower than or equal to 220km/h.
1	The	_	DET	_	_	4	det	_	_
2	following	_	ADJ	_	_	4	amod	_	_
3	minimum	_	ADJ	_	_	4	amod	_	_
4	values	_	NOUN	_	_	6	nsubj	_	_
5	shall	_	AUX	_	_	6	aux	_	_
6	apply	_	VERB	_	_	0	root	_	SpaceAfter=No
7	:	_	PUNCT	_	_	6	punct	_	_
8	(	_	PUNCT	_	_	9	punct	_	SpaceAfter=No
9	M	_	ADJ	_	_	6	advmod	_	SpaceAfter=No
10	)	_	PUNCT	_	_	9	punct	_	_
11	-	_	PUNCT	_	_	13	punct	_	_
12	coverage	_	NOUN	_	_	13	compound	_	_
13	probability	_	NOUN	_	_	6	parataxis	_	_
14	of	_	ADP	_	_	16	case	_	_
15	95	_	NUM	_	_	16	nummod	_	SpaceAfter=No
16	%	_	SYM	_	_	13	nmod	_	_
17	based	_	VERB	_	_	13	acl	_	_
18	on	_	ADP	_	_	21	case	_	_
19	a	_	DET	_	_	21	det	_	_
20	coverage	_	NOUN	_	_	21	compound	_	_
21	level	_	NOUN	_	_	17	obl	_	_
22	of	_	ADP	_	_	24	case	_	_
23	38.5	_	NUM	_	_	24	nummod	_	_
24	dBmV	_	NOUN	_	_	21	nmod	_	SpaceAfter=No
25	/	_	SYM	_	_	26	case	_	SpaceAfter=No
26	m	_	NOUN	_	_	24	nmod	_	_
27	(	_	PUNCT	_	_	29	punct	_	SpaceAfter=No
28	-98	_	NUM	_	_	29	nummod	_	_
29	dBm	_	NOUN	_	_	24	appos	_	SpaceAfter=No
30	)	_	PUNCT	_	_	29	punct	_	_
31	for	_	ADP	_	_	32	case	_	_
32	voice	_	NOUN	_	_	21	nmod	_	_
33	and	_	CCONJ	_	_	38	cc	_	_
34	non	_	ADV	_	_	37	advmod	_	SpaceAfter=No
35	-	_	PUNCT	_	_	36	punct	_	SpaceAfter=No
36	safety	_	NOUN	_	_	37	obl	_	_
37	critical	_	ADJ	_	_	38	amod	_	_
38	data	_	NOUN	_	_	32	conj	_	SpaceAfter=No
39	;	_	PUNCT	_	_	42	punct	_	_
40	-	_	PUNCT	_	_	42	punct	_	_
41	coverage	_	NOUN	_	_	42	compound	_	_
42	probability	_	NOUN	_	_	13	list	_	_
43	of	_	ADP	_	_	45	case	_	_
44	95	_	NUM	_	_	45	nummod	_	SpaceAfter=No
45	%	_	SYM	_	_	42	nmod	_	_
46	based	_	VERB	_	_	42	acl	_	_
47	on	_	ADP	_	_	50	case	_	_
48	a	_	DET	_	_	50	det	_	_
49	coverage	_	NOUN	_	_	50	compound	_	_
50	level	_	NOUN	_	_	46	obl	_	_
51	of	_	ADP	_	_	53	case	_	_
52	41.5	_	NUM	_	_	53	nummod	_	_
53	dBmV	_	NOUN	_	_	50	nmod	_	SpaceAfter=No
54	/	_	SYM	_	_	55	case	_	SpaceAfter=No
55	m	_	NOUN	_	_	53	nmod	_	_
56	(	_	PUNCT	_	_	58	punct	_	SpaceAfter=No
57	-95	_	NUM	_	_	58	nummod	_	_
58	dBm	_	NOUN	_	_	53	appos	_	SpaceAfter=No
59	)	_	PUNCT	_	_	58	punct	_	_
60	on	_	ADP	_	_	61	case	_	_
61	lines	_	NOUN	_	_	50	nmod	_	_
62	with	_	ADP	_	_	64	case	_	_
63	ETCS	_	PROPN	_	_	64	nmod	_	_
64	levels	_	NOUN	_	_	61	nmod	_	_
65	2	_	NUM	_	_	64	flat	_	SpaceAfter=No
66	/	_	SYM	_	_	67	cc	_	SpaceAfter=No
67	3	_	NUM	_	_	65	conj	_	_
68	for	_	ADP	_	_	69	case	_	_
69	speeds	_	NOUN	_	_	42	nmod	_	_
70	lower	_	ADJ	_	_	76	advmod	_	_
71	than	_	SCONJ	_	_	70	fixed	_	_
72	or	_	CCONJ	_	_	73	cc	_	_
73	equal	_	ADJ	_	_	70	conj	_	_
74	to	_	ADP	_	_	73	fixed	_	_
75	220	_	NUM	_	_	76	nummod	_	SpaceAfter=No
76	km	_	NOUN	_	_	69	nmod	_	SpaceAfter=No
77	/	_	SYM	_	_	78	case	_	SpaceAfter=No
78	h	_	NOUN	_	_	76	nmod	_	SpaceAfter=No
79	.	_	PUNCT	_	_	6	punct	_	_

# newdoc id = 2001_hats_3.1.3.1_SRSreq42
# sent_id = 38
# text = If the HATS-GUI attempts to start a HATS-SML program and fails, the HATS-GUI shall notify the user by displaying the following message: “Unable to start HATS-SML.”
1	If	_	SCONJ	_	_	6	mark	_	_
2	the	_	DET	_	_	5	det	_	_
3	HATS	_	PROPN	_	_	5	nmod	_	SpaceAfter=No
4	-	_	PUNCT	_	_	5	punct	_	SpaceAfter=No
5	GUI	_	NOUN	_	_	6	nsubj	_	_
6	attempts	_	VERB	_	_	22	advcl	_	_
7	to	_	PART	_	_	8	mark	_	_
8	start	_	VERB	_	_	6	xcomp	_	_
9	a	_	DET	_	_	13	det	_	_
10	HATS	_	PROPN	_	_	12	nmod	_	SpaceAfter=No
11	-	_	PUNCT	_	_	12	punct	_	SpaceAfter=No
12	SML	_	NOUN	_	_	13	nmod	_	_
13	program	_	NOUN	_	_	8	obj	_	_
14	and	_	CCONJ	_	_	15	cc	_	_
15	fails	_	VERB	_	_	6	conj	_	SpaceAfter=No
16	,	_	PUNCT	_	_	6	punct	_	_
17	the	_	DET	_	_	20	det	_	_
18	HATS	_	PROPN	_	_	20	nmod	_	SpaceAfter=No
19	-	_	PUNCT	_	_	20	punct	_	SpaceAfter=No
20	GUI	_	NOUN	_	_	22	nsubj	_	_
21	shall	_	AUX	_	_	22	aux	_	_
22	notify	_	VERB	_	_	0	root	_	_
23	the	_	DET	_	_	24	det	_	_
24	user	_	NOUN	_	_	22	obj	_	_
25	by	_	SCONJ	_	_	26	mark	_	_
26	displaying	_	VERB	_	_	22	advcl	_	_
27	the	_	DET	_	_	29	det	_	_
28	following	_	ADJ	_	_	29	amod	_	_
29	message	_	NOUN	_	_	26	obj	_	SpaceAfter=No
30	:	_	PUNCT	_	_	26	punct	_	_
31	“	_	PUNCT	_	_	32	punct	_	SpaceAfter=No
32	Unable	_	ADJ	_	_	26	parataxis	_	_
33	to	_	PART	_	_	34	mark	_	_
34	start	_	VERB	_	_	32	xcomp	_	_
35	HATS	_	PROPN	_	_	37	nmod	_	SpaceAfter=No
36	-	_	PUNCT	_	_	37	punct	_	SpaceAfter=No
37	SML	_	NOUN	_	_	34	obj	_	SpaceAfter=No
38	.	_	PUNCT	_	_	37	punct	_	SpaceAfter=No
39	”	_	PUNCT	_	_	38	punct	_	_

# sent_id = 39
# text = The HATS-GUI shall provide any other details related to the failure that are available from the Host OS.
1	The	_	DET	_	_	4	det	_	_
2	HATS	_	PROPN	_	_	4	nmod	_	SpaceAfter=No
3	-	_	PUNCT	_	_	4	punct	_	SpaceAfter=No
4	GUI	_	NOUN	_	_	6	nsubj	_	_
5	shall	_	AUX	_	_	6	aux	_	_
6	provide	_	VERB	_	_	0	root	_	_
7	any	_	DET	_	_	9	det	_	_
8	other	_	ADJ	_	_	9	amod	_	_
9	details	_	NOUN	_	_	6	obj	_	_
10	related	_	VERB	_	_	9	acl	_	_
11	to	_	ADP	_	_	13	case	_	_
12	the	_	DET	_	_	13	det	_	_
13	failure	_	NOUN	_	_	10	obl	_	_
14	that	_	PRON	_	_	16	nsubj	_	_
15	are	_	AUX	_	_	16	cop	_	_
16	available	_	ADJ	_	_	9	acl:relcl	_	_
17	from	_	ADP	_	_	20	case	_	_
18	the	_	DET	_	_	20	det	_	_
19	Host	_	NOUN	_	_	20	compound	_	_
20	OS	_	NOUN	_	_	16	obl	_	SpaceAfter=No
21	.	_	PUNCT	_	_	6	punct	_	_

# sent_id = 40
# text = Examples of information available from an operating system include indications that a specified file does ot exist, that a file cannot be opened due to file protection violations, or that errors occurred during I/O operations.
1	Examples	_	NOUN	_	_	9	nsubj	_	_
2	of	_	ADP	_	_	3	case	_	_
3	information	_	NOUN	_	_	1	nmod	_	_
4	available	_	ADJ	_	_	3	acl	_	_
5	from	_	ADP	_	_	8	case	_	_
6	an	_	DET	_	_	8	det	_	_
7	operating	_	NOUN	_	_	8	compound	_	_
8	system	_	NOUN	_	_	4	obl	_	_
9	include	_	VERB	_	_	0	root	_	_
10	indications	_	NOUN	_	_	9	obj	_	_
11	that	_	SCONJ	_	_	17	mark	_	_
12	a	_	DET	_	_	14	det	_	_
13	specified	_	ADJ	_	_	14	amod	_	_
14	file	_	NOUN	_	_	17	nsubj	_	_
15	does	_	AUX	_	_	17	aux	_	_
16	ot	_	PART	_	_	17	advmod	_	_
17	exist	_	VERB	_	_	10	acl	_	SpaceAfter=No
18	,	_	PUNCT	_	_	25	punct	_	_
19	that	_	SCONJ	_	_	25	mark	_	_
20	a	_	DET	_	_	21	det	_	_
21	file	_	NOUN	_	_	25	nsubj:pass	_	_
22	can	_	AUX	_	_	25	aux	_	SpaceAfter=No
23	not	_	PART	_	_	25	advmod	_	_
24	be	_	AUX	_	_	25	aux:pass	_	_
25	opened	_	VERB	_	_	17	conj	_	_
26	due	_	ADP	_	_	30	case	_	_
27	to	_	ADP	_	_	26	fixed	_	_
28	file	_	NOUN	_	_	29	compound	_	_
29	protection	_	NOUN	_	_	30	nmod	_	_
30	violations	_	NOUN	_	_	25	obl	_	SpaceAfter=No
31	,	_	PUNCT	_	_	35	punct	_	_
32	or	_	CCONJ	_	_	35	cc	_	_
33	that	_	SCONJ	_	_	35	mark	_	_
34	errors	_	NOUN	_	_	35	nsubj	_	_
35	occurred	_	VERB	_	_	17	conj	_	_
36	during	_	ADP	_	_	40	case	_	_
37	I	_	NOUN	_	_	40	nmod	_	SpaceAfter=No
38	/	_	SYM	_	_	39	cc	_	SpaceAfter=No
39	O	_	NOUN	_	_	37	conj	_	_
40	operations	_	NOUN	_	_	35	obl	_	SpaceAfter=No
41	.	_	PUNCT	_	_	9	punct	_	_

# newdoc id = 2000_nasax38_3.2.6.1_2
# sent_id = 81
# text = If an FCR is diagnosed as faulty during Startup, Redundancy Management shall [SRS102] exclude the FCP in the faulty channel from the initial FCP virtual group configuration.
1	If	_	SCONJ	_	_	5	mark	_	_
2	an	_	DET	_	_	3	det	_	_
3	FCR	_	NOUN	_	_	5	nsubj:pass	_	_
4	is	_	AUX	_	_	5	aux:pass	_	_
5	diagnosed	_	VERB	_	_	17	advcl	_	_
6	as	_	ADP	_	_	7	case	_	_
7	faulty	_	ADJ	_	_	5	obl	_	_
8	during	_	ADP	_	_	9	case	_	_
9	Startup	_	NOUN	_	_	5	obl	_	SpaceAfter=No
10	,	_	PUNCT	_	_	5	punct	_	_
11	Redundancy	_	NOUN	_	_	12	compound	_	_
12	Management	_	NOUN	_	_	17	nsubj	_	_
13	shall	_	AUX	_	_	17	aux	_	_
14	[	_	PUNCT	_	_	15	punct	_	SpaceAfter=No
15	SRS102	_	PROPN	_	_	12	appos	_	SpaceAfter=No
16	]	_	PUNCT	_	_	15	punct	_	_
17	exclude	_	VERB	_	_	0	root	_	_
18	the	_	DET	_	_	19	det	_	_
19	FCP	_	NOUN	_	_	17	obj	_	_
20	in	_	ADP	_	_	23	case	_	_
21	the	_	DET	_	_	23	det	_	_
22	faulty	_	ADJ	_	_	23	amod	_	_
23	channel	_	NOUN	_	_	19	nmod	_	_
24	from	_	ADP	_	_	30	case	_	_
25	the	_	DET	_	_	30	det	_	_
26	initial	_	ADJ	_	_	30	amod	_	_
27	FCP	_	NOUN	_	_	29	nmod	_	_
28	virtual	_	ADJ	_	_	29	amod	_	_
29	group	_	NOUN	_	_	30	nmod	_	_
30	configuration	_	NOUN	_	_	17	obl	_	SpaceAfter=No
31	.	_	PUNCT	_	_	17	punct	_	_

# newdoc id = 1998_ALQ-172_3.2.3.3.1
# sent_id = 85
# text = Organizational maintenance consists of fault detection & isolation, faulty component removal & replacement, and system checkout.
1	Organizational	_	ADJ	_	_	2	amod	_	_
2	maintenance	_	NOUN	_	_	3	nsubj	_	_
3	consists	_	VERB	_	_	0	root	_	_
4	of	_	ADP	_	_	6	case	_	_
5	fault	_	NOUN	_	_	6	compound	_	_
6	detection	_	NOUN	_	_	3	obl	_	_
7	&	_	SYM	_	_	8	cc	_	_
8	isolation	_	NOUN	_	_	6	conj	_	SpaceAfter=No
9	,	_	PUNCT	_	_	12	punct	_	_
10	faulty	_	ADJ	_	_	11	amod	_	_
11	component	_	NOUN	_	_	12	nmod	_	_
12	removal	_	NOUN	_	_	6	conj	_	_
13	&	_	SYM	_	_	14	cc	_	_
14	replacement	_	NOUN	_	_	12	conj	_	SpaceAfter=No
15	,	_	PUNCT	_	_	18	punct	_	_
16	and	_	CCONJ	_	_	18	cc	_	_
17	system	_	NOUN	_	_	18	nmod	_	_
18	checkout	_	NOUN	_	_	12	conj	_	SpaceAfter=No
19	.	_	PUNCT	_	_	3	punct	_	_

# sent_id = 86
# text = Maintenance personnel shall use Built in Test (BIT) to facilitate LBJ maintenance and verify equipment condition and operability.
1	Maintenance	_	NOUN	_	_	2	compound	_	_
2	personnel	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	use	_	VERB	_	_	0	root	_	_
5	Built	_	VERB	_	_	7	acl	_	_
6	in	_	ADP	_	_	5	compound	_	_
7	Test	_	NOUN	_	_	4	obj	_	_
8	(	_	PUNCT	_	_	9	punct	_	SpaceAfter=No
9	BIT	_	NOUN	_	_	7	appos	_	SpaceAfter=No
10	)	_	PUNCT	_	_	9	punct	_	_
11	to	_	PART	_	_	12	mark	_	_
12	facilitate	_	VERB	_	_	4	xcomp	_	_
13	LBJ	_	NOUN	_	_	14	nmod	_	_
14	maintenance	_	NOUN	_	_	12	obj	_	_
15	and	_	CCONJ	_	_	16	cc	_	_
16	verify	_	VERB	_	_	12	conj	_	_
17	equipment	_	NOUN	_	_	18	nmod	_	_
18	condition	_	NOUN	_	_	16	obj	_	_
19	and	_	CCONJ	_	_	20	cc	_	_
20	operability	_	NOUN	_	_	18	conj	_	SpaceAfter=No
21	.	_	PUNCT	_	_	4	punct	_	_

# sent_id = 87
# text = Adjustments and alignments shall not be required after LRU replacement.
1	Adjustments	_	NOUN	_	_	7	nsubj:pass	_	_
2	and	_	CCONJ	_	_	3	cc	_	_
3	alignments	_	NOUN	_	_	1	conj	_	_
4	shall	_	AUX	_	_	7	aux	_	_
5	not	_	PART	_	_	7	advmod	_	_
6	be	_	AUX	_	_	7	aux:pass	_	_
7	required	_	VERB	_	_	0	root	_	_
8	after	_	ADP	_	_	10	case	_	_
9	LRU	_	NOUN	_	_	10	nmod	_	_
10	replacement	_	NOUN	_	_	7	obl	_	SpaceAfter=No
11	.	_	PUNCT	_	_	7	punct	_	_

# sent_id = 88
# text = The equipment installation shall be designed to permit modular replacement without removal of adjacent modules.
1	The	_	DET	_	_	3	det	_	_
2	equipment	_	NOUN	_	_	3	nmod	_	_
3	installation	_	NOUN	_	_	6	nsubj:pass	_	_
4	shall	_	AUX	_	_	6	aux	_	_
5	be	_	AUX	_	_	6	aux:pass	_	_
6	designed	_	VERB	_	_	0	root	_	_
7	to	_	PART	_	_	8	mark	_	_
8	permit	_	VERB	_	_	6	xcomp	_	_
9	modular	_	ADJ	_	_	10	amod	_	_
10	replacement	_	NOUN	_	_	8	obj	_	_
11	without	_	ADP	_	_	12	case	_	_
12	removal	_	NOUN	_	_	8	obl	_	_
13	of	_	ADP	_	_	15	case	_	_
14	adjacent	_	ADJ	_	_	15	amod	_	_
15	modules	_	NOUN	_	_	12	nmod	_	SpaceAfter=No
16	.	_	PUNCT	_	_	6	punct	_	_

# sent_id = 89
# text = The integrated aircraft system installation shall not interfere with removal/replacement of other aircraft systems.
1	The	_	DET	_	_	4	det	_	_
2	integrated	_	ADJ	_	_	4	amod	_	_
3	aircraft	_	NOUN	_	_	4	compound	_	_
4	system	_	NOUN	_	_	5	nmod	_	_
5	installation	_	NOUN	_	_	8	nsubj	_	_
6	shall	_	AUX	_	_	8	aux	_	_
7	not	_	PART	_	_	8	advmod	_	_
8	interfere	_	VERB	_	_	0	root	_	_
9	with	_	ADP	_	_	10	case	_	_
10	removal	_	NOUN	_	_	8	obl	_	SpaceAfter=No
11	/	_	SYM	_	_	12	cc	_	SpaceAfter=No
12	replacement	_	NOUN	_	_	10	conj	_	_
13	of	_	ADP	_	_	16	case	_	_
14	other	_	ADJ	_	_	16	amod	_	_
15	aircraft	_	NOUN	_	_	16	nmod	_	_
16	systems	_	NOUN	_	_	10	nmod	_	SpaceAfter=No
17	.	_	PUNCT	_	_	8	punct	_	_

# newdoc id = 2000_nasax38_3.2.5.2_1
# sent_id = 74
# text = Continuous BIT, in conjunction with Redundancy Management and Scheduler operations running in the 50 Hz rategroup after the application tasks, shall [SRS091] take less than 2 milliseconds under nominal no-fault conditions.
1	Continuous	_	ADJ	_	_	2	amod	_	_
2	BIT	_	NOUN	_	_	27	nsubj	_	SpaceAfter=No
3	,	_	PUNCT	_	_	5	punct	_	_
4	in	_	ADP	_	_	5	case	_	_
5	conjunction	_	NOUN	_	_	2	nmod	_	_
6	with	_	ADP	_	_	8	case	_	_
7	Redundancy	_	NOUN	_	_	8	compound	_	_
8	Management	_	NOUN	_	_	5	nmod	_	_
9	and	_	CCONJ	_	_	11	cc	_	_
10	Scheduler	_	NOUN	_	_	11	nmod	_	_
11	operations	_	NOUN	_	_	8	conj	_	_
12	running	_	VERB	_	_	11	acl	_	_
13	in	_	ADP	_	_	17	case	_	_
14	the	_	DET	_	_	17	det	_	_
15	50	_	NUM	_	_	16	nummod	_	_
16	Hz	_	NOUN	_	_	17	compound	_	_
17	rategroup	_	NOUN	_	_	12	obl	_	_
18	after	_	ADP	_	_	21	case	_	_
19	the	_	DET	_	_	21	det	_	_
20	application	_	NOUN	_	_	21	nmod	_	_
21	tasks	_	NOUN	_	_	12	obl	_	SpaceAfter=No
22	,	_	PUNCT	_	_	5	punct	_	_
23	shall	_	AUX	_	_	27	aux	_	_
24	[	_	PUNCT	_	_	25	punct	_	SpaceAfter=No
25	SRS091	_	PROPN	_	_	2	appos	_	SpaceAfter=No
26	]	_	PUNCT	_	_	25	punct	_	_
27	take	_	VERB	_	_	0	root	_	_
28	less	_	ADV	_	_	30	advmod	_	_
29	than	_	SCONJ	_	_	28	fixed	_	_
30	2	_	NUM	_	_	31	nummod	_	_
31	milliseconds	_	NOUN	_	_	27	obj	_	_
32	under	_	ADP	_	_	37	case	_	_
33	nominal	_	ADJ	_	_	37	amod	_	_
34	no	_	DET	_	_	36	det	_	SpaceAfter=No
35	-	_	PUNCT	_	_	36	punct	_	SpaceAfter=No
36	fault	_	NOUN	_	_	37	amod	_	_
37	conditions	_	NOUN	_	_	27	obl	_	SpaceAfter=No
38	.	_	PUNCT	_	_	27	punct	_	_

# newdoc id = 2001_npac_5.1.2.2.1.1_R5-16
# sent_id = 67
# text = NPAC SMS shall accept the following optional fields from NPAC personnel or the new Service Provider upon Subscription Version creation for an Inter-Service Provider port: - Billing Service Provider ID - End User Location - Value - End User Location - Type
1	NPAC	_	PROPN	_	_	2	nmod	_	_
2	SMS	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	accept	_	VERB	_	_	0	root	_	_
5	the	_	DET	_	_	8	det	_	_
6	following	_	ADJ	_	_	8	amod	_	_
7	optional	_	ADJ	_	_	8	amod	_	_
8	fields	_	NOUN	_	_	4	obj	_	_
9	from	_	ADP	_	_	11	case	_	_
10	NPAC	_	PROPN	_	_	11	nmod	_	_
11	personnel	_	NOUN	_	_	4	obl	_	_
12	or	_	CCONJ	_	_	16	cc	_	_
13	the	_	DET	_	_	16	det	_	_
14	new	_	ADJ	_	_	16	amod	_	_
15	Service	_	NOUN	_	_	16	compound	_	_
16	Provider	_	NOUN	_	_	11	conj	_	_
17	upon	_	ADP	_	_	20	case	_	_
18	Subscription	_	NOUN	_	_	19	nmod	_	_
19	Version	_	NOUN	_	_	20	nmod	_	_
20	creation	_	NOUN	_	_	4	obl	_	_
21	for	_	ADP	_	_	27	case	_	_
22	an	_	DET	_	_	27	det	_	_
23	Inter	_	ADV	_	_	25	advmod	_	SpaceAfter=No
24	-	_	PUNCT	_	_	25	punct	_	SpaceAfter=No
25	Service	_	NOUN	_	_	26	compound	_	_
26	Provider	_	NOUN	_	_	27	compound	_	_
27	port	_	NOUN	_	_	20	nmod	_	SpaceAfter=No
28	:	_	PUNCT	_	_	33	punct	_	_
29	-	_	PUNCT	_	_	33	punct	_	_
30	Billing	_	ADJ	_	_	32	amod	_	_
31	Service	_	NOUN	_	_	32	compound	_	_
32	Provider	_	NOUN	_	_	33	nmod	_	_
33	ID	_	NOUN	_	_	4	parataxis	_	_
34	-	_	PUNCT	_	_	37	punct	_	_
35	End	_	NOUN	_	_	36	compound	_	_
36	User	_	NOUN	_	_	37	nmod	_	_
37	Location	_	NOUN	_	_	33	list	_	_
38	-	_	PUNCT	_	_	39	punct	_	_
39	Value	_	NOUN	_	_	37	parataxis	_	_
40	-	_	PUNCT	_	_	43	punct	_	_
41	End	_	NOUN	_	_	42	compound	_	_
42	User	_	NOUN	_	_	43	nmod	_	_
43	Location	_	NOUN	_	_	33	list	_	_
44	-	_	PUNCT	_	_	45	punct	_	_
45	Type	_	NOUN	_	_	43	parataxis	_	_

# newdoc id = 2007_wateruse_4.1.1.1_SR33
# sent_id = 144
# text = Report compliance on a permit (not wells).
1	Report	_	VERB	_	_	0	root	_	_
2	compliance	_	NOUN	_	_	1	obj	_	_
3	on	_	ADP	_	_	5	case	_	_
4	a	_	DET	_	_	5	det	_	_
5	permit	_	NOUN	_	_	2	nmod	_	_
6	(	_	PUNCT	_	_	8	punct	_	SpaceAfter=No
7	not	_	PART	_	_	8	advmod	_	_
8	wells	_	NOUN	_	_	5	appos	_	SpaceAfter=No
9	)	_	PUNCT	_	_	8	punct	_	SpaceAfter=No
10	.	_	PUNCT	_	_	1	punct	_	_

# sent_id = 145
# text = Crop reports on permits (not wells).
1	Crop	_	NOUN	_	_	2	nmod	_	_
2	reports	_	NOUN	_	_	0	root	_	_
3	on	_	ADP	_	_	4	case	_	_
4	permits	_	NOUN	_	_	2	nmod	_	_
5	(	_	PUNCT	_	_	7	punct	_	SpaceAfter=No
6	not	_	PART	_	_	7	advmod	_	_
7	wells	_	NOUN	_	_	4	appos	_	SpaceAfter=No
8	)	_	PUNCT	_	_	7	punct	_	SpaceAfter=No
9	.	_	PUNCT	_	_	2	punct	_	_

# newdoc id = 2001_esa_3.8_APAF-DR-07
# sent_id = 136
# text = How the ASPERA-3 and MEX OA data and exactly what data sets are to be distributed to each Co-I shall be determined by the needs and resources available six months prior to MEX launch.
1	How	_	ADV	_	_	13	advmod	_	_
2	the	_	DET	_	_	3	det	_	_
3	ASPERA-3	_	PROPN	_	_	7	nmod	_	_
4	and	_	CCONJ	_	_	6	cc	_	_
5	MEX	_	PROPN	_	_	6	nmod	_	_
6	OA	_	NOUN	_	_	3	conj	_	_
7	data	_	NOUN	_	_	13	nsubj	_	_
8	and	_	CCONJ	_	_	12	cc	_	_
9	exactly	_	ADV	_	_	12	advmod	_	_
10	what	_	DET	_	_	12	det	_	_
11	data	_	NOUN	_	_	12	nmod	_	_
12	sets	_	NOUN	_	_	7	conj	_	_
13	are	_	AUX	_	_	22	csubj:pass	_	_
14	to	_	PART	_	_	16	mark	_	_
15	be	_	AUX	_	_	16	aux:pass	_	_
16	distributed	_	VERB	_	_	13	xcomp	_	_
17	to	_	ADP	_	_	19	case	_	_
18	each	_	DET	_	_	19	det	_	_
19	Co-I	_	NOUN	_	_	16	obl	_	_
20	shall	_	AUX	_	_	22	aux	_	_
21	be	_	AUX	_	_	22	aux:pass	_	_
22	determined	_	VERB	_	_	0	root	_	_
23	by	_	ADP	_	_	25	case	_	_
24	the	_	DET	_	_	25	det	_	_
25	needs	_	NOUN	_	_	22	obl	_	_
26	and	_	CCONJ	_	_	27	cc	_	_
27	resources	_	NOUN	_	_	25	conj	_	_
28	available	_	ADJ	_	_	25	amod	_	_
29	six	_	NUM	_	_	30	nummod	_	_
30	months	_	NOUN	_	_	22	obl	_	_
31	prior	_	ADP	_	_	34	case	_	_
32	to	_	ADP	_	_	31	fixed	_	_
33	MEX	_	PROPN	_	_	34	nmod	_	_
34	launch	_	NOUN	_	_	30	nmod	_	SpaceAfter=No
35	.	_	PUNCT	_	_	22	punct	_	_

# sent_id = 137
# text = The distribution mechanisms shall be clearly defined/described in the APAF Operation Procedures Document.
1	The	_	DET	_	_	3	det	_	_
2	distribution	_	NOUN	_	_	3	nmod	_	_
3	mechanisms	_	NOUN	_	_	7	nsubj:pass	_	_
4	shall	_	AUX	_	_	7	aux	_	_
5	be	_	AUX	_	_	7	aux:pass	_	_
6	clearly	_	ADV	_	_	7	advmod	_	_
7	defined	_	VERB	_	_	0	root	_	SpaceAfter=No
8	/	_	SYM	_	_	9	cc	_	SpaceAfter=No
9	described	_	VERB	_	_	7	conj	_	_
10	in	_	ADP	_	_	15	case	_	_
11	the	_	DET	_	_	15	det	_	_
12	APAF	_	PROPN	_	_	14	nmod	_	_
13	Operation	_	NOUN	_	_	14	compound	_	_
14	Procedures	_	NOUN	_	_	15	compound	_	_
15	Document	_	NOUN	_	_	7	obl	_	SpaceAfter=No
16	.	_	PUNCT	_	_	7	punct	_	_

# newdoc id = 2001_hats_3.3.2.1_SRSreq163
# sent_id = 182
# text = The user shall not be required to log in or authenticate his/her identity when using the system.
1	The	_	DET	_	_	2	det	_	_
2	user	_	NOUN	_	_	6	nsubj:pass	_	_
3	shall	_	AUX	_	_	6	aux	_	_
4	not	_	PART	_	_	6	advmod	_	_
5	be	_	AUX	_	_	6	aux:pass	_	_
6	required	_	VERB	_	_	0	root	_	_
7	to	_	PART	_	_	8	mark	_	_
8	log	_	VERB	_	_	6	xcomp	_	_
9	in	_	ADP	_	_	8	compound	_	_
10	or	_	CCONJ	_	_	11	cc	_	_
11	authenticate	_	VERB	_	_	8	conj	_	_
12	his	_	DET	_	_	15	nmod	_	SpaceAfter=No
13	/	_	SYM	_	_	14	cc	_	SpaceAfter=No
14	her	_	DET	_	_	12	conj	_	_
15	identity	_	NOUN	_	_	11	obj	_	_
16	when	_	SCONJ	_	_	17	mark	_	_
17	using	_	VERB	_	_	8	advcl	_	_
18	the	_	DET	_	_	19	det	_	_
19	system	_	NOUN	_	_	17	obj	_	SpaceAfter=No
20	.	_	PUNCT	_	_	6	punct	_	_

# newdoc id = 2001_npac_4.1.3.2.1_R4-27
# sent_id = 153
# text = NPAC SMS shall receive the Service Provider ID, a request to view subscription data, and optionally the subscription data status types to be returned (e.g., active only, active or pending) for queries regarding subscription data for a specific Service Provider.
1	NPAC	_	PROPN	_	_	2	nmod	_	_
2	SMS	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	receive	_	VERB	_	_	0	root	_	_
5	the	_	DET	_	_	8	det	_	_
6	Service	_	NOUN	_	_	7	compound	_	_
7	Provider	_	NOUN	_	_	8	nmod	_	_
8	ID	_	NOUN	_	_	4	obj	_	SpaceAfter=No
9	,	_	PUNCT	_	_	11	punct	_	_
10	a	_	DET	_	_	11	det	_	_
11	request	_	NOUN	_	_	8	conj	_	_
12	to	_	PART	_	_	13	mark	_	_
13	view	_	VERB	_	_	11	acl	_	_
14	subscription	_	NOUN	_	_	15	nmod	_	_
15	data	_	NOUN	_	_	13	obj	_	SpaceAfter=No
16	,	_	PUNCT	_	_	15	punct	_	_
17	and	_	CCONJ	_	_	23	cc	_	_
18	optionally	_	ADV	_	_	4	advmod	_	_
19	the	_	DET	_	_	23	det	_	_
20	subscription	_	NOUN	_	_	21	nmod	_	_
21	data	_	NOUN	_	_	22	nmod	_	_
22	status	_	NOUN	_	_	23	nmod	_	_
23	types	_	NOUN	_	_	8	conj	_	_
24	to	_	PART	_	_	26	mark	_	_
25	be	_	AUX	_	_	26	aux:pass	_	_
26	returned	_	VERB	_	_	23	acl	_	_
27	(	_	PUNCT	_	_	30	punct	_	SpaceAfter=No
28	e.g.	_	ADV	_	_	30	parataxis	_	SpaceAfter=No
29	,	_	PUNCT	_	_	28	punct	_	_
30	active	_	ADJ	_	_	23	appos	_	_
31	only	_	ADV	_	_	30	advmod	_	SpaceAfter=No
32	,	_	PUNCT	_	_	33	punct	_	_
33	active	_	ADJ	_	_	30	conj	_	_
34	or	_	CCONJ	_	_	35	cc	_	_
35	pending	_	ADJ	_	_	30	conj	_	SpaceAfter=No
36	)	_	PUNCT	_	_	30	punct	_	_
37	for	_	ADP	_	_	38	case	_	_
38	queries	_	NOUN	_	_	4	obl	_	_
39	regarding	_	ADP	_	_	41	case	_	_
40	subscription	_	NOUN	_	_	41	nmod	_	_
41	data	_	NOUN	_	_	38	nmod	_	_
42	for	_	ADP	_	_	46	case	_	_
43	a	_	DET	_	_	46	det	_	_
44	specific	_	ADJ	_	_	46	amod	_	_
45	Service	_	NOUN	_	_	46	compound	_	_
46	Provider	_	NOUN	_	_	41	nmod	_	SpaceAfter=No
47	.	_	PUNCT	_	_	4	punct	_	_

# newdoc id = 2000_nasax38_3.2.5.3_1
# sent_id = 21
# text = RAM scrub shall [SRS043] actively trigger the EDAC function by cyclically reading (and writing back if an error is found) all used RAM.
1	RAM	_	NOUN	_	_	2	nmod	_	_
2	scrub	_	NOUN	_	_	8	nsubj	_	_
3	shall	_	AUX	_	_	8	aux	_	_
4	[	_	PUNCT	_	_	5	punct	_	SpaceAfter=No
5	SRS043	_	PROPN	_	_	2	appos	_	SpaceAfter=No
6	]	_	PUNCT	_	_	5	punct	_	_
7	actively	_	ADV	_	_	8	advmod	_	_
8	trigger	_	VERB	_	_	0	root	_	_
9	the	_	DET	_	_	11	det	_	_
10	EDAC	_	NOUN	_	_	11	nmod	_	_
11	function	_	NOUN	_	_	8	obj	_	_
12	by	_	SCONJ	_	_	14	mark	_	_
13	cyclically	_	ADV	_	_	14	advmod	_	_
14	reading	_	VERB	_	_	8	advcl	_	_
15	(	_	PUNCT	_	_	17	punct	_	SpaceAfter=No
16	and	_	CCONJ	_	_	17	cc	_	_
17	writing	_	VERB	_	_	14	conj	_	_
18	back	_	ADV	_	_	17	advmod	_	_
19	if	_	SCONJ	_	_	23	mark	_	_
20	an	_	DET	_	_	21	det	_	_
21	error	_	NOUN	_	_	23	nsubj:pass	_	_
22	is	_	AUX	_	_	23	aux:pass	_	_
23	found	_	VERB	_	_	17	advcl	_	SpaceAfter=No
24	)	_	PUNCT	_	_	17	punct	_	_
25	all	_	DET	_	_	27	det	_	_
26	used	_	ADJ	_	_	27	amod	_	_
27	RAM	_	NOUN	_	_	14	obj	_	SpaceAfter=No
28	.	_	PUNCT	_	_	8	punct	_	_

# newdoc id = 2005_phin_2.2.1.3
# sent_id = 12
# text = Systems supporting OM must have the capability to capture data about locations involved in an OM investigation, including: name (if applicable), type (e.g., floor, building, room, store), street address, city, state, zip code, country, GPS coordinates, and other specific details (e.g., a specific building on a campus, a business branch location, a local chapter’s meeting hall)
1	Systems	_	NOUN	_	_	5	nsubj	_	_
2	supporting	_	VERB	_	_	1	acl	_	_
3	OM	_	PROPN	_	_	2	obj	_	_
4	must	_	AUX	_	_	5	aux	_	_
5	have	_	VERB	_	_	0	root	_	_
6	the	_	DET	_	_	7	det	_	_
7	capability	_	NOUN	_	_	5	obj	_	_
8	to	_	PART	_	_	9	mark	_	_
9	capture	_	VERB	_	_	7	acl	_	_
10	data	_	NOUN	_	_	9	obj	_	_
11	about	_	ADP	_	_	12	case	_	_
12	locations	_	NOUN	_	_	10	nmod	_	_
13	involved	_	VERB	_	_	12	acl	_	_
14	in	_	ADP	_	_	17	case	_	_
15	an	_	DET	_	_	17	det	_	_
16	OM	_	PROPN	_	_	17	nmod	_	_
17	investigation	_	NOUN	_	_	13	obl	_	SpaceAfter=No
18	,	_	PUNCT	_	_	19	punct	_	_
19	including	_	ADP	_	_	21	case	_	SpaceAfter=No
20	:	_	PUNCT	_	_	21	punct	_	_
21	name	_	NOUN	_	_	10	nmod	_	_
22	(	_	PUNCT	_	_	24	punct	_	SpaceAfter=No
23	if	_	SCONJ	_	_	24	mark	_	_
24	applicable	_	ADJ	_	_	21	acl	_	SpaceAfter=No
25	)	_	PUNCT	_	_	24	punct	_	SpaceAfter=No
26	,	_	PUNCT	_	_	27	punct	_	_
27	type	_	NOUN	_	_	21	conj	_	_
28	(	_	PUNCT	_	_	31	punct	_	SpaceAfter=No
29	e.g.	_	ADV	_	_	31	parataxis	_	SpaceAfter=No
30	,	_	PUNCT	_	_	29	punct	_	_
31	floor	_	NOUN	_	_	27	appos	_	SpaceAfter=No
32	,	_	PUNCT	_	_	33	punct	_	_
33	building	_	NOUN	_	_	31	conj	_	SpaceAfter=No
34	,	_	PUNCT	_	_	35	punct	_	_
35	room	_	NOUN	_	_	31	conj	_	SpaceAfter=No
36	,	_	PUNCT	_	_	37	punct	_	_
37	store	_	NOUN	_	_	31	conj	_	SpaceAfter=No
38	)	_	PUNCT	_	_	31	punct	_	SpaceAfter=No
39	,	_	PUNCT	_	_	41	punct	_	_
40	street	_	NOUN	_	_	41	compound	_	_
41	address	_	NOUN	_	_	21	conj	_	SpaceAfter=No
42	,	_	PUNCT	_	_	43	punct	_	_
43	city	_	NOUN	_	_	21	conj	_	SpaceAfter=No
44	,	_	PUNCT	_	_	45	punct	_	_
45	state	_	NOUN	_	_	21	conj	_	SpaceAfter=No
46	,	_	PUNCT	_	_	48	punct	_	_
47	zip	_	PROPN	_	_	48	compound	_	_
48	code	_	NOUN	_	_	21	conj	_	SpaceAfter=No
49	,	_	PUNCT	_	_	50	punct	_	_
50	country	_	NOUN	_	_	21	conj	_	SpaceAfter=No
51	,	_	PUNCT	_	_	53	punct	_	_
52	GPS	_	PROPN	_	_	53	compound	_	_
53	coordinates	_	NOUN	_	_	21	conj	_	SpaceAfter=No
54	,	_	PUNCT	_	_	58	punct	_	_
55	and	_	CCONJ	_	_	58	cc	_	_
56	other	_	DET	_	_	58	det	_	_
57	specific	_	ADJ	_	_	58	amod	_	_
58	details	_	NOUN	_	_	21	conj	_	_
59	(	_	PUNCT	_	_	64	punct	_	SpaceAfter=No
60	e.g.	_	ADV	_	_	64	parataxis	_	SpaceAfter=No
61	,	_	PUNCT	_	_	60	punct	_	_
62	a	_	DET	_	_	64	det	_	_
63	specific	_	ADJ	_	_	64	amod	_	_
64	building	_	NOUN	_	_	58	appos	_	_
65	on	_	ADP	_	_	67	case	_	_
66	a	_	DET	_	_	67	det	_	_
67	campus	_	NOUN	_	_	64	nmod	_	SpaceAfter=No
68	,	_	PUNCT	_	_	72	punct	_	_
69	a	_	DET	_	_	72	det	_	_
70	business	_	NOUN	_	_	71	nmod	_	_
71	branch	_	NOUN	_	_	72	nmod	_	_
72	location	_	NOUN	_	_	64	conj	_	SpaceAfter=No
73	,	_	PUNCT	_	_	79	punct	_	_
74	a	_	DET	_	_	79	det	_	_
75	local	_	ADJ	_	_	79	amod	_	_
76	chapter	_	NOUN	_	_	79	nmod	_	SpaceAfter=No
77	’s	_	PART	_	_	76	case	_	_
78	meeting	_	VERB	_	_	79	compound	_	_
79	hall	_	NOUN	_	_	64	conj	_	SpaceAfter=No
80	)	_	PUNCT	_	_	64	punct	_	_

# newdoc id = 2019_MOSAR_2.2.4_IntR_S303
# sent_id = 235
# text = The ground segment shall know at any moment the status of the different modules of the modular spacecraft.
1	The	_	DET	_	_	3	det	_	_
2	ground	_	NOUN	_	_	3	compound	_	_
3	segment	_	NOUN	_	_	5	nsubj	_	_
4	shall	_	AUX	_	_	5	aux	_	_
5	know	_	VERB	_	_	0	root	_	_
6	at	_	ADP	_	_	8	case	_	_
7	any	_	DET	_	_	8	det	_	_
8	moment	_	NOUN	_	_	5	obl	_	_
9	the	_	DET	_	_	10	det	_	_
10	status	_	NOUN	_	_	5	obj	_	_
11	of	_	ADP	_	_	14	case	_	_
12	the	_	DET	_	_	14	det	_	_
13	different	_	ADJ	_	_	14	amod	_	_
14	modules	_	NOUN	_	_	10	nmod	_	_
15	of	_	ADP	_	_	18	case	_	_
16	the	_	DET	_	_	18	det	_	_
17	modular	_	ADJ	_	_	18	amod	_	_
18	spacecraft	_	NOUN	_	_	14	nmod	_	SpaceAfter=No
19	.	_	PUNCT	_	_	5	punct	_	_

# sent_id = 236
# text = This information is passed through two types of telemetries: - Periodic telemetry with standardized packets. - Asynchronous telemetry with error message.
1	This	_	DET	_	_	2	det	_	_
2	information	_	NOUN	_	_	4	nsubj:pass	_	_
3	is	_	AUX	_	_	4	aux:pass	_	_
4	passed	_	VERB	_	_	0	root	_	_
5	through	_	ADP	_	_	7	case	_	_
6	two	_	NUM	_	_	7	nummod	_	_
7	types	_	NOUN	_	_	4	obl	_	_
8	of	_	ADP	_	_	9	case	_	_
9	telemetries	_	NOUN	_	_	7	nmod	_	SpaceAfter=No
10	:	_	PUNCT	_	_	13	punct	_	_
11	-	_	PUNCT	_	_	13	punct	_	_
12	Periodic	_	ADJ	_	_	13	amod	_	_
13	telemetry	_	NOUN	_	_	4	parataxis	_	_
14	with	_	ADP	_	_	16	case	_	_
15	standardized	_	ADJ	_	_	16	amod	_	_
16	packets	_	NOUN	_	_	13	nmod	_	SpaceAfter=No
17	.	_	PUNCT	_	_	13	punct	_	_
18	-	_	PUNCT	_	_	20	punct	_	_
19	Asynchronous	_	ADJ	_	_	20	amod	_	_
20	telemetry	_	NOUN	_	_	13	list	_	_
21	with	_	ADP	_	_	23	case	_	_
22	error	_	NOUN	_	_	23	compound	_	_
23	message	_	NOUN	_	_	20	nmod	_	SpaceAfter=No
24	.	_	PUNCT	_	_	20	punct	_	_

# newdoc id = 2002_evlaback_3.2.2.23
# sent_id = 213
# text = Monitor Compute Errors – The BE shall trap, flag and repair inf’s, NaN’s, underflows, overflows and other computation errors.
1	Monitor	_	VERB	_	_	0	root	_	_
2	Compute	_	VERB	_	_	3	nmod	_	_
3	Errors	_	NOUN	_	_	1	obj	_	_
4	–	_	PUNCT	_	_	1	punct	_	_
5	The	_	DET	_	_	6	det	_	_
6	BE	_	NOUN	_	_	8	nsubj	_	_
7	shall	_	AUX	_	_	8	aux	_	_
8	trap	_	VERB	_	_	1	parataxis	_	SpaceAfter=No
9	,	_	PUNCT	_	_	10	punct	_	_
10	flag	_	VERB	_	_	8	conj	_	_
11	and	_	CCONJ	_	_	12	cc	_	_
12	repair	_	VERB	_	_	8	conj	_	_
13	inf’s	_	NOUN	_	_	8	obj	_	SpaceAfter=No
14	,	_	PUNCT	_	_	15	punct	_	_
15	NaN’s	_	NOUN	_	_	13	conj	_	SpaceAfter=No
16	,	_	PUNCT	_	_	17	punct	_	_
17	underflows	_	NOUN	_	_	13	conj	_	SpaceAfter=No
18	,	_	PUNCT	_	_	19	punct	_	_
19	overflows	_	NOUN	_	_	13	conj	_	_
20	and	_	CCONJ	_	_	23	cc	_	_
21	other	_	ADJ	_	_	23	amod	_	_
22	computation	_	NOUN	_	_	23	nmod	_	_
23	errors	_	NOUN	_	_	13	conj	_	SpaceAfter=No
24	.	_	PUNCT	_	_	1	punct	_	_

# sent_id = 214
# text = Accumulate computation error statistics and compare against tolerances.
1	Accumulate	_	VERB	_	_	0	root	_	_
2	computation	_	NOUN	_	_	3	nmod	_	_
3	error	_	NOUN	_	_	4	nmod	_	_
4	statistics	_	NOUN	_	_	1	obj	_	_
5	and	_	CCONJ	_	_	6	cc	_	_
6	compare	_	VERB	_	_	1	conj	_	_
7	against	_	ADP	_	_	8	case	_	_
8	tolerances	_	NOUN	_	_	6	obl	_	SpaceAfter=No
9	.	_	PUNCT	_	_	1	punct	_	_

# sent_id = 215
# text = Report all out of tolerance conditions.
1	Report	_	VERB	_	_	0	root	_	_
2	all	_	PRON	_	_	6	det	_	_
3	out	_	ADV	_	_	5	case	_	_
4	of	_	ADP	_	_	3	fixed	_	_
5	tolerance	_	NOUN	_	_	6	nmod	_	_
6	conditions	_	NOUN	_	_	1	obj	_	SpaceAfter=No
7	.	_	PUNCT	_	_	1	punct	_	_

# newdoc id = 2002_evlaback_3.3.2.1
# sent_id = 100
# text = Input – The BE System shall be capable of accepting an aggregate data input stream from the Correlator of a minimum of 1.6 Gbytes/sec.
1	Input	_	NOUN	_	_	0	root	_	_
2	–	_	PUNCT	_	_	1	punct	_	_
3	The	_	DET	_	_	5	det	_	_
4	BE	_	NOUN	_	_	5	nmod	_	_
5	System	_	NOUN	_	_	8	nsubj	_	_
6	shall	_	AUX	_	_	8	aux	_	_
7	be	_	AUX	_	_	8	cop	_	_
8	capable	_	ADJ	_	_	1	parataxis	_	_
9	of	_	SCONJ	_	_	10	case	_	_
10	accepting	_	VERB	_	_	8	xcomp	_	_
11	an	_	DET	_	_	15	det	_	_
12	aggregate	_	ADJ	_	_	13	amod	_	_
13	data	_	NOUN	_	_	15	nmod	_	_
14	input	_	NOUN	_	_	15	compound	_	_
15	stream	_	NOUN	_	_	10	obj	_	_
16	from	_	ADP	_	_	18	case	_	_
17	the	_	DET	_	_	18	det	_	_
18	Correlator	_	NOUN	_	_	10	obl	_	_
19	of	_	ADP	_	_	21	case	_	_
20	a	_	DET	_	_	21	det	_	_
21	minimum	_	NOUN	_	_	15	nmod	_	_
22	of	_	ADP	_	_	24	case	_	_
23	1.6	_	NUM	_	_	24	nummod	_	_
24	Gbytes	_	NOUN	_	_	21	nmod	_	SpaceAfter=No
25	/	_	SYM	_	_	26	case	_	SpaceAfter=No
26	sec	_	NOUN	_	_	24	nmod	_	SpaceAfter=No
27	.	_	PUNCT	_	_	1	punct	_	_

# sent_id = 101
# text = This must be done simultaneously with the output stream, but not necessarily over the same interconnects.
1	This	_	PRON	_	_	4	nsubj:pass	_	_
2	must	_	AUX	_	_	4	aux	_	_
3	be	_	AUX	_	_	4	aux:pass	_	_
4	done	_	VERB	_	_	0	root	_	_
5	simultaneously	_	ADV	_	_	4	advmod	_	_
6	with	_	ADP	_	_	9	case	_	_
7	the	_	DET	_	_	9	det	_	_
8	output	_	NOUN	_	_	9	compound	_	_
9	stream	_	NOUN	_	_	4	obl	_	SpaceAfter=No
10	,	_	PUNCT	_	_	9	punct	_	_
11	but	_	CCONJ	_	_	17	cc	_	_
12	not	_	PART	_	_	13	advmod	_	_
13	necessarily	_	ADV	_	_	4	advmod	_	_
14	over	_	ADP	_	_	17	case	_	_
15	the	_	DET	_	_	17	det	_	_
16	same	_	ADJ	_	_	17	amod	_	_
17	interconnects	_	NOUN	_	_	9	conj	_	SpaceAfter=No
18	.	_	PUNCT	_	_	4	punct	_	_

# sent_id = 102
# text = This is an initial deployment specification and will be increased over time.
1	This	_	PRON	_	_	6	nsubj	_	_
2	is	_	AUX	_	_	6	cop	_	_
3	an	_	DET	_	_	6	det	_	_
4	initial	_	ADJ	_	_	5	amod	_	_
5	deployment	_	NOUN	_	_	6	nmod	_	_
6	specification	_	NOUN	_	_	0	root	_	_
7	and	_	CCONJ	_	_	10	cc	_	_
8	will	_	AUX	_	_	10	aux	_	_
9	be	_	AUX	_	_	10	aux:pass	_	_
10	increased	_	VERB	_	_	6	conj	_	_
11	over	_	ADP	_	_	12	case	_	_
12	time	_	NOUN	_	_	10	obl	_	SpaceAfter=No
13	.	_	PUNCT	_	_	6	punct	_	_

# newdoc id = 2007_wateruse_4.1.2_SR10
# sent_id = 170
# text = Report the per capita daily water figures for the permitted amount, reported amount and adjusted number for per utility.
1	Report	_	VERB	_	_	0	root	_	_
2	the	_	DET	_	_	7	det	_	_
3	per	_	X	_	_	7	amod	_	_
4	capita	_	X	_	_	3	flat	_	Foreign=Yes
5	daily	_	ADJ	_	_	7	amod	_	_
6	water	_	NOUN	_	_	7	compound	_	_
7	figures	_	NOUN	_	_	1	obj	_	_
8	for	_	ADP	_	_	11	case	_	_
9	the	_	DET	_	_	11	det	_	_
10	permitted	_	ADJ	_	_	11	amod	_	_
11	amount	_	NOUN	_	_	7	nmod	_	SpaceAfter=No
12	,	_	PUNCT	_	_	14	punct	_	_
13	reported	_	ADJ	_	_	14	amod	_	_
14	amount	_	NOUN	_	_	11	conj	_	_
15	and	_	CCONJ	_	_	17	cc	_	_
16	adjusted	_	ADJ	_	_	17	amod	_	_
17	number	_	NOUN	_	_	11	conj	_	_
18	for	_	ADP	_	_	19	reparandum	_	_
19	per	_	ADP	_	_	20	case	_	_
20	utility	_	NOUN	_	_	11	nmod	_	SpaceAfter=No
21	.	_	PUNCT	_	_	1	punct	_	_

# sent_id = 171
# text = The formula for adjusted gross capita is: WD + IM - EX -TL - SU - EM / Population where: WD = ground water & surface water withdrawals IM = water imported/bought from another supplier EX = Water exported/sold to other suppliers TL = treatment loss (typically R/O or sand filtration SU = Significant uses EM = Environmental mitigation, if required as a District permit condition. Population = Functional population
1	The	_	DET	_	_	2	det	_	_
2	formula	_	NOUN	_	_	9	nsubj	_	_
3	for	_	ADP	_	_	6	case	_	_
4	adjusted	_	ADJ	_	_	6	amod	_	_
5	gross	_	ADJ	_	_	6	amod	_	_
6	capita	_	NOUN	_	_	2	nmod	_	_
7	is	_	AUX	_	_	9	cop	_	SpaceAfter=No
8	:	_	PUNCT	_	_	7	punct	_	_
9	WD	_	NOUN	_	_	0	root	_	_
10	+	_	SYM	_	_	9	flat	_	Foreign=Yes
11	IM	_	NOUN	_	_	9	flat	_	Foreign=Yes
12	-	_	SYM	_	_	9	flat	_	Foreign=Yes
13	EX	_	NOUN	_	_	9	flat	_	Foreign=Yes
14	-	_	SYM	_	_	9	flat	_	SpaceAfter=No|Foreign=Yes
15	TL	_	NOUN	_	_	9	flat	_	Foreign=Yes
16	-	_	SYM	_	_	9	flat	_	Foreign=Yes
17	SU	_	NOUN	_	_	9	flat	_	Foreign=Yes
18	-	_	SYM	_	_	9	flat	_	Foreign=Yes
19	EM	_	NOUN	_	_	9	flat	_	Foreign=Yes
20	/	_	SYM	_	_	9	flat	_	Foreign=Yes
21	Population	_	NOUN	_	_	9	flat	_	Foreign=Yes
22	where	_	SCONJ	_	_	25	mark	_	SpaceAfter=No
23	:	_	PUNCT	_	_	25	punct	_	_
24	WD	_	NOUN	_	_	25	nsubj	_	_
25	=	_	SYM	_	_	9	advcl	_	_
26	ground	_	NOUN	_	_	31	nmod	_	_
27	water	_	X	_	_	26	goeswith	_	_
28	&	_	CCONJ	_	_	30	cc	_	_
29	surface	_	NOUN	_	_	30	compound	_	_
30	water	_	NOUN	_	_	26	conj	_	_
31	withdrawals	_	NOUN	_	_	25	obj	_	_
32	IM	_	NOUN	_	_	33	nsubj	_	_
33	=	_	SYM	_	_	25	list	_	_
34	water	_	NOUN	_	_	33	obj	_	_
35	imported	_	VERB	_	_	34	acl	_	SpaceAfter=No
36	/	_	SYM	_	_	37	cc	_	SpaceAfter=No
37	bought	_	VERB	_	_	35	conj	_	_
38	from	_	ADP	_	_	40	case	_	_
39	another	_	ADJ	_	_	40	amod	_	_
40	supplier	_	NOUN	_	_	35	obl	_	_
41	EX	_	NOUN	_	_	42	nsubj	_	_
42	=	_	SYM	_	_	25	list	_	_
43	Water	_	NOUN	_	_	42	obj	_	_
44	exported	_	VERB	_	_	43	acl	_	SpaceAfter=No
45	/	_	SYM	_	_	46	cc	_	SpaceAfter=No
46	sold	_	VERB	_	_	44	conj	_	_
47	to	_	ADP	_	_	49	case	_	_
48	other	_	ADJ	_	_	49	amod	_	_
49	suppliers	_	NOUN	_	_	44	iobj	_	_
50	TL	_	NOUN	_	_	51	nsubj	_	_
51	=	_	SYM	_	_	25	list	_	_
52	treatment	_	NOUN	_	_	53	compound	_	_
53	loss	_	NOUN	_	_	51	obj	_	_
54	(	_	PUNCT	_	_	56	punct	_	SpaceAfter=No
55	typically	_	ADV	_	_	56	advmod	_	_
56	R/O	_	NOUN	_	_	53	appos	_	_
57	or	_	CCONJ	_	_	59	cc	_	_
58	sand	_	NOUN	_	_	59	compound	_	_
59	filtration	_	NOUN	_	_	56	conj	_	_
60	SU	_	NOUN	_	_	61	nsubj	_	_
61	=	_	SYM	_	_	25	list	_	_
62	Significant	_	ADJ	_	_	63	amod	_	_
63	uses	_	NOUN	_	_	61	obj	_	_
64	EM	_	NOUN	_	_	65	nsubj	_	_
65	=	_	SYM	_	_	25	list	_	_
66	Environmental	_	ADJ	_	_	67	amod	_	_
67	mitigation	_	NOUN	_	_	65	obj	_	SpaceAfter=No
68	,	_	PUNCT	_	_	70	punct	_	_
69	if	_	SCONJ	_	_	70	mark	_	_
70	required	_	VERB	_	_	67	acl	_	_
71	as	_	ADP	_	_	75	case	_	_
72	a	_	DET	_	_	75	det	_	_
73	District	_	NOUN	_	_	74	compound	_	_
74	permit	_	NOUN	_	_	75	nmod	_	_
75	condition	_	NOUN	_	_	70	obl	_	SpaceAfter=No
76	.	_	PUNCT	_	_	65	punct	_	_
77	Population	_	NOUN	_	_	78	nsubj	_	_
78	=	_	SYM	_	_	25	list	_	_
79	Functional	_	ADJ	_	_	80	amod	_	_
80	population	_	NOUN	_	_	78	obj	_	_

# newdoc id = 2001_npac_4.1.2.1_R4-10
# sent_id = 33
# text = NPAC SMS shall notify NPAC personnel upon successful creation of the new Service Provider.
1	NPAC	_	PROPN	_	_	2	nmod	_	_
2	SMS	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	notify	_	VERB	_	_	0	root	_	_
5	NPAC	_	PROPN	_	_	6	nmod	_	_
6	personnel	_	NOUN	_	_	4	obj	_	_
7	upon	_	ADP	_	_	9	case	_	_
8	successful	_	ADJ	_	_	9	amod	_	_
9	creation	_	NOUN	_	_	4	obl	_	_
10	of	_	ADP	_	_	14	case	_	_
11	the	_	DET	_	_	14	det	_	_
12	new	_	ADJ	_	_	14	amod	_	_
13	Service	_	NOUN	_	_	14	compound	_	_
14	Provider	_	NOUN	_	_	9	nmod	_	SpaceAfter=No
15	.	_	PUNCT	_	_	4	punct	_	_

# newdoc id = 2000_nasax38_3.2.6.2_14
# sent_id = 132
# text = Redundancy Management shall [SRS208], within 60 milliseconds after 1.5 minutes has elapsed since the voted reset was sent to the failed channel, if the voted reset fails to recover the failed channel and alignment is still allowed, request from the application a power cycle of the channel.
1	Redundancy	_	NOUN	_	_	2	compound	_	_
2	Management	_	NOUN	_	_	43	nsubj	_	_
3	shall	_	AUX	_	_	43	aux	_	_
4	[	_	PUNCT	_	_	5	punct	_	SpaceAfter=No
5	SRS208	_	PROPN	_	_	2	appos	_	SpaceAfter=No
6	]	_	PUNCT	_	_	5	punct	_	SpaceAfter=No
7	,	_	PUNCT	_	_	10	punct	_	_
8	within	_	ADP	_	_	10	case	_	_
9	60	_	NUM	_	_	10	nummod	_	_
10	milliseconds	_	NOUN	_	_	43	obl	_	_
11	after	_	SCONJ	_	_	15	mark	_	_
12	1.5	_	NUM	_	_	13	nummod	_	_
13	minutes	_	NOUN	_	_	15	nsubj	_	_
14	has	_	AUX	_	_	15	aux	_	_
15	elapsed	_	VERB	_	_	10	acl	_	_
16	since	_	SCONJ	_	_	21	mark	_	_
17	the	_	DET	_	_	19	det	_	_
18	voted	_	ADJ	_	_	19	amod	_	_
19	reset	_	NOUN	_	_	21	nsubj:pass	_	_
20	was	_	AUX	_	_	21	aux:pass	_	_
21	sent	_	VERB	_	_	15	advcl	_	_
22	to	_	ADP	_	_	25	case	_	_
23	the	_	DET	_	_	25	det	_	_
24	failed	_	ADJ	_	_	25	amod	_	_
25	channel	_	NOUN	_	_	21	iobj	_	SpaceAfter=No
26	,	_	PUNCT	_	_	31	punct	_	_
27	if	_	SCONJ	_	_	31	mark	_	_
28	the	_	DET	_	_	30	det	_	_
29	voted	_	ADJ	_	_	30	amod	_	_
30	reset	_	NOUN	_	_	31	nsubj	_	_
31	fails	_	VERB	_	_	43	advcl	_	_
32	to	_	PART	_	_	33	mark	_	_
33	recover	_	VERB	_	_	31	xcomp	_	_
34	the	_	DET	_	_	36	det	_	_
35	failed	_	ADJ	_	_	36	amod	_	_
36	channel	_	NOUN	_	_	33	obj	_	_
37	and	_	CCONJ	_	_	41	cc	_	_
38	alignment	_	NOUN	_	_	41	nsubj:pass	_	_
39	is	_	AUX	_	_	41	aux:pass	_	_
40	still	_	ADV	_	_	41	advmod	_	_
41	allowed	_	VERB	_	_	31	conj	_	SpaceAfter=No
42	,	_	PUNCT	_	_	31	punct	_	_
43	request	_	VERB	_	_	0	root	_	_
44	from	_	ADP	_	_	46	case	_	_
45	the	_	DET	_	_	46	det	_	_
46	application	_	NOUN	_	_	43	obl	_	_
47	a	_	DET	_	_	49	det	_	_
48	power	_	NOUN	_	_	49	compound	_	_
49	cycle	_	NOUN	_	_	43	obj	_	_
50	of	_	ADP	_	_	52	case	_	_
51	the	_	DET	_	_	52	det	_	_
52	channel	_	NOUN	_	_	49	nmod	_	SpaceAfter=No
53	.	_	PUNCT	_	_	43	punct	_	_

# sent_id = 133
# text = (Note that NEFU recovery does not depend on whether alignment is permitted.)
1	(	_	PUNCT	_	_	2	punct	_	SpaceAfter=No
2	Note	_	VERB	_	_	0	root	_	_
3	that	_	SCONJ	_	_	8	mark	_	_
4	NEFU	_	NOUN	_	_	5	compound	_	_
5	recovery	_	NOUN	_	_	8	nsubj	_	_
6	does	_	AUX	_	_	8	aux	_	_
7	not	_	PART	_	_	8	advmod	_	_
8	depend	_	VERB	_	_	2	ccomp	_	_
9	on	_	SCONJ	_	_	13	mark	_	_
10	whether	_	SCONJ	_	_	13	mark	_	_
11	alignment	_	NOUN	_	_	13	nsubj:pass	_	_
12	is	_	AUX	_	_	13	aux:pass	_	_
13	permitted	_	VERB	_	_	8	ccomp	_	SpaceAfter=No
14	.	_	PUNCT	_	_	2	punct	_	SpaceAfter=No
15	)	_	PUNCT	_	_	2	punct	_	_

# newdoc id = 1999_tcs_3.1.2.1_par1
# sent_id = 1
# text = In the Normal Operations Mode the TCS shall support the following functions: [SSS037] 1. Mission Planning 2. Mission Control and Monitoring 3. Payload Product Management 4. Target Coordinate Development 5. C4I Systems Interface
1	In	_	ADP	_	_	5	case	_	_
2	the	_	DET	_	_	5	det	_	_
3	Normal	_	ADJ	_	_	4	amod	_	_
4	Operations	_	NOUN	_	_	5	compound	_	_
5	Mode	_	NOUN	_	_	9	obl	_	_
6	the	_	DET	_	_	7	det	_	_
7	TCS	_	PROPN	_	_	9	nsubj	_	_
8	shall	_	AUX	_	_	9	aux	_	_
9	support	_	VERB	_	_	0	root	_	_
10	the	_	DET	_	_	12	det	_	_
11	following	_	ADJ	_	_	12	amod	_	_
12	functions	_	NOUN	_	_	9	obj	_	SpaceAfter=No
13	:	_	PUNCT	_	_	12	punct	_	_
14	[	_	PUNCT	_	_	15	punct	_	SpaceAfter=No
15	SSS037	_	PROPN	_	_	9	appos	_	SpaceAfter=No
16	]	_	PUNCT	_	_	15	punct	_	_
17	1	_	NUM	_	_	20	nummod	_	SpaceAfter=No
18	.	_	PUNCT	_	_	17	punct	_	_
19	Mission	_	NOUN	_	_	20	nmod	_	_
20	Planning	_	NOUN	_	_	9	parataxis	_	_
21	2	_	NUM	_	_	24	nummod	_	SpaceAfter=No
22	.	_	PUNCT	_	_	21	punct	_	_
23	Mission	_	NOUN	_	_	24	nmod	_	_
24	Control	_	NOUN	_	_	20	list	_	_
25	and	_	CCONJ	_	_	26	cc	_	_
26	Monitoring	_	NOUN	_	_	24	conj	_	_
27	3	_	NUM	_	_	31	nummod	_	SpaceAfter=No
28	.	_	PUNCT	_	_	27	punct	_	_
29	Payload	_	NOUN	_	_	30	compound	_	_
30	Product	_	NOUN	_	_	31	nmod	_	_
31	Management	_	NOUN	_	_	20	list	_	_
32	4	_	NUM	_	_	36	nummod	_	SpaceAfter=No
33	.	_	PUNCT	_	_	32	punct	_	_
34	Target	_	NOUN	_	_	35	nmod	_	_
35	Coordinate	_	NOUN	_	_	36	nmod	_	_
36	Development	_	NOUN	_	_	20	list	_	_
37	5	_	NUM	_	_	41	nummod	_	SpaceAfter=No
38	.	_	PUNCT	_	_	37	punct	_	_
39	C4I	_	NOUN	_	_	40	compound	_	_
40	Systems	_	NOUN	_	_	41	compound	_	_
41	Interface	_	NOUN	_	_	20	list	_	_

# newdoc id = 2007_wdfw_4.4.3_Delete.Feature.Archive
# sent_id = 45
# text = The tool shall change the archive field in the Species Habitat Feature and species habitat records to TRUE.
1	The	_	DET	_	_	2	det	_	_
2	tool	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	change	_	VERB	_	_	0	root	_	_
5	the	_	DET	_	_	7	det	_	_
6	archive	_	NOUN	_	_	7	compound	_	_
7	field	_	NOUN	_	_	4	obj	_	_
8	in	_	ADP	_	_	12	case	_	_
9	the	_	DET	_	_	12	det	_	_
10	Species	_	NOUN	_	_	11	nmod	_	_
11	Habitat	_	NOUN	_	_	12	compound	_	_
12	Feature	_	NOUN	_	_	7	nmod	_	_
13	and	_	CCONJ	_	_	16	cc	_	_
14	species	_	NOUN	_	_	15	nmod	_	_
15	habitat	_	NOUN	_	_	16	compound	_	_
16	records	_	NOUN	_	_	12	conj	_	_
17	to	_	ADP	_	_	18	case	_	_
18	TRUE	_	ADJ	_	_	4	obl	_	SpaceAfter=No
19	.	_	PUNCT	_	_	4	punct	_	_

# newdoc id = 1998_ALQ-172_3.2.1.2
# sent_id = 17
# text = The SOF integrated aircraft system shall have sufficient structural integrity, based on the original design criteria, to insure optimum system performance in its operating environment over its service life.
1	The	_	DET	_	_	5	det	_	_
2	SOF	_	NOUN	_	_	5	nmod	_	_
3	integrated	_	ADJ	_	_	5	amod	_	_
4	aircraft	_	NOUN	_	_	5	compound	_	_
5	system	_	NOUN	_	_	7	nsubj	_	_
6	shall	_	AUX	_	_	7	aux	_	_
7	have	_	VERB	_	_	0	root	_	_
8	sufficient	_	ADJ	_	_	10	amod	_	_
9	structural	_	ADJ	_	_	10	amod	_	_
10	integrity	_	NOUN	_	_	7	obj	_	SpaceAfter=No
11	,	_	PUNCT	_	_	12	punct	_	_
12	based	_	VERB	_	_	10	acl	_	_
13	on	_	ADP	_	_	17	case	_	_
14	the	_	DET	_	_	17	det	_	_
15	original	_	ADJ	_	_	17	amod	_	_
16	design	_	NOUN	_	_	17	nmod	_	_
17	criteria	_	NOUN	_	_	12	iobj	_	SpaceAfter=No
18	,	_	PUNCT	_	_	12	punct	_	_
19	to	_	PART	_	_	20	mark	_	_
20	insure	_	VERB	_	_	10	acl	_	_
21	optimum	_	ADJ	_	_	23	amod	_	_
22	system	_	NOUN	_	_	23	nmod	_	_
23	performance	_	NOUN	_	_	20	obj	_	_
24	in	_	ADP	_	_	27	case	_	_
25	its	_	DET	_	_	27	nmod	_	_
26	operating	_	ADJ	_	_	27	amod	_	_
27	environment	_	NOUN	_	_	20	obl	_	_
28	over	_	ADP	_	_	31	case	_	_
29	its	_	DET	_	_	31	nmod	_	_
30	service	_	NOUN	_	_	31	compound	_	_
31	life	_	NOUN	_	_	20	obl	_	SpaceAfter=No
32	.	_	PUNCT	_	_	7	punct	_	_

# sent_id = 18
# text = All new/modified safety-of-flight, maintenance critical, and mission critical structures, which are flight and/or pressure load design driven, shall have static margins of safety greater than or equal to 0.25 if not structurally proof tested to ultimate load.
1	All	_	DET	_	_	17	det	_	_
2	new	_	ADJ	_	_	17	amod	_	SpaceAfter=No
3	/	_	SYM	_	_	4	cc	_	SpaceAfter=No
4	modified	_	ADJ	_	_	2	conj	_	_
5	safety	_	NOUN	_	_	17	compound	_	SpaceAfter=No
6	-	_	PUNCT	_	_	5	punct	_	SpaceAfter=No
7	of	_	ADP	_	_	9	case	_	SpaceAfter=No
8	-	_	PUNCT	_	_	7	punct	_	SpaceAfter=No
9	flight	_	NOUN	_	_	5	nmod	_	SpaceAfter=No
10	,	_	PUNCT	_	_	11	punct	_	_
11	maintenance	_	NOUN	_	_	5	conj	_	_
12	critical	_	ADJ	_	_	11	amod	_	SpaceAfter=No
13	,	_	PUNCT	_	_	15	punct	_	_
14	and	_	CCONJ	_	_	15	cc	_	_
15	mission	_	NOUN	_	_	5	conj	_	_
16	critical	_	ADJ	_	_	15	amod	_	_
17	structures	_	NOUN	_	_	31	nsubj	_	SpaceAfter=No
18	,	_	PUNCT	_	_	28	punct	_	_
19	which	_	PRON	_	_	28	nsubj	_	_
20	are	_	AUX	_	_	28	cop	_	_
21	flight	_	NOUN	_	_	28	nmod	_	_
22	and	_	CCONJ	_	_	26	cc	_	SpaceAfter=No
23	/	_	SYM	_	_	24	cc	_	SpaceAfter=No
24	or	_	CCONJ	_	_	22	conj	_	_
25	pressure	_	NOUN	_	_	26	compound	_	_
26	load	_	NOUN	_	_	21	conj	_	_
27	design	_	NOUN	_	_	28	compound	_	_
28	driven	_	ADJ	_	_	17	acl:relcl	_	SpaceAfter=No
29	,	_	PUNCT	_	_	28	punct	_	_
30	shall	_	AUX	_	_	31	aux	_	_
31	have	_	VERB	_	_	0	root	_	_
32	static	_	ADJ	_	_	33	amod	_	_
33	margins	_	NOUN	_	_	31	obj	_	_
34	of	_	ADP	_	_	35	case	_	_
35	safety	_	NOUN	_	_	33	nmod	_	_
36	greater	_	ADJ	_	_	41	advmod	_	_
37	than	_	SCONJ	_	_	36	fixed	_	_
38	or	_	CCONJ	_	_	39	cc	_	_
39	equal	_	ADJ	_	_	36	conj	_	_
40	to	_	ADP	_	_	39	fixed	_	_
41	0.25	_	NUM	_	_	33	nmod	_	_
42	if	_	SCONJ	_	_	46	mark	_	_
43	not	_	PART	_	_	46	advmod	_	_
44	structurally	_	ADV	_	_	46	advmod	_	_
45	proof	_	NOUN	_	_	46	compound	_	_
46	tested	_	VERB	_	_	17	acl	_	_
47	to	_	ADP	_	_	49	case	_	_
48	ultimate	_	ADJ	_	_	49	amod	_	_
49	load	_	NOUN	_	_	46	obl	_	SpaceAfter=No
50	.	_	PUNCT	_	_	31	punct	_	_

# sent_id = 19
# text = The Rremaining aircraft components (not on a critical parts list, crash load design driven, and previous existing structure) shall not be degraded below 0.0 (positive) static margin of safety.
1	The	_	DET	_	_	4	det	_	_
2	Rremaining	_	ADJ	_	_	4	amod	_	_
3	aircraft	_	NOUN	_	_	4	nmod	_	_
4	components	_	NOUN	_	_	26	nsubj:pass	_	_
5	(	_	PUNCT	_	_	11	punct	_	SpaceAfter=No
6	not	_	PART	_	_	11	advmod	_	_
7	on	_	ADP	_	_	11	case	_	_
8	a	_	DET	_	_	11	det	_	_
9	critical	_	ADJ	_	_	10	amod	_	_
10	parts	_	NOUN	_	_	11	nmod	_	_
11	list	_	NOUN	_	_	4	nmod	_	SpaceAfter=No
12	,	_	PUNCT	_	_	16	punct	_	_
13	crash	_	NOUN	_	_	14	compound	_	_
14	load	_	NOUN	_	_	16	nmod	_	_
15	design	_	NOUN	_	_	16	compound	_	_
16	driven	_	ADJ	_	_	11	conj	_	SpaceAfter=No
17	,	_	PUNCT	_	_	21	punct	_	_
18	and	_	CCONJ	_	_	21	cc	_	_
19	previous	_	ADJ	_	_	21	amod	_	_
20	existing	_	ADJ	_	_	21	amod	_	_
21	structure	_	NOUN	_	_	16	conj	_	SpaceAfter=No
22	)	_	PUNCT	_	_	11	punct	_	_
23	shall	_	AUX	_	_	26	aux	_	_
24	not	_	PART	_	_	26	advmod	_	_
25	be	_	AUX	_	_	26	aux:pass	_	_
26	degraded	_	VERB	_	_	0	root	_	_
27	below	_	ADP	_	_	33	case	_	_
28	0.0	_	NUM	_	_	33	nummod	_	_
29	(	_	PUNCT	_	_	30	punct	_	SpaceAfter=No
30	positive	_	ADJ	_	_	33	amod	_	SpaceAfter=No
31	)	_	PUNCT	_	_	30	punct	_	_
32	static	_	ADJ	_	_	33	amod	_	_
33	margin	_	NOUN	_	_	26	obl	_	_
34	of	_	ADP	_	_	35	case	_	_
35	safety	_	NOUN	_	_	33	nmod	_	SpaceAfter=No
36	.	_	PUNCT	_	_	26	punct	_	_

# newdoc id = 2000_nasax38_3.2.5.2_3
# sent_id = 83
# text = Continuous BIT shall [SRS093] execute on the FCP virtual group.
1	Continuous	_	ADJ	_	_	2	amod	_	_
2	BIT	_	NOUN	_	_	7	nsubj	_	_
3	shall	_	AUX	_	_	7	aux	_	_
4	[	_	PUNCT	_	_	5	punct	_	SpaceAfter=No
5	SRS093	_	PROPN	_	_	2	appos	_	SpaceAfter=No
6	]	_	PUNCT	_	_	5	punct	_	_
7	execute	_	VERB	_	_	0	root	_	_
8	on	_	ADP	_	_	12	case	_	_
9	the	_	DET	_	_	12	det	_	_
10	FCP	_	NOUN	_	_	12	nmod	_	_
11	virtual	_	ADJ	_	_	12	amod	_	_
12	group	_	NOUN	_	_	7	obl	_	SpaceAfter=No
13	.	_	PUNCT	_	_	7	punct	_	_

# newdoc id = 2007_nde_3.10.4
# sent_id = 180
# text = The System shall be compliant with the OMB Federal Enterprise Architecture (FEA) according to the documents dated December 2006, and available from http://www.whitehouse.gov/omb/egov/a-2-EAModelsNEW2.html .
1	The	_	DET	_	_	2	det	_	_
2	System	_	NOUN	_	_	5	nsubj	_	_
3	shall	_	AUX	_	_	5	aux	_	_
4	be	_	AUX	_	_	5	cop	_	_
5	compliant	_	ADJ	_	_	0	root	_	_
6	with	_	ADP	_	_	11	case	_	_
7	the	_	DET	_	_	11	det	_	_
8	OMB	_	PROPN	_	_	11	nmod	_	_
9	Federal	_	ADJ	_	_	11	amod	_	_
10	Enterprise	_	NOUN	_	_	11	compound	_	_
11	Architecture	_	NOUN	_	_	5	obl	_	_
12	(	_	PUNCT	_	_	13	punct	_	SpaceAfter=No
13	FEA	_	PROPN	_	_	11	appos	_	SpaceAfter=No
14	)	_	PUNCT	_	_	13	punct	_	_
15	according	_	ADP	_	_	18	case	_	_
16	to	_	ADP	_	_	15	fixed	_	_
17	the	_	DET	_	_	18	det	_	_
18	documents	_	NOUN	_	_	5	obl	_	_
19	dated	_	VERB	_	_	18	acl	_	_
20	December	_	NOUN	_	_	19	obl	_	_
21	2006	_	NUM	_	_	20	flat	_	SpaceAfter=No
22	,	_	PUNCT	_	_	24	punct	_	_
23	and	_	CCONJ	_	_	24	cc	_	_
24	available	_	ADJ	_	_	19	conj	_	_
25	from	_	ADP	_	_	26	case	_	_
26	http://www.whitehouse.gov/omb/egov/a-2-EAModelsNEW2.html	_	SYM	_	_	24	obl	_	_
27	.	_	PUNCT	_	_	5	punct	_	_

# newdoc id = 2001_ctcnetwork_tab23_C2C-MP-03
# sent_id = 148
# text = The map user shall be able to alter the current magnification (zoom level) of the map.
1	The	_	DET	_	_	3	det	_	_
2	map	_	NOUN	_	_	3	nmod	_	_
3	user	_	NOUN	_	_	6	nsubj	_	_
4	shall	_	AUX	_	_	6	aux	_	_
5	be	_	AUX	_	_	6	cop	_	_
6	able	_	ADJ	_	_	0	root	_	_
7	to	_	PART	_	_	8	mark	_	_
8	alter	_	VERB	_	_	6	xcomp	_	_
9	the	_	DET	_	_	11	det	_	_
10	current	_	ADJ	_	_	11	amod	_	_
11	magnification	_	NOUN	_	_	8	obj	_	_
12	(	_	PUNCT	_	_	14	punct	_	SpaceAfter=No
13	zoom	_	NOUN	_	_	14	compound	_	_
14	level	_	NOUN	_	_	11	appos	_	SpaceAfter=No
15	)	_	PUNCT	_	_	14	punct	_	_
16	of	_	ADP	_	_	18	case	_	_
17	the	_	DET	_	_	18	det	_	_
18	map	_	NOUN	_	_	11	nmod	_	SpaceAfter=No
19	.	_	PUNCT	_	_	6	punct	_	_

# newdoc id = 2015_CS4311_3.1.3.1_Req17
# sent_id = 14
# text = The “Aircraft” screen interface shall display a checkbox followed by the following summary of the aircraft: Name, Aircraft ID, Aircraft Model number, Aircraft Color.
1	The	_	DET	_	_	6	det	_	_
2	“	_	PUNCT	_	_	3	punct	_	SpaceAfter=No
3	Aircraft	_	NOUN	_	_	6	compound	_	SpaceAfter=No
4	”	_	PUNCT	_	_	3	punct	_	_
5	screen	_	NOUN	_	_	6	nmod	_	_
6	interface	_	NOUN	_	_	8	nsubj	_	_
7	shall	_	AUX	_	_	8	aux	_	_
8	display	_	VERB	_	_	0	root	_	_
9	a	_	DET	_	_	10	det	_	_
10	checkbox	_	NOUN	_	_	8	obj	_	_
11	followed	_	VERB	_	_	10	acl	_	_
12	by	_	ADP	_	_	15	case	_	_
13	the	_	DET	_	_	15	det	_	_
14	following	_	ADJ	_	_	15	amod	_	_
15	summary	_	NOUN	_	_	11	obl	_	_
16	of	_	ADP	_	_	18	case	_	_
17	the	_	DET	_	_	18	det	_	_
18	aircraft	_	NOUN	_	_	15	nmod	_	SpaceAfter=No
19	:	_	PUNCT	_	_	20	punct	_	_
20	Name	_	NOUN	_	_	8	parataxis	_	SpaceAfter=No
21	,	_	PUNCT	_	_	23	punct	_	_
22	Aircraft	_	NOUN	_	_	23	nmod	_	_
23	ID	_	NOUN	_	_	20	conj	_	SpaceAfter=No
24	,	_	PUNCT	_	_	27	punct	_	_
25	Aircraft	_	NOUN	_	_	26	nmod	_	_
26	Model	_	NOUN	_	_	27	nmod	_	_
27	number	_	NOUN	_	_	20	conj	_	SpaceAfter=No
28	,	_	PUNCT	_	_	30	punct	_	_
29	Aircraft	_	NOUN	_	_	30	nmod	_	_
30	Color	_	NOUN	_	_	20	conj	_	SpaceAfter=No
31	.	_	PUNCT	_	_	8	punct	_	_

# newdoc id = 2000_nasax38_3.2.6.2_6
# sent_id = 105
# text = For the NEFU, if the first failure is diagnosed, Redundancy Management shall [SRS245] issue a configuration update to mask out the failed processor.
1	For	_	ADP	_	_	3	case	_	_
2	the	_	DET	_	_	3	det	_	_
3	NEFU	_	NOUN	_	_	18	obl	_	SpaceAfter=No
4	,	_	PUNCT	_	_	3	punct	_	_
5	if	_	SCONJ	_	_	10	mark	_	_
6	the	_	DET	_	_	8	det	_	_
7	first	_	ADJ	_	_	8	amod	_	_
8	failure	_	NOUN	_	_	10	nsubj:pass	_	_
9	is	_	AUX	_	_	10	aux:pass	_	_
10	diagnosed	_	VERB	_	_	18	advcl	_	SpaceAfter=No
11	,	_	PUNCT	_	_	10	punct	_	_
12	Redundancy	_	NOUN	_	_	13	nmod	_	_
13	Management	_	NOUN	_	_	18	nsubj	_	_
14	shall	_	AUX	_	_	18	aux	_	_
15	[	_	PUNCT	_	_	16	punct	_	SpaceAfter=No
16	SRS245	_	PROPN	_	_	13	appos	_	SpaceAfter=No
17	]	_	PUNCT	_	_	16	punct	_	_
18	issue	_	VERB	_	_	0	root	_	_
19	a	_	DET	_	_	21	det	_	_
20	configuration	_	NOUN	_	_	21	nmod	_	_
21	update	_	NOUN	_	_	18	obj	_	_
22	to	_	PART	_	_	23	mark	_	_
23	mask	_	VERB	_	_	18	advcl	_	_
24	out	_	ADV	_	_	23	advmod	_	_
25	the	_	DET	_	_	27	det	_	_
26	failed	_	ADJ	_	_	27	amod	_	_
27	processor	_	NOUN	_	_	23	obj	_	SpaceAfter=No
28	.	_	PUNCT	_	_	18	punct	_	_

# sent_id = 106
# text = Note that the NE is allowed to remain in the configuration and no recovery will take place.
1	Note	_	VERB	_	_	0	root	_	_
2	that	_	SCONJ	_	_	6	mark	_	_
3	the	_	DET	_	_	4	det	_	_
4	NE	_	NOUN	_	_	6	nsubj:pass	_	_
5	is	_	AUX	_	_	6	aux:pass	_	_
6	allowed	_	VERB	_	_	1	ccomp	_	_
7	to	_	PART	_	_	8	mark	_	_
8	remain	_	VERB	_	_	6	xcomp	_	_
9	in	_	ADP	_	_	11	case	_	_
10	the	_	DET	_	_	11	det	_	_
11	configuration	_	NOUN	_	_	8	obl	_	_
12	and	_	CCONJ	_	_	16	cc	_	_
13	no	_	DET	_	_	14	det	_	_
14	recovery	_	NOUN	_	_	16	nsubj	_	_
15	will	_	AUX	_	_	16	aux	_	_
16	take	_	VERB	_	_	6	conj	_	_
17	place	_	NOUN	_	_	16	obj	_	SpaceAfter=No
18	.	_	PUNCT	_	_	1	punct	_	_

# sent_id = 107
# text = Note also that the failed NEFU could be diagnosed using any method, including (but not limited to) ICP presence test, or NE syndrome analysis.
1	Note	_	VERB	_	_	0	root	_	_
2	also	_	ADV	_	_	1	advmod	_	_
3	that	_	SCONJ	_	_	9	mark	_	_
4	the	_	DET	_	_	6	det	_	_
5	failed	_	ADJ	_	_	6	amod	_	_
6	NEFU	_	NOUN	_	_	9	nsubj:pass	_	_
7	could	_	AUX	_	_	9	aux	_	_
8	be	_	AUX	_	_	9	aux:pass	_	_
9	diagnosed	_	VERB	_	_	1	ccomp	_	_
10	using	_	VERB	_	_	9	advcl	_	_
11	any	_	DET	_	_	12	det	_	_
12	method	_	NOUN	_	_	10	obj	_	SpaceAfter=No
13	,	_	PUNCT	_	_	23	punct	_	_
14	including	_	ADP	_	_	23	case	_	_
15	(	_	PUNCT	_	_	18	punct	_	SpaceAfter=No
16	but	_	CCONJ	_	_	18	cc	_	_
17	not	_	PART	_	_	18	advmod	_	_
18	limited	_	VERB	_	_	14	conj	_	_
19	to	_	ADP	_	_	23	case	_	SpaceAfter=No
20	)	_	PUNCT	_	_	19	punct	_	_
21	ICP	_	NOUN	_	_	23	nmod	_	_
22	presence	_	NOUN	_	_	23	compound	_	_
23	test	_	NOUN	_	_	12	nmod	_	SpaceAfter=No
24	,	_	PUNCT	_	_	28	punct	_	_
25	or	_	CCONJ	_	_	28	cc	_	_
26	NE	_	NOUN	_	_	27	nmod	_	_
27	syndrome	_	NOUN	_	_	28	nmod	_	_
28	analysis	_	NOUN	_	_	23	conj	_	SpaceAfter=No
29	.	_	PUNCT	_	_	1	punct	_	_

# newdoc id = 2009_gaia_6.2_GOG-SPCT-S-FUN-020
# sent_id = 122
# text = Noise consideration on: • Flux noise (Poisson noise, total detection noise,...) • CCD combination noise for (RVS) • Wavelength calibration • Multi-transit combination noise (only for combined data)should be added
1	Noise	_	NOUN	_	_	2	nmod	_	_
2	consideration	_	NOUN	_	_	43	nsubj:pass	_	_
3	on	_	ADP	_	_	7	case	_	SpaceAfter=No
4	:	_	PUNCT	_	_	7	punct	_	_
5	•	_	PUNCT	_	_	7	punct	_	_
6	Flux	_	NOUN	_	_	7	compound	_	_
7	noise	_	NOUN	_	_	2	nmod	_	_
8	(	_	PUNCT	_	_	10	punct	_	SpaceAfter=No
9	Poisson	_	PROPN	_	_	10	compound	_	_
10	noise	_	NOUN	_	_	7	appos	_	SpaceAfter=No
11	,	_	PUNCT	_	_	14	punct	_	_
12	total	_	ADJ	_	_	13	amod	_	_
13	detection	_	NOUN	_	_	14	nmod	_	_
14	noise	_	NOUN	_	_	10	conj	_	SpaceAfter=No
15	,	_	PUNCT	_	_	16	punct	_	SpaceAfter=No
16	...	_	PUNCT	_	_	10	punct	_	SpaceAfter=No
17	)	_	PUNCT	_	_	10	punct	_	_
18	•	_	PUNCT	_	_	21	punct	_	_
19	CCD	_	NOUN	_	_	20	nmod	_	_
20	combination	_	NOUN	_	_	21	nmod	_	_
21	noise	_	NOUN	_	_	7	list	_	_
22	for	_	ADP	_	_	24	case	_	_
23	(	_	PUNCT	_	_	24	punct	_	SpaceAfter=No
24	RVS	_	PROPN	_	_	21	nmod	_	SpaceAfter=No
25	)	_	PUNCT	_	_	24	punct	_	_
26	•	_	PUNCT	_	_	28	punct	_	_
27	Wavelength	_	NOUN	_	_	28	compound	_	_
28	calibration	_	NOUN	_	_	7	list	_	_
29	•	_	PUNCT	_	_	34	punct	_	_
30	Multi	_	ADV	_	_	32	advmod	_	SpaceAfter=No
31	-	_	PUNCT	_	_	32	punct	_	SpaceAfter=No
32	transit	_	NOUN	_	_	33	compound	_	_
33	combination	_	NOUN	_	_	34	nmod	_	_
34	noise	_	NOUN	_	_	7	list	_	_
35	(	_	PUNCT	_	_	39	punct	_	SpaceAfter=No
36	only	_	ADV	_	_	39	advmod	_	_
37	for	_	ADP	_	_	39	case	_	_
38	combined	_	ADJ	_	_	39	amod	_	_
39	data	_	NOUN	_	_	34	nmod	_	SpaceAfter=No
40	)	_	PUNCT	_	_	39	punct	_	SpaceAfter=No
41	should	_	AUX	_	_	43	aux	_	_
42	be	_	AUX	_	_	43	aux:pass	_	_
43	added	_	VERB	_	_	0	root	_	_

# newdoc id = 2011_tfms_3.2.1.1.4_SSS2390
# sent_id = 211
# text = The system shall provide the capability for user groups to be combined and de-combined.
1	The	_	DET	_	_	2	det	_	_
2	system	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	provide	_	VERB	_	_	0	root	_	_
5	the	_	DET	_	_	6	det	_	_
6	capability	_	NOUN	_	_	4	obj	_	_
7	for	_	ADP	_	_	9	case	_	_
8	user	_	NOUN	_	_	9	nmod	_	_
9	groups	_	NOUN	_	_	4	iobj	_	_
10	to	_	PART	_	_	12	mark	_	_
11	be	_	AUX	_	_	12	aux:pass	_	_
12	combined	_	VERB	_	_	6	xcomp	_	_
13	and	_	CCONJ	_	_	16	cc	_	_
14	de	_	ADV	_	_	16	advmod	_	SpaceAfter=No
15	-	_	PUNCT	_	_	16	punct	_	SpaceAfter=No
16	combined	_	VERB	_	_	12	conj	_	SpaceAfter=No
17	.	_	PUNCT	_	_	4	punct	_	_

# newdoc id = 2000_nasax38_3.2.1_17
# sent_id = 240
# text = System Initialization, from hardware reset to starting of the 50 Hz timer, shall [SRS015] take no longer than 1.5 minutes.
1	System	_	NOUN	_	_	2	nmod	_	_
2	Initialization	_	NOUN	_	_	19	nsubj	_	SpaceAfter=No
3	,	_	PUNCT	_	_	6	punct	_	_
4	from	_	ADP	_	_	6	case	_	_
5	hardware	_	NOUN	_	_	6	nmod	_	_
6	reset	_	NOUN	_	_	19	obl	_	_
7	to	_	PART	_	_	8	case	_	_
8	starting	_	NOUN	_	_	6	nmod	_	_
9	of	_	ADP	_	_	13	case	_	_
10	the	_	DET	_	_	13	det	_	_
11	50	_	NUM	_	_	12	nummod	_	_
12	Hz	_	NOUN	_	_	13	nmod	_	_
13	timer	_	NOUN	_	_	8	nmod	_	SpaceAfter=No
14	,	_	PUNCT	_	_	6	punct	_	_
15	shall	_	AUX	_	_	19	aux	_	_
16	[	_	PUNCT	_	_	17	punct	_	SpaceAfter=No
17	SRS015	_	PROPN	_	_	2	appos	_	SpaceAfter=No
18	]	_	PUNCT	_	_	17	punct	_	_
19	take	_	VERB	_	_	0	root	_	_
20	no	_	ADV	_	_	21	advmod	_	_
21	longer	_	ADV	_	_	23	advmod	_	_
22	than	_	SCONJ	_	_	21	fixed	_	_
23	1.5	_	NUM	_	_	24	nummod	_	_
24	minutes	_	NOUN	_	_	19	obj	_	SpaceAfter=No
25	.	_	PUNCT	_	_	19	punct	_	_

# newdoc id = 2002_evlacorr_3.1.1.1
# sent_id = 127
# text = Network Protocol – The interface between the CMIB, MCCC, and CPCC shall be Ethernet (IEEE 802.3 compliant) of 100 Mbits/sec or better data rate.
1	Network	_	NOUN	_	_	2	compound	_	_
2	Protocol	_	NOUN	_	_	0	root	_	_
3	–	_	PUNCT	_	_	2	punct	_	_
4	The	_	DET	_	_	5	det	_	_
5	interface	_	NOUN	_	_	16	nsubj	_	_
6	between	_	ADP	_	_	8	case	_	_
7	the	_	DET	_	_	8	det	_	_
8	CMIB	_	NOUN	_	_	5	nmod	_	SpaceAfter=No
9	,	_	PUNCT	_	_	10	punct	_	_
10	MCCC	_	NOUN	_	_	8	conj	_	SpaceAfter=No
11	,	_	PUNCT	_	_	13	punct	_	_
12	and	_	CCONJ	_	_	13	cc	_	_
13	CPCC	_	NOUN	_	_	8	conj	_	_
14	shall	_	AUX	_	_	16	aux	_	_
15	be	_	AUX	_	_	16	cop	_	_
16	Ethernet	_	NOUN	_	_	2	parataxis	_	_
17	(	_	PUNCT	_	_	20	punct	_	SpaceAfter=No
18	IEEE	_	PROPN	_	_	20	obl	_	_
19	802.3	_	NUM	_	_	18	flat	_	_
20	compliant	_	ADJ	_	_	16	amod	_	SpaceAfter=No
21	)	_	PUNCT	_	_	20	punct	_	_
22	of	_	ADP	_	_	24	case	_	_
23	100	_	NUM	_	_	24	nummod	_	_
24	Mbits	_	NOUN	_	_	16	nmod	_	SpaceAfter=No
25	/	_	SYM	_	_	26	case	_	SpaceAfter=No
26	sec	_	NOUN	_	_	24	nmod	_	_
27	or	_	CCONJ	_	_	30	cc	_	_
28	better	_	ADJ	_	_	30	amod	_	_
29	data	_	NOUN	_	_	30	compound	_	_
30	rate	_	NOUN	_	_	24	conj	_	SpaceAfter=No
31	.	_	PUNCT	_	_	2	punct	_	_

# newdoc id = 2007_ertms_4.1.1.4c
# sent_id = 164
# text = The DMI shall indicate the result of the self-test. (M)
1	The	_	DET	_	_	2	det	_	_
2	DMI	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	indicate	_	VERB	_	_	0	root	_	_
5	the	_	DET	_	_	6	det	_	_
6	result	_	NOUN	_	_	4	obj	_	_
7	of	_	ADP	_	_	11	case	_	_
8	the	_	DET	_	_	11	det	_	_
9	self	_	ADV	_	_	11	advmod	_	SpaceAfter=No
10	-	_	PUNCT	_	_	11	punct	_	SpaceAfter=No
11	test	_	NOUN	_	_	6	nmod	_	SpaceAfter=No
12	.	_	PUNCT	_	_	4	punct	_	_
13	(	_	PUNCT	_	_	14	punct	_	SpaceAfter=No
14	M	_	ADJ	_	_	4	advmod	_	SpaceAfter=No
15	)	_	PUNCT	_	_	14	punct	_	_

# newdoc id = 2001_npac_5.1.2.2.1_RR5-53
# sent_id = 66
# text = NPAC SMS shall notify all accepting Local SMSs and SOAs of the NPA-NXX, effective date, and owning Service Provider when a new NPA-NXX involved in an NPA Split, is being ported for the first time, after the start of permissive dialing, immediately after creation validation of a Subscription Version.
1	NPAC	_	PROPN	_	_	2	nmod	_	_
2	SMS	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	notify	_	VERB	_	_	0	root	_	_
5	all	_	DET	_	_	8	det	_	_
6	accepting	_	ADJ	_	_	8	amod	_	_
7	Local	_	ADJ	_	_	8	amod	_	_
8	SMSs	_	NOUN	_	_	4	obj	_	_
9	and	_	CCONJ	_	_	10	cc	_	_
10	SOAs	_	NOUN	_	_	8	conj	_	_
11	of	_	ADP	_	_	13	case	_	_
12	the	_	DET	_	_	13	det	_	_
13	NPA-NXX	_	PROPN	_	_	8	nmod	_	SpaceAfter=No
14	,	_	PUNCT	_	_	16	punct	_	_
15	effective	_	ADJ	_	_	16	amod	_	_
16	date	_	NOUN	_	_	13	conj	_	SpaceAfter=No
17	,	_	PUNCT	_	_	21	punct	_	_
18	and	_	CCONJ	_	_	21	cc	_	_
19	owning	_	ADJ	_	_	21	amod	_	_
20	Service	_	NOUN	_	_	21	compound	_	_
21	Provider	_	NOUN	_	_	13	conj	_	_
22	when	_	SCONJ	_	_	34	mark	_	_
23	a	_	DET	_	_	25	det	_	_
24	new	_	ADJ	_	_	25	amod	_	_
25	NPA-NXX	_	PROPN	_	_	34	nsubj:pass	_	_
26	involved	_	VERB	_	_	25	acl	_	_
27	in	_	ADP	_	_	30	case	_	_
28	an	_	DET	_	_	30	det	_	_
29	NPA	_	PROPN	_	_	30	compound	_	_
30	Split	_	NOUN	_	_	26	obl	_	SpaceAfter=No
31	,	_	PUNCT	_	_	34	punct	_	_
32	is	_	AUX	_	_	34	aux	_	_
33	being	_	AUX	_	_	34	aux:pass	_	_
34	ported	_	VERB	_	_	4	advcl	_	_
35	for	_	ADP	_	_	38	case	_	_
36	the	_	DET	_	_	38	det	_	_
37	first	_	ADJ	_	_	38	amod	_	_
38	time	_	NOUN	_	_	34	obl	_	SpaceAfter=No
39	,	_	PUNCT	_	_	34	punct	_	_
40	after	_	ADP	_	_	42	case	_	_
41	the	_	DET	_	_	42	det	_	_
42	start	_	NOUN	_	_	4	obl	_	_
43	of	_	ADP	_	_	45	case	_	_
44	permissive	_	ADJ	_	_	45	amod	_	_
45	dialing	_	NOUN	_	_	42	nmod	_	SpaceAfter=No
46	,	_	PUNCT	_	_	42	punct	_	_
47	immediately	_	ADV	_	_	48	advmod	_	_
48	after	_	ADP	_	_	50	case	_	_
49	creation	_	NOUN	_	_	50	nmod	_	_
50	validation	_	NOUN	_	_	4	obl	_	_
51	of	_	ADP	_	_	54	case	_	_
52	a	_	DET	_	_	54	det	_	_
53	Subscription	_	NOUN	_	_	54	nmod	_	_
54	Version	_	NOUN	_	_	50	nmod	_	SpaceAfter=No
55	.	_	PUNCT	_	_	4	punct	_	_

# newdoc id = 2001_npac_4.1.1_RR4-4.1
# sent_id = 8
# text = NPAC SMS shall broadcast all additions, modifications, and deletions of NPAC Customer names via the NPAC SMS to Local SMS interface and/or SOA to NPAC SMS interface.
1	NPAC	_	PROPN	_	_	2	nmod	_	_
2	SMS	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	broadcast	_	VERB	_	_	0	root	_	_
5	all	_	DET	_	_	6	det	_	_
6	additions	_	NOUN	_	_	4	obj	_	SpaceAfter=No
7	,	_	PUNCT	_	_	8	punct	_	_
8	modifications	_	NOUN	_	_	6	conj	_	SpaceAfter=No
9	,	_	PUNCT	_	_	11	punct	_	_
10	and	_	CCONJ	_	_	11	cc	_	_
11	deletions	_	NOUN	_	_	6	conj	_	_
12	of	_	ADP	_	_	15	case	_	_
13	NPAC	_	PROPN	_	_	14	nmod	_	_
14	Customer	_	NOUN	_	_	15	nmod	_	_
15	names	_	NOUN	_	_	11	nmod	_	_
16	via	_	ADP	_	_	23	case	_	_
17	the	_	DET	_	_	23	det	_	_
18	NPAC	_	PROPN	_	_	19	nmod	_	_
19	SMS	_	NOUN	_	_	23	compound	_	_
20	to	_	ADP	_	_	22	case	_	_
21	Local	_	ADJ	_	_	22	amod	_	_
22	SMS	_	NOUN	_	_	19	nmod	_	_
23	interface	_	NOUN	_	_	4	obl	_	_
24	and	_	CCONJ	_	_	31	cc	_	SpaceAfter=No
25	/	_	SYM	_	_	26	cc	_	SpaceAfter=No
26	or	_	CCONJ	_	_	24	conj	_	_
27	SOA	_	PROPN	_	_	31	compound	_	_
28	to	_	ADP	_	_	30	case	_	_
29	NPAC	_	PROPN	_	_	30	nmod	_	_
30	SMS	_	NOUN	_	_	27	nmod	_	_
31	interface	_	NOUN	_	_	23	conj	_	SpaceAfter=No
32	.	_	PUNCT	_	_	4	punct	_	_

# newdoc id = 2001_hats_3.1.1_SRSreq38
# sent_id = 131
# text = The View/Select Text menu item shall provide an interface for selecting pretty-printed text or text strings associated with SDT displays.
1	The	_	DET	_	_	7	det	_	_
2	View	_	VERB	_	_	7	nmod	_	SpaceAfter=No
3	/	_	SYM	_	_	4	cc	_	SpaceAfter=No
4	Select	_	VERB	_	_	2	conj	_	_
5	Text	_	NOUN	_	_	2	obj	_	_
6	menu	_	NOUN	_	_	7	compound	_	_
7	item	_	NOUN	_	_	9	nsubj	_	_
8	shall	_	AUX	_	_	9	aux	_	_
9	provide	_	VERB	_	_	0	root	_	_
10	an	_	DET	_	_	11	det	_	_
11	interface	_	NOUN	_	_	9	obj	_	_
12	for	_	ADP	_	_	13	case	_	_
13	selecting	_	VERB	_	_	11	acl	_	_
14	pretty	_	ADJ	_	_	16	advmod	_	SpaceAfter=No
15	-	_	PUNCT	_	_	16	punct	_	SpaceAfter=No
16	printed	_	ADJ	_	_	17	amod	_	_
17	text	_	NOUN	_	_	13	obj	_	_
18	or	_	CCONJ	_	_	20	cc	_	_
19	text	_	NOUN	_	_	20	compound	_	_
20	strings	_	NOUN	_	_	17	conj	_	_
21	associated	_	VERB	_	_	20	acl	_	_
22	with	_	ADP	_	_	24	case	_	_
23	SDT	_	NOUN	_	_	24	nmod	_	_
24	displays	_	NOUN	_	_	21	obl	_	SpaceAfter=No
25	.	_	PUNCT	_	_	9	punct	_	_

# newdoc id = 2007_ertms_4.1.8.4
# sent_id = 223
# text = The ceiling speed value for the unfitted operation is determined by the lower value out of - Maximum train speed - National value for unfitted operation (M)
1	The	_	DET	_	_	4	det	_	_
2	ceiling	_	ADJ	_	_	4	amod	_	_
3	speed	_	NOUN	_	_	4	nmod	_	_
4	value	_	NOUN	_	_	10	nsubj:pass	_	_
5	for	_	ADP	_	_	8	case	_	_
6	the	_	DET	_	_	8	det	_	_
7	unfitted	_	ADJ	_	_	8	amod	_	_
8	operation	_	NOUN	_	_	4	nmod	_	_
9	is	_	AUX	_	_	10	aux:pass	_	_
10	determined	_	VERB	_	_	0	root	_	_
11	by	_	ADP	_	_	14	case	_	_
12	the	_	DET	_	_	14	det	_	_
13	lower	_	ADJ	_	_	14	amod	_	_
14	value	_	NOUN	_	_	10	obl:agent	_	_
15	out	_	ADV	_	_	20	case	_	_
16	of	_	ADP	_	_	15	fixed	_	_
17	-	_	PUNCT	_	_	20	punct	_	_
18	Maximum	_	ADJ	_	_	20	amod	_	_
19	train	_	NOUN	_	_	20	nmod	_	_
20	speed	_	NOUN	_	_	14	nmod	_	_
21	-	_	PUNCT	_	_	23	punct	_	_
22	National	_	ADJ	_	_	23	amod	_	_
23	value	_	NOUN	_	_	20	list	_	_
24	for	_	ADP	_	_	26	case	_	_
25	unfitted	_	ADJ	_	_	26	amod	_	_
26	operation	_	NOUN	_	_	23	nmod	_	_
27	(	_	PUNCT	_	_	28	punct	_	SpaceAfter=No
28	M	_	ADJ	_	_	10	advmod	_	SpaceAfter=No
29	)	_	PUNCT	_	_	28	punct	_	_

# newdoc id = 2000_nasax38_3.2.6.2_18
# sent_id = 161
# text = Redundancy Management shall [SRS117] reintegrate a processor that is temporarily disabled during a time when alignment was not permitted, when alignment is subsequently permitted.
1	Redundancy	_	NOUN	_	_	2	nmod	_	_
2	Management	_	NOUN	_	_	7	nsubj	_	_
3	shall	_	AUX	_	_	7	aux	_	_
4	[	_	PUNCT	_	_	5	punct	_	SpaceAfter=No
5	SRS117	_	PROPN	_	_	2	appos	_	SpaceAfter=No
6	]	_	PUNCT	_	_	5	punct	_	_
7	reintegrate	_	VERB	_	_	0	root	_	_
8	a	_	DET	_	_	9	det	_	_
9	processor	_	NOUN	_	_	7	obj	_	_
10	that	_	PRON	_	_	13	nsubj:pass	_	_
11	is	_	AUX	_	_	13	aux:pass	_	_
12	temporarily	_	ADV	_	_	13	advmod	_	_
13	disabled	_	VERB	_	_	9	acl:relcl	_	_
14	during	_	ADP	_	_	16	case	_	_
15	a	_	DET	_	_	16	det	_	_
16	time	_	NOUN	_	_	13	obl	_	_
17	when	_	PRON	_	_	21	obl	_	_
18	alignment	_	NOUN	_	_	21	nsubj:pass	_	_
19	was	_	AUX	_	_	21	aux:pass	_	_
20	not	_	PART	_	_	21	advmod	_	_
21	permitted	_	VERB	_	_	16	acl:relcl	_	SpaceAfter=No
22	,	_	PUNCT	_	_	7	punct	_	_
23	when	_	ADV	_	_	27	advmod	_	_
24	alignment	_	NOUN	_	_	27	nsubj:pass	_	_
25	is	_	AUX	_	_	27	aux:pass	_	_
26	subsequently	_	ADV	_	_	27	advmod	_	_
27	permitted	_	VERB	_	_	7	advcl	_	SpaceAfter=No
28	.	_	PUNCT	_	_	7	punct	_	_

# sent_id = 162
# text = Redundancy Management picks up where it left off in these attempts.
1	Redundancy	_	NOUN	_	_	2	nmod	_	_
2	Management	_	NOUN	_	_	3	nsubj	_	_
3	picks	_	VERB	_	_	0	root	_	_
4	up	_	ADP	_	_	3	compound	_	_
5	where	_	ADV	_	_	7	advmod	_	_
6	it	_	PRON	_	_	7	nsubj	_	_
7	left	_	VERB	_	_	3	advcl	_	_
8	off	_	ADV	_	_	7	advmod	_	_
9	in	_	ADP	_	_	11	case	_	_
10	these	_	DET	_	_	11	det	_	_
11	attempts	_	NOUN	_	_	3	obl	_	SpaceAfter=No
12	.	_	PUNCT	_	_	3	punct	_	_

# sent_id = 163
# text = For example, if Redundancy Management is at 1 minute in its 1.5 minute wait for a channel after the first power cycle request, and alignment is not allowed, when alignment is subsequently allowed Redundancy Management will wait another half minute and then try the next power cycle request.
1	For	_	ADP	_	_	2	case	_	_
2	example	_	NOUN	_	_	40	obl	_	SpaceAfter=No
3	,	_	PUNCT	_	_	2	punct	_	_
4	if	_	SCONJ	_	_	10	mark	_	_
5	Redundancy	_	NOUN	_	_	6	nmod	_	_
6	Management	_	NOUN	_	_	10	nsubj	_	_
7	is	_	AUX	_	_	10	cop	_	_
8	at	_	ADP	_	_	10	case	_	_
9	1	_	NUM	_	_	10	nummod	_	_
10	minute	_	NOUN	_	_	40	advcl	_	_
11	in	_	ADP	_	_	15	case	_	_
12	its	_	DET	_	_	15	nmod	_	_
13	1.5	_	NUM	_	_	14	nummod	_	_
14	minute	_	NOUN	_	_	15	compound	_	_
15	wait	_	NOUN	_	_	10	obl	_	_
16	for	_	ADP	_	_	18	case	_	_
17	a	_	DET	_	_	18	det	_	_
18	channel	_	NOUN	_	_	15	nmod	_	_
19	after	_	ADP	_	_	24	case	_	_
20	the	_	DET	_	_	24	det	_	_
21	first	_	ADJ	_	_	24	amod	_	_
22	power	_	NOUN	_	_	23	compound	_	_
23	cycle	_	NOUN	_	_	24	nmod	_	_
24	request	_	NOUN	_	_	10	obl	_	SpaceAfter=No
25	,	_	PUNCT	_	_	30	punct	_	_
26	and	_	CCONJ	_	_	30	cc	_	_
27	alignment	_	NOUN	_	_	30	nsubj:pass	_	_
28	is	_	AUX	_	_	30	aux:pass	_	_
29	not	_	PART	_	_	30	advmod	_	_
30	allowed	_	VERB	_	_	10	conj	_	SpaceAfter=No
31	,	_	PUNCT	_	_	30	punct	_	_
32	when	_	ADV	_	_	36	advmod	_	_
33	alignment	_	NOUN	_	_	36	nsubj:pass	_	_
34	is	_	AUX	_	_	36	aux:pass	_	_
35	subsequently	_	ADV	_	_	36	advmod	_	_
36	allowed	_	VERB	_	_	40	advcl	_	_
37	Redundancy	_	NOUN	_	_	38	nmod	_	_
38	Management	_	NOUN	_	_	40	nsubj	_	_
39	will	_	AUX	_	_	40	aux	_	_
40	wait	_	VERB	_	_	0	root	_	_
41	another	_	ADJ	_	_	43	amod	_	_
42	half	_	ADJ	_	_	43	amod	_	_
43	minute	_	NOUN	_	_	40	obj	_	_
44	and	_	CCONJ	_	_	46	cc	_	_
45	then	_	ADV	_	_	46	advmod	_	_
46	try	_	VERB	_	_	40	conj	_	_
47	the	_	DET	_	_	51	det	_	_
48	next	_	ADJ	_	_	51	amod	_	_
49	power	_	NOUN	_	_	50	compound	_	_
50	cycle	_	NOUN	_	_	51	nmod	_	_
51	request	_	NOUN	_	_	46	obj	_	SpaceAfter=No
52	.	_	PUNCT	_	_	40	punct	_	_

# newdoc id = 2001_npac_5.1.2.2.7_RR5-38.1.2
# sent_id = 129
# text = NPAC SMS shall require NPAC personnel to specify a TN Range (NPA-NXX-xxxx through yyyy, where yyyy is greater than xxxx) to identify multiple subscription versions that contain a Failed SP List with one or more SPIDS, to be resent.
1	NPAC	_	PROPN	_	_	2	nmod	_	_
2	SMS	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	require	_	VERB	_	_	0	root	_	_
5	NPAC	_	PROPN	_	_	6	nmod	_	_
6	personnel	_	NOUN	_	_	4	obj	_	_
7	to	_	PART	_	_	8	mark	_	_
8	specify	_	VERB	_	_	4	xcomp	_	_
9	a	_	DET	_	_	11	det	_	_
10	TN	_	NOUN	_	_	11	nmod	_	_
11	Range	_	NOUN	_	_	8	obj	_	_
12	(	_	PUNCT	_	_	13	punct	_	SpaceAfter=No
13	NPA-NXX-xxxx	_	PROPN	_	_	11	appos	_	_
14	through	_	ADP	_	_	15	case	_	_
15	yyyy	_	NUM	_	_	13	nmod	_	SpaceAfter=No
16	,	_	PUNCT	_	_	22	punct	_	_
17	where	_	SCONJ	_	_	22	mark	_	_
18	yyyy	_	NUM	_	_	22	nsubj	_	_
19	is	_	AUX	_	_	22	cop	_	_
20	greater	_	ADJ	_	_	22	advmod	_	_
21	than	_	SCONJ	_	_	20	fixed	_	_
22	xxxx	_	NUM	_	_	13	acl:relcl	_	SpaceAfter=No
23	)	_	PUNCT	_	_	13	punct	_	_
24	to	_	PART	_	_	25	mark	_	_
25	identify	_	VERB	_	_	11	acl	_	_
26	multiple	_	ADJ	_	_	28	amod	_	_
27	subscription	_	NOUN	_	_	28	nmod	_	_
28	versions	_	NOUN	_	_	25	obj	_	_
29	that	_	PRON	_	_	30	nsubj	_	_
30	contain	_	VERB	_	_	28	acl:relcl	_	_
31	a	_	DET	_	_	34	det	_	_
32	Failed	_	ADJ	_	_	33	amod	_	_
33	SP	_	NOUN	_	_	34	nmod	_	_
34	List	_	NOUN	_	_	30	obj	_	_
35	with	_	ADP	_	_	39	case	_	_
36	one	_	NUM	_	_	39	nummod	_	_
37	or	_	CCONJ	_	_	38	cc	_	_
38	more	_	ADV	_	_	36	conj	_	_
39	SPIDS	_	NOUN	_	_	34	nmod	_	SpaceAfter=No
40	,	_	PUNCT	_	_	43	punct	_	_
41	to	_	PART	_	_	43	mark	_	_
42	be	_	AUX	_	_	43	aux:pass	_	_
43	resent	_	VERB	_	_	11	acl	_	SpaceAfter=No
44	.	_	PUNCT	_	_	4	punct	_	_

# newdoc id = 2001_npac_5.1.2.2.7_RR5-78
# sent_id = 272
# text = NPAC SMS shall update the status of the Subscription Version(s) and the Block, specified in the re-send request for a Block Creation, Modification, or Deletion, at the completion of the re-send to the Local SMS, and a response from the Local SMS or if retries have been exhausted, from a sending status, as defined in RR3-137.1, RR3-137.2 RR3-137.3, and RR3-137.4. (Previously SV-515)
1	NPAC	_	PROPN	_	_	2	nmod	_	_
2	SMS	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	update	_	VERB	_	_	0	root	_	_
5	the	_	DET	_	_	6	det	_	_
6	status	_	NOUN	_	_	4	obj	_	_
7	of	_	ADP	_	_	10	case	_	_
8	the	_	DET	_	_	10	det	_	_
9	Subscription	_	NOUN	_	_	10	nmod	_	_
10	Version	_	NOUN	_	_	6	nmod	_	SpaceAfter=No
11	(	_	PUNCT	_	_	12	punct	_	SpaceAfter=No
12	s	_	X	_	_	10	dep	_	SpaceAfter=No
13	)	_	PUNCT	_	_	12	punct	_	_
14	and	_	CCONJ	_	_	16	cc	_	_
15	the	_	DET	_	_	16	det	_	_
16	Block	_	NOUN	_	_	10	conj	_	SpaceAfter=No
17	,	_	PUNCT	_	_	18	punct	_	_
18	specified	_	VERB	_	_	6	acl	_	_
19	in	_	ADP	_	_	24	case	_	_
20	the	_	DET	_	_	24	det	_	_
21	re	_	ADV	_	_	23	advmod	_	SpaceAfter=No
22	-	_	PUNCT	_	_	23	punct	_	SpaceAfter=No
23	send	_	VERB	_	_	24	compound	_	_
24	request	_	NOUN	_	_	18	obl	_	_
25	for	_	ADP	_	_	28	case	_	_
26	a	_	DET	_	_	28	det	_	_
27	Block	_	NOUN	_	_	28	nmod	_	_
28	Creation	_	NOUN	_	_	24	nmod	_	SpaceAfter=No
29	,	_	PUNCT	_	_	30	punct	_	_
30	Modification	_	NOUN	_	_	28	compound	_	SpaceAfter=No
31	,	_	PUNCT	_	_	33	punct	_	_
32	or	_	CCONJ	_	_	33	cc	_	_
33	Deletion	_	NOUN	_	_	28	compound	_	SpaceAfter=No
34	,	_	PUNCT	_	_	37	punct	_	_
35	at	_	ADP	_	_	37	case	_	_
36	the	_	DET	_	_	37	det	_	_
37	completion	_	NOUN	_	_	4	obl	_	_
38	of	_	ADP	_	_	42	case	_	_
39	the	_	DET	_	_	42	det	_	_
40	re	_	ADV	_	_	42	advmod	_	SpaceAfter=No
41	-	_	PUNCT	_	_	42	punct	_	SpaceAfter=No
42	send	_	VERB	_	_	37	nmod	_	_
43	to	_	ADP	_	_	46	case	_	_
44	the	_	DET	_	_	46	det	_	_
45	Local	_	ADJ	_	_	46	amod	_	_
46	SMS	_	NOUN	_	_	42	obl	_	SpaceAfter=No
47	,	_	PUNCT	_	_	50	punct	_	_
48	and	_	CCONJ	_	_	50	cc	_	_
49	a	_	DET	_	_	50	det	_	_
50	response	_	NOUN	_	_	6	conj	_	_
51	from	_	ADP	_	_	54	case	_	_
52	the	_	DET	_	_	54	det	_	_
53	Local	_	ADJ	_	_	54	amod	_	_
54	SMS	_	NOUN	_	_	50	nmod	_	_
55	or	_	CCONJ	_	_	65	cc	_	_
56	if	_	SCONJ	_	_	60	mark	_	_
57	retries	_	NOUN	_	_	60	nsubj	_	_
58	have	_	AUX	_	_	60	aux	_	_
59	been	_	AUX	_	_	60	aux	_	_
60	exhausted	_	VERB	_	_	4	advcl	_	SpaceAfter=No
61	,	_	PUNCT	_	_	65	punct	_	_
62	from	_	ADP	_	_	65	case	_	_
63	a	_	DET	_	_	65	det	_	_
64	sending	_	NOUN	_	_	65	compound	_	_
65	status	_	NOUN	_	_	54	conj	_	SpaceAfter=No
66	,	_	PUNCT	_	_	68	punct	_	_
67	as	_	SCONJ	_	_	68	mark	_	_
68	defined	_	VERB	_	_	4	advcl	_	_
69	in	_	ADP	_	_	70	case	_	_
70	RR3-137.1	_	PROPN	_	_	68	obl	_	SpaceAfter=No
71	,	_	PUNCT	_	_	72	punct	_	_
72	RR3-137.2	_	PROPN	_	_	70	conj	_	_
73	RR3-137.3	_	PROPN	_	_	70	conj	_	SpaceAfter=No
74	,	_	PUNCT	_	_	76	punct	_	_
75	and	_	CCONJ	_	_	76	cc	_	_
76	RR3-137.4	_	PROPN	_	_	70	conj	_	SpaceAfter=No
77	.	_	PUNCT	_	_	4	punct	_	_
78	(	_	PUNCT	_	_	80	punct	_	SpaceAfter=No
79	Previously	_	ADV	_	_	80	advmod	_	_
80	SV-515	_	PROPN	_	_	4	appos	_	SpaceAfter=No
81	)	_	PUNCT	_	_	80	punct	_	_

# newdoc id = 2001_npac_7.4.1_R7-31
# sent_id = 95
# text = NPAC SMS's login procedure shall be able to be reliably initiated by the user, i.e., a trusted communications path should exist between NPAC SMS and the user during the login procedure.
1	NPAC	_	PROPN	_	_	2	nmod	_	_
2	SMS	_	NOUN	_	_	5	nmod	_	SpaceAfter=No
3	's	_	PART	_	_	2	case	_	_
4	login	_	NOUN	_	_	5	compound	_	_
5	procedure	_	NOUN	_	_	8	nsubj	_	_
6	shall	_	AUX	_	_	8	aux	_	_
7	be	_	AUX	_	_	8	cop	_	_
8	able	_	ADJ	_	_	0	root	_	_
9	to	_	PART	_	_	12	mark	_	_
10	be	_	AUX	_	_	12	aux:pass	_	_
11	reliably	_	ADV	_	_	12	advmod	_	_
12	initiated	_	VERB	_	_	8	xcomp	_	_
13	by	_	ADP	_	_	15	case	_	_
14	the	_	DET	_	_	15	det	_	_
15	user	_	NOUN	_	_	12	obl:agent	_	SpaceAfter=No
16	,	_	PUNCT	_	_	17	punct	_	_
17	i.e.	_	ADV	_	_	24	parataxis	_	SpaceAfter=No
18	,	_	PUNCT	_	_	17	punct	_	_
19	a	_	DET	_	_	22	det	_	_
20	trusted	_	ADJ	_	_	22	amod	_	_
21	communications	_	NOUN	_	_	22	nmod	_	_
22	path	_	NOUN	_	_	24	nsubj	_	_
23	should	_	AUX	_	_	24	aux	_	_
24	exist	_	VERB	_	_	8	parataxis	_	_
25	between	_	ADP	_	_	27	case	_	_
26	NPAC	_	PROPN	_	_	27	nmod	_	_
27	SMS	_	NOUN	_	_	24	obl	_	_
28	and	_	CCONJ	_	_	30	cc	_	_
29	the	_	DET	_	_	30	det	_	_
30	user	_	NOUN	_	_	27	conj	_	_
31	during	_	ADP	_	_	34	case	_	_
32	the	_	DET	_	_	34	det	_	_
33	login	_	NOUN	_	_	34	compound	_	_
34	procedure	_	NOUN	_	_	24	obl	_	SpaceAfter=No
35	.	_	PUNCT	_	_	8	punct	_	_

# newdoc id = 2001_hats_3.2.2.1.2_SRSreq74
# sent_id = 140
# text = When a user selects the Application/Select menu item, the HATS-GUI shall display a list of directory names in the current working directory, allow a user to navigate the directory structure, and allow a user to select a previously created application.
1	When	_	SCONJ	_	_	4	mark	_	_
2	a	_	DET	_	_	3	det	_	_
3	user	_	NOUN	_	_	4	nsubj	_	_
4	selects	_	VERB	_	_	17	advcl	_	_
5	the	_	DET	_	_	10	det	_	_
6	Application	_	NOUN	_	_	10	nmod	_	SpaceAfter=No
7	/	_	SYM	_	_	8	cc	_	SpaceAfter=No
8	Select	_	VERB	_	_	6	conj	_	_
9	menu	_	NOUN	_	_	10	compound	_	_
10	item	_	NOUN	_	_	4	obj	_	SpaceAfter=No
11	,	_	PUNCT	_	_	4	punct	_	_
12	the	_	DET	_	_	15	det	_	_
13	HATS	_	PROPN	_	_	15	nmod	_	SpaceAfter=No
14	-	_	PUNCT	_	_	15	punct	_	SpaceAfter=No
15	GUI	_	NOUN	_	_	17	nsubj	_	_
16	shall	_	AUX	_	_	17	aux	_	_
17	display	_	VERB	_	_	0	root	_	_
18	a	_	DET	_	_	19	det	_	_
19	list	_	NOUN	_	_	17	obj	_	_
20	of	_	ADP	_	_	22	case	_	_
21	directory	_	NOUN	_	_	22	nmod	_	_
22	names	_	NOUN	_	_	19	nmod	_	_
23	in	_	ADP	_	_	27	case	_	_
24	the	_	DET	_	_	27	det	_	_
25	current	_	ADJ	_	_	27	amod	_	_
26	working	_	NOUN	_	_	27	compound	_	_
27	directory	_	NOUN	_	_	17	obl	_	SpaceAfter=No
28	,	_	PUNCT	_	_	29	punct	_	_
29	allow	_	VERB	_	_	17	conj	_	_
30	a	_	DET	_	_	31	det	_	_
31	user	_	NOUN	_	_	29	obj	_	_
32	to	_	PART	_	_	33	mark	_	_
33	navigate	_	VERB	_	_	29	xcomp	_	_
34	the	_	DET	_	_	36	det	_	_
35	directory	_	NOUN	_	_	36	nmod	_	_
36	structure	_	NOUN	_	_	33	obj	_	SpaceAfter=No
37	,	_	PUNCT	_	_	39	punct	_	_
38	and	_	CCONJ	_	_	39	cc	_	_
39	allow	_	VERB	_	_	17	conj	_	_
40	a	_	DET	_	_	41	det	_	_
41	user	_	NOUN	_	_	39	obj	_	_
42	to	_	PART	_	_	43	mark	_	_
43	select	_	VERB	_	_	39	xcomp	_	_
44	a	_	DET	_	_	47	det	_	_
45	previously	_	ADV	_	_	46	advmod	_	_
46	created	_	ADJ	_	_	47	amod	_	_
47	application	_	NOUN	_	_	43	obj	_	SpaceAfter=No
48	.	_	PUNCT	_	_	17	punct	_	_

# sent_id = 141
# text = This application becomes the currently selected application.
1	This	_	DET	_	_	2	det	_	_
2	application	_	NOUN	_	_	3	nsubj	_	_
3	becomes	_	VERB	_	_	0	root	_	_
4	the	_	DET	_	_	7	det	_	_
5	currently	_	ADV	_	_	6	advmod	_	_
6	selected	_	ADJ	_	_	7	amod	_	_
7	application	_	NOUN	_	_	3	obj	_	SpaceAfter=No
8	.	_	PUNCT	_	_	3	punct	_	_

# newdoc id = 2001_npac_7.9.3.7_R7-108.1
# sent_id = 256
# text = NPAC SMS shall support the Service Providers’ acknowledgment via 2 secure electronic forms, Email or FTP using encryption mechanisms.
1	NPAC	_	PROPN	_	_	2	nmod	_	_
2	SMS	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	support	_	VERB	_	_	0	root	_	_
5	the	_	DET	_	_	7	det	_	_
6	Service	_	NOUN	_	_	7	compound	_	_
7	Providers	_	NOUN	_	_	9	nmod	_	SpaceAfter=No
8	’	_	PART	_	_	7	case	_	_
9	acknowledgment	_	NOUN	_	_	4	obj	_	_
10	via	_	ADP	_	_	14	case	_	_
11	2	_	NUM	_	_	14	nummod	_	_
12	secure	_	ADJ	_	_	14	amod	_	_
13	electronic	_	ADJ	_	_	14	amod	_	_
14	forms	_	NOUN	_	_	4	obl	_	SpaceAfter=No
15	,	_	PUNCT	_	_	16	punct	_	_
16	Email	_	NOUN	_	_	14	appos	_	_
17	or	_	CCONJ	_	_	18	cc	_	_
18	FTP	_	PROPN	_	_	16	conj	_	_
19	using	_	VERB	_	_	4	advcl	_	_
20	encryption	_	NOUN	_	_	21	compound	_	_
21	mechanisms	_	NOUN	_	_	19	obj	_	SpaceAfter=No
22	.	_	PUNCT	_	_	4	punct	_	_

# newdoc id = 2000_nasax38_3.2.8.1.1_10
# sent_id = 71
# text = Support Services shall [SRS257] use no more than 5.2 milliseconds of FCP processing time to move the telemetry data to the FCC-MPCC board and complete communication and error handling for the FCC-MPCC board.
1	Support	_	NOUN	_	_	2	compound	_	_
2	Services	_	NOUN	_	_	7	nsubj	_	_
3	shall	_	AUX	_	_	7	aux	_	_
4	[	_	PUNCT	_	_	5	punct	_	SpaceAfter=No
5	SRS257	_	PROPN	_	_	2	appos	_	SpaceAfter=No
6	]	_	PUNCT	_	_	5	punct	_	_
7	use	_	VERB	_	_	0	root	_	_
8	no	_	ADV	_	_	9	advmod	_	_
9	more	_	ADV	_	_	11	advmod	_	_
10	than	_	SCONJ	_	_	9	fixed	_	_
11	5.2	_	NUM	_	_	12	nummod	_	_
12	milliseconds	_	NOUN	_	_	7	obj	_	_
13	of	_	ADP	_	_	16	case	_	_
14	FCP	_	NOUN	_	_	16	nmod	_	_
15	processing	_	NOUN	_	_	16	compound	_	_
16	time	_	NOUN	_	_	12	nmod	_	_
17	to	_	PART	_	_	18	mark	_	_
18	move	_	VERB	_	_	7	advcl	_	_
19	the	_	DET	_	_	21	det	_	_
20	telemetry	_	NOUN	_	_	21	nmod	_	_
21	data	_	NOUN	_	_	18	obj	_	_
22	to	_	ADP	_	_	27	case	_	_
23	the	_	DET	_	_	27	det	_	_
24	FCC	_	NOUN	_	_	27	compound	_	SpaceAfter=No
25	-	_	PUNCT	_	_	26	punct	_	SpaceAfter=No
26	MPCC	_	NOUN	_	_	24	conj	_	_
27	board	_	NOUN	_	_	18	obl	_	_
28	and	_	CCONJ	_	_	29	cc	_	_
29	complete	_	VERB	_	_	18	conj	_	_
30	communication	_	NOUN	_	_	29	obj	_	_
31	and	_	CCONJ	_	_	33	cc	_	_
32	error	_	NOUN	_	_	33	compound	_	_
33	handling	_	NOUN	_	_	30	conj	_	_
34	for	_	ADP	_	_	39	case	_	_
35	the	_	DET	_	_	39	det	_	_
36	FCC	_	NOUN	_	_	39	compound	_	SpaceAfter=No
37	-	_	PUNCT	_	_	38	punct	_	SpaceAfter=No
38	MPCC	_	NOUN	_	_	36	conj	_	_
39	board	_	NOUN	_	_	29	obl	_	SpaceAfter=No
40	.	_	PUNCT	_	_	7	punct	_	_

# newdoc id = 2015_CS4311_3.1.4_Req28
# sent_id = 229
# text = The “Start Flight” screen shall display the flight plan(s) scheduled for the current date using the interface as shown in Fig. 7.
1	The	_	DET	_	_	6	det	_	_
2	“	_	PUNCT	_	_	3	punct	_	SpaceAfter=No
3	Start	_	VERB	_	_	6	compound	_	_
4	Flight	_	NOUN	_	_	3	obj	_	SpaceAfter=No
5	”	_	PUNCT	_	_	3	punct	_	_
6	screen	_	NOUN	_	_	8	nsubj	_	_
7	shall	_	AUX	_	_	8	aux	_	_
8	display	_	VERB	_	_	0	root	_	_
9	the	_	DET	_	_	11	det	_	_
10	flight	_	NOUN	_	_	11	compound	_	_
11	plan	_	NOUN	_	_	8	obj	_	SpaceAfter=No
12	(	_	PUNCT	_	_	13	punct	_	SpaceAfter=No
13	s	_	X	_	_	11	dep	_	SpaceAfter=No
14	)	_	PUNCT	_	_	13	punct	_	_
15	scheduled	_	VERB	_	_	11	acl	_	_
16	for	_	ADP	_	_	19	case	_	_
17	the	_	DET	_	_	19	det	_	_
18	current	_	ADJ	_	_	19	amod	_	_
19	date	_	NOUN	_	_	15	obl	_	_
20	using	_	VERB	_	_	8	advcl	_	_
21	the	_	DET	_	_	22	det	_	_
22	interface	_	NOUN	_	_	20	obj	_	_
23	as	_	SCONJ	_	_	24	mark	_	_
24	shown	_	VERB	_	_	8	advcl	_	_
25	in	_	ADP	_	_	26	case	_	_
26	Fig.	_	NOUN	_	_	24	obl	_	_
27	7	_	NUM	_	_	26	flat	_	SpaceAfter=No
28	.	_	PUNCT	_	_	8	punct	_	_

# newdoc id = 2011_tfms_3.2.1.1.2_SSS86
# sent_id = 80
# text = When a valid Airline Flight Modify message is received for a flight having the flight status of "planned" or "active", the system shall update the existing flight entry in the flight data retained by the system.
1	When	_	SCONJ	_	_	9	mark	_	_
2	a	_	DET	_	_	7	det	_	_
3	valid	_	ADJ	_	_	7	amod	_	_
4	Airline	_	NOUN	_	_	5	nmod	_	_
5	Flight	_	NOUN	_	_	6	obj	_	_
6	Modify	_	VERB	_	_	7	compound	_	_
7	message	_	NOUN	_	_	9	nsubj:pass	_	_
8	is	_	AUX	_	_	9	aux:pass	_	_
9	received	_	VERB	_	_	29	advcl	_	_
10	for	_	ADP	_	_	12	case	_	_
11	a	_	DET	_	_	12	det	_	_
12	flight	_	NOUN	_	_	9	obl	_	_
13	having	_	VERB	_	_	12	acl	_	_
14	the	_	DET	_	_	16	det	_	_
15	flight	_	NOUN	_	_	16	nmod	_	_
16	status	_	NOUN	_	_	13	obj	_	_
17	of	_	ADP	_	_	19	case	_	_
18	"	_	PUNCT	_	_	19	punct	_	SpaceAfter=No
19	planned	_	ADJ	_	_	16	nmod	_	SpaceAfter=No
20	"	_	PUNCT	_	_	19	punct	_	_
21	or	_	CCONJ	_	_	23	cc	_	_
22	"	_	PUNCT	_	_	23	punct	_	SpaceAfter=No
23	active	_	ADJ	_	_	19	conj	_	SpaceAfter=No
24	"	_	PUNCT	_	_	23	punct	_	SpaceAfter=No
25	,	_	PUNCT	_	_	9	punct	_	_
26	the	_	DET	_	_	27	det	_	_
27	system	_	NOUN	_	_	29	nsubj	_	_
28	shall	_	AUX	_	_	29	aux	_	_
29	update	_	VERB	_	_	0	root	_	_
30	the	_	DET	_	_	33	det	_	_
31	existing	_	ADJ	_	_	33	amod	_	_
32	flight	_	NOUN	_	_	33	compound	_	_
33	entry	_	NOUN	_	_	29	obj	_	_
34	in	_	ADP	_	_	37	case	_	_
35	the	_	DET	_	_	37	det	_	_
36	flight	_	NOUN	_	_	37	nmod	_	_
37	data	_	NOUN	_	_	33	nmod	_	_
38	retained	_	VERB	_	_	37	acl	_	_
39	by	_	ADP	_	_	41	case	_	_
40	the	_	DET	_	_	41	det	_	_
41	system	_	NOUN	_	_	38	obl:agent	_	SpaceAfter=No
42	.	_	PUNCT	_	_	29	punct	_	_

# newdoc id = 2006_eirenesys15_4.5.8
# sent_id = 205
# text = EIRENE mobile equipment shall be capable of operating over a standard range of temperatures from -20°C to +55°C. (M)
1	EIRENE	_	PROPN	_	_	3	nmod	_	_
2	mobile	_	ADJ	_	_	3	amod	_	_
3	equipment	_	NOUN	_	_	6	nsubj	_	_
4	shall	_	AUX	_	_	6	aux	_	_
5	be	_	AUX	_	_	6	cop	_	_
6	capable	_	ADJ	_	_	0	root	_	_
7	of	_	SCONJ	_	_	8	mark	_	_
8	operating	_	VERB	_	_	6	xcomp	_	_
9	over	_	ADP	_	_	12	case	_	_
10	a	_	DET	_	_	12	det	_	_
11	standard	_	ADJ	_	_	12	amod	_	_
12	range	_	NOUN	_	_	8	obl	_	_
13	of	_	ADP	_	_	14	case	_	_
14	temperatures	_	NOUN	_	_	12	nmod	_	_
15	from	_	ADP	_	_	17	case	_	_
16	-20	_	NUM	_	_	17	nummod	_	SpaceAfter=No
17	°	_	SYM	_	_	14	nmod	_	SpaceAfter=No
18	C	_	PROPN	_	_	17	compound	_	_
19	to	_	ADP	_	_	21	case	_	_
20	+55	_	NUM	_	_	21	nummod	_	SpaceAfter=No
21	°	_	SYM	_	_	17	nmod	_	SpaceAfter=No
22	C	_	PROPN	_	_	21	compound	_	SpaceAfter=No
23	.	_	PUNCT	_	_	6	punct	_	_
24	(	_	PUNCT	_	_	25	punct	_	SpaceAfter=No
25	M	_	ADJ	_	_	6	advmod	_	SpaceAfter=No
26	)	_	PUNCT	_	_	25	punct	_	_

# newdoc id = 1998_ALQ-172_3.1.2.2.2
# sent_id = 250
# text = As a minimum, the LBJ processors shall have an average of 50 percent spare memory and 50 percent spare throughput.
1	As	_	ADP	_	_	3	case	_	_
2	a	_	DET	_	_	3	det	_	_
3	minimum	_	NOUN	_	_	9	obl	_	SpaceAfter=No
4	,	_	PUNCT	_	_	3	punct	_	_
5	the	_	DET	_	_	7	det	_	_
6	LBJ	_	NOUN	_	_	7	nmod	_	_
7	processors	_	NOUN	_	_	9	nsubj	_	_
8	shall	_	AUX	_	_	9	aux	_	_
9	have	_	VERB	_	_	0	root	_	_
10	an	_	DET	_	_	11	det	_	_
11	average	_	NOUN	_	_	9	obj	_	_
12	of	_	ADP	_	_	16	case	_	_
13	50	_	NUM	_	_	14	nummod	_	_
14	percent	_	NOUN	_	_	16	compound	_	_
15	spare	_	ADJ	_	_	16	amod	_	_
16	memory	_	NOUN	_	_	11	nmod	_	_
17	and	_	CCONJ	_	_	21	cc	_	_
18	50	_	NUM	_	_	19	nummod	_	_
19	percent	_	NOUN	_	_	21	compound	_	_
20	spare	_	ADJ	_	_	21	amod	_	_
21	throughput	_	NOUN	_	_	16	conj	_	SpaceAfter=No
22	.	_	PUNCT	_	_	9	punct	_	_

# sent_id = 251
# text = As a goal, the spare memory and throughput should both be 75 percent.
1	As	_	ADP	_	_	3	case	_	_
2	a	_	DET	_	_	3	det	_	_
3	goal	_	NOUN	_	_	14	obl	_	SpaceAfter=No
4	,	_	PUNCT	_	_	3	punct	_	_
5	the	_	DET	_	_	7	det	_	_
6	spare	_	ADJ	_	_	7	amod	_	_
7	memory	_	NOUN	_	_	14	nsubj	_	_
8	and	_	CCONJ	_	_	9	cc	_	_
9	throughput	_	NOUN	_	_	7	conj	_	_
10	should	_	AUX	_	_	14	aux	_	_
11	both	_	DET	_	_	7	det	_	_
12	be	_	AUX	_	_	14	cop	_	_
13	75	_	NUM	_	_	14	nummod	_	_
14	percent	_	NOUN	_	_	0	root	_	SpaceAfter=No
15	.	_	PUNCT	_	_	14	punct	_	_

# newdoc id = 2011_tfms_3.2.3.3.2.3_SSS3141
# sent_id = 11
# text = When displaying the VIL Precipitation Mosaic data, the system shall provide the capability to display the number of the precipitation levels as the following: a. Up to six levels (1, 2, 3, 4, 5, 6) for displaying the past and current data in Standard Mode b. Up to eight levels (1a, 1b, 1c, 2, 3, 4, 5, 6) for displaying the past and current data in Winter Mode c. Up to four levels (1, 2, 3-4, 5+) for displaying the forecasted data in Standard Mode d. Up to three levels (1a, 1b, 1c+) for displaying the forecasted data in Winter Mode.
1	When	_	SCONJ	_	_	2	mark	_	_
2	displaying	_	VERB	_	_	12	advcl	_	_
3	the	_	DET	_	_	7	det	_	_
4	VIL	_	NOUN	_	_	5	compound	_	_
5	Precipitation	_	NOUN	_	_	6	nmod	_	_
6	Mosaic	_	NOUN	_	_	7	nmod	_	_
7	data	_	NOUN	_	_	2	obj	_	SpaceAfter=No
8	,	_	PUNCT	_	_	2	punct	_	_
9	the	_	DET	_	_	10	det	_	_
10	system	_	NOUN	_	_	12	nsubj	_	_
11	shall	_	AUX	_	_	12	aux	_	_
12	provide	_	VERB	_	_	0	root	_	_
13	the	_	DET	_	_	14	det	_	_
14	capability	_	NOUN	_	_	12	obj	_	_
15	to	_	PART	_	_	16	mark	_	_
16	display	_	VERB	_	_	14	xcomp	_	_
17	the	_	DET	_	_	18	det	_	_
18	number	_	NOUN	_	_	16	obj	_	_
19	of	_	ADP	_	_	22	case	_	_
20	the	_	DET	_	_	22	det	_	_
21	precipitation	_	NOUN	_	_	22	nmod	_	_
22	levels	_	NOUN	_	_	18	nmod	_	_
23	as	_	ADP	_	_	25	case	_	_
24	the	_	DET	_	_	25	det	_	_
25	following	_	NOUN	_	_	16	obl	_	SpaceAfter=No
26	:	_	PUNCT	_	_	32	punct	_	_
27	a	_	NUM	_	_	32	nummod	_	SpaceAfter=No
28	.	_	PUNCT	_	_	27	punct	_	_
29	Up	_	ADV	_	_	31	advmod	_	_
30	to	_	ADP	_	_	29	fixed	_	_
31	six	_	NUM	_	_	32	nummod	_	_
32	levels	_	NOUN	_	_	12	parataxis	_	_
33	(	_	PUNCT	_	_	34	punct	_	SpaceAfter=No
34	1	_	NUM	_	_	32	appos	_	SpaceAfter=No
35	,	_	PUNCT	_	_	36	punct	_	_
36	2	_	NUM	_	_	34	conj	_	SpaceAfter=No
37	,	_	PUNCT	_	_	38	punct	_	_
38	3	_	NUM	_	_	34	conj	_	SpaceAfter=No
39	,	_	PUNCT	_	_	40	punct	_	_
40	4	_	NUM	_	_	34	conj	_	SpaceAfter=No
41	,	_	PUNCT	_	_	42	punct	_	_
42	5	_	NUM	_	_	34	conj	_	SpaceAfter=No
43	,	_	PUNCT	_	_	44	punct	_	_
44	6	_	NUM	_	_	34	conj	_	SpaceAfter=No
45	)	_	PUNCT	_	_	34	punct	_	_
46	for	_	SCONJ	_	_	47	mark	_	_
47	displaying	_	VERB	_	_	32	acl	_	_
48	the	_	DET	_	_	52	det	_	_
49	past	_	ADJ	_	_	52	amod	_	_
50	and	_	CCONJ	_	_	51	cc	_	_
51	current	_	ADJ	_	_	49	conj	_	_
52	data	_	NOUN	_	_	47	obj	_	_
53	in	_	ADP	_	_	55	case	_	_
54	Standard	_	ADJ	_	_	55	amod	_	_
55	Mode	_	NOUN	_	_	47	obl	_	_
56	b	_	NUM	_	_	61	nummod	_	SpaceAfter=No
57	.	_	PUNCT	_	_	56	punct	_	_
58	Up	_	ADV	_	_	60	advmod	_	_
59	to	_	ADP	_	_	58	fixed	_	_
60	eight	_	NUM	_	_	61	nummod	_	_
61	levels	_	NOUN	_	_	32	list	_	_
62	(	_	PUNCT	_	_	63	punct	_	SpaceAfter=No
63	1a	_	NOUN	_	_	61	appos	_	SpaceAfter=No
64	,	_	PUNCT	_	_	65	punct	_	_
65	1b	_	NOUN	_	_	63	conj	_	SpaceAfter=No
66	,	_	PUNCT	_	_	67	punct	_	_
67	1c	_	NOUN	_	_	63	conj	_	SpaceAfter=No
68	,	_	PUNCT	_	_	69	punct	_	_
69	2	_	NUM	_	_	63	conj	_	SpaceAfter=No
70	,	_	PUNCT	_	_	71	punct	_	_
71	3	_	NUM	_	_	63	conj	_	SpaceAfter=No
72	,	_	PUNCT	_	_	73	punct	_	_
73	4	_	NUM	_	_	63	conj	_	SpaceAfter=No
74	,	_	PUNCT	_	_	75	punct	_	_
75	5	_	NUM	_	_	63	conj	_	SpaceAfter=No
76	,	_	PUNCT	_	_	77	punct	_	_
77	6	_	NUM	_	_	63	conj	_	SpaceAfter=No
78	)	_	PUNCT	_	_	63	punct	_	_
79	for	_	SCONJ	_	_	80	mark	_	_
80	displaying	_	VERB	_	_	61	acl	_	_
81	the	_	DET	_	_	85	det	_	_
82	past	_	ADJ	_	_	85	amod	_	_
83	and	_	CCONJ	_	_	84	cc	_	_
84	current	_	ADJ	_	_	82	conj	_	_
85	data	_	NOUN	_	_	80	obj	_	_
86	in	_	ADP	_	_	88	case	_	_
87	Winter	_	NOUN	_	_	88	compound	_	_
88	Mode	_	NOUN	_	_	80	obl	_	_
89	c	_	NUM	_	_	94	nummod	_	SpaceAfter=No
90	.	_	PUNCT	_	_	89	punct	_	_
91	Up	_	ADV	_	_	93	advmod	_	_
92	to	_	ADP	_	_	91	fixed	_	_
93	four	_	NUM	_	_	94	nummod	_	_
94	levels	_	NOUN	_	_	32	list	_	_
95	(	_	PUNCT	_	_	96	punct	_	SpaceAfter=No
96	1	_	NUM	_	_	94	appos	_	SpaceAfter=No
97	,	_	PUNCT	_	_	98	punct	_	_
98	2	_	NUM	_	_	96	conj	_	SpaceAfter=No
99	,	_	PUNCT	_	_	100	punct	_	_
100	3	_	NUM	_	_	96	conj	_	SpaceAfter=No
101	-	_	PUNCT	_	_	102	punct	_	SpaceAfter=No
102	4	_	NUM	_	_	100	conj	_	SpaceAfter=No
103	,	_	PUNCT	_	_	104	punct	_	_
104	5	_	NUM	_	_	96	conj	_	SpaceAfter=No
105	+	_	SYM	_	_	104	advmod	_	SpaceAfter=No
106	)	_	PUNCT	_	_	96	punct	_	_
107	for	_	SCONJ	_	_	108	mark	_	_
108	displaying	_	VERB	_	_	94	acl	_	_
109	the	_	DET	_	_	111	det	_	_
110	forecasted	_	ADJ	_	_	111	amod	_	_
111	data	_	NOUN	_	_	108	obj	_	_
112	in	_	ADP	_	_	114	case	_	_
113	Standard	_	ADJ	_	_	114	amod	_	_
114	Mode	_	NOUN	_	_	108	obl	_	_
115	d	_	NUM	_	_	120	nummod	_	SpaceAfter=No
116	.	_	PUNCT	_	_	115	punct	_	_
117	Up	_	ADV	_	_	119	advmod	_	_
118	to	_	ADP	_	_	117	fixed	_	_
119	three	_	NUM	_	_	120	nummod	_	_
120	levels	_	NOUN	_	_	32	list	_	_
121	(	_	PUNCT	_	_	122	punct	_	SpaceAfter=No
122	1a	_	NOUN	_	_	120	appos	_	SpaceAfter=No
123	,	_	PUNCT	_	_	124	punct	_	_
124	1b	_	NOUN	_	_	122	conj	_	SpaceAfter=No
125	,	_	PUNCT	_	_	126	punct	_	_
126	1c	_	NOUN	_	_	122	conj	_	SpaceAfter=No
127	+	_	SYM	_	_	126	advmod	_	SpaceAfter=No
128	)	_	PUNCT	_	_	122	punct	_	_
129	for	_	SCONJ	_	_	130	mark	_	_
130	displaying	_	VERB	_	_	120	acl	_	_
131	the	_	DET	_	_	133	det	_	_
132	forecasted	_	ADJ	_	_	133	amod	_	_
133	data	_	NOUN	_	_	130	obj	_	_
134	in	_	ADP	_	_	136	case	_	_
135	Winter	_	NOUN	_	_	136	compound	_	_
136	Mode	_	NOUN	_	_	130	obl	_	SpaceAfter=No
137	.	_	PUNCT	_	_	12	punct	_	_

# newdoc id = 2001_hats_3.2.2.3_SRSreq93
# sent_id = 241
# text = The HATS-GUI shall collect process exit codes from HATS-SML processes.
1	The	_	DET	_	_	4	det	_	_
2	HATS	_	PROPN	_	_	4	nmod	_	SpaceAfter=No
3	-	_	PUNCT	_	_	4	punct	_	SpaceAfter=No
4	GUI	_	NOUN	_	_	6	nsubj	_	_
5	shall	_	AUX	_	_	6	aux	_	_
6	collect	_	VERB	_	_	0	root	_	_
7	process	_	NOUN	_	_	9	nmod	_	_
8	exit	_	NOUN	_	_	9	compound	_	_
9	codes	_	NOUN	_	_	6	obj	_	_
10	from	_	ADP	_	_	14	case	_	_
11	HATS	_	PROPN	_	_	13	nmod	_	SpaceAfter=No
12	-	_	PUNCT	_	_	13	punct	_	SpaceAfter=No
13	SML	_	NOUN	_	_	14	nmod	_	_
14	processes	_	NOUN	_	_	9	nmod	_	SpaceAfter=No
15	.	_	PUNCT	_	_	6	punct	_	_

# sent_id = 242
# text = Process exit codes of 0 indicate nominal completion of the process.
1	Process	_	NOUN	_	_	3	nmod	_	_
2	exit	_	NOUN	_	_	3	compound	_	_
3	codes	_	NOUN	_	_	6	nsubj	_	_
4	of	_	ADP	_	_	5	case	_	_
5	0	_	NUM	_	_	3	nmod	_	_
6	indicate	_	VERB	_	_	0	root	_	_
7	nominal	_	ADJ	_	_	8	amod	_	_
8	completion	_	NOUN	_	_	6	obj	_	_
9	of	_	ADP	_	_	11	case	_	_
10	the	_	DET	_	_	11	det	_	_
11	process	_	NOUN	_	_	8	nmod	_	SpaceAfter=No
12	.	_	PUNCT	_	_	6	punct	_	_

# sent_id = 243
# text = Process exit codes other than 0 indicate failure.
1	Process	_	NOUN	_	_	3	nmod	_	_
2	exit	_	NOUN	_	_	3	compound	_	_
3	codes	_	NOUN	_	_	7	nsubj	_	_
4	other	_	ADJ	_	_	6	advmod	_	_
5	than	_	ADP	_	_	4	fixed	_	_
6	0	_	NUM	_	_	3	nmod	_	_
7	indicate	_	VERB	_	_	0	root	_	_
8	failure	_	NOUN	_	_	7	obj	_	SpaceAfter=No
9	.	_	PUNCT	_	_	7	punct	_	_

# newdoc id = 2001_ctcnetwork_tab25_C2C-CG-07
# sent_id = 237
# text = Once an Center is selected, the user shall be able to select a CCTV from a list and provide the following information: · Target CCTV · Device control including: - Pan - Tilt - Zoom
1	Once	_	SCONJ	_	_	5	mark	_	_
2	an	_	DET	_	_	3	det	_	_
3	Center	_	NOUN	_	_	5	nsubj:pass	_	_
4	is	_	AUX	_	_	5	aux:pass	_	_
5	selected	_	VERB	_	_	11	advcl	_	SpaceAfter=No
6	,	_	PUNCT	_	_	5	punct	_	_
7	the	_	DET	_	_	8	det	_	_
8	user	_	NOUN	_	_	11	nsubj	_	_
9	shall	_	AUX	_	_	11	aux	_	_
10	be	_	AUX	_	_	11	cop	_	_
11	able	_	ADJ	_	_	0	root	_	_
12	to	_	PART	_	_	13	mark	_	_
13	select	_	VERB	_	_	11	xcomp	_	_
14	a	_	DET	_	_	15	det	_	_
15	CCTV	_	NOUN	_	_	13	obj	_	_
16	from	_	ADP	_	_	18	case	_	_
17	a	_	DET	_	_	18	det	_	_
18	list	_	NOUN	_	_	13	obl	_	_
19	and	_	CCONJ	_	_	20	cc	_	_
20	provide	_	VERB	_	_	13	conj	_	_
21	the	_	DET	_	_	23	det	_	_
22	following	_	ADJ	_	_	23	amod	_	_
23	information	_	NOUN	_	_	20	obj	_	SpaceAfter=No
24	:	_	PUNCT	_	_	27	punct	_	_
25	·	_	PUNCT	_	_	27	punct	_	_
26	Target	_	ADJ	_	_	27	amod	_	_
27	CCTV	_	NOUN	_	_	20	parataxis	_	_
28	·	_	PUNCT	_	_	30	punct	_	_
29	Device	_	NOUN	_	_	30	nmod	_	_
30	control	_	NOUN	_	_	27	list	_	_
31	including	_	ADP	_	_	34	case	_	SpaceAfter=No
32	:	_	PUNCT	_	_	34	punct	_	_
33	-	_	PUNCT	_	_	34	punct	_	_
34	Pan	_	VERB	_	_	30	nmod	_	_
35	-	_	PUNCT	_	_	36	punct	_	_
36	Tilt	_	VERB	_	_	34	list	_	_
37	-	_	PUNCT	_	_	38	punct	_	_
38	Zoom	_	VERB	_	_	34	list	_	_

# newdoc id = 2006_eirenesys15_9.7.3
# sent_id = 177
# text = Within each GSM-R network, the following relationships between the MSISDN Subscriber Number and the National EIRENE Number can be identified: - the MSISDN Subscriber Number shall be equal to the National EIRENE Number for Call Type = 8; (M) - the MSISDN number may be equal to the National EIRENE Number for any other Call Type. (O)
1	Within	_	ADP	_	_	4	case	_	_
2	each	_	DET	_	_	4	det	_	_
3	GSM-R	_	PROPN	_	_	4	nmod	_	_
4	network	_	NOUN	_	_	21	obl	_	SpaceAfter=No
5	,	_	PUNCT	_	_	4	punct	_	_
6	the	_	DET	_	_	8	det	_	_
7	following	_	ADJ	_	_	8	amod	_	_
8	relationships	_	NOUN	_	_	21	nsubj:pass	_	_
9	between	_	ADP	_	_	13	case	_	_
10	the	_	DET	_	_	13	det	_	_
11	MSISDN	_	NOUN	_	_	13	compound	_	_
12	Subscriber	_	NOUN	_	_	13	nmod	_	_
13	Number	_	NOUN	_	_	8	nmod	_	_
14	and	_	CCONJ	_	_	18	cc	_	_
15	the	_	DET	_	_	18	det	_	_
16	National	_	ADJ	_	_	18	amod	_	_
17	EIRENE	_	PROPN	_	_	18	nmod	_	_
18	Number	_	NOUN	_	_	13	conj	_	_
19	can	_	AUX	_	_	21	aux	_	_
20	be	_	AUX	_	_	21	aux:pass	_	_
21	identified	_	VERB	_	_	0	root	_	SpaceAfter=No
22	:	_	PUNCT	_	_	35	punct	_	_
23	-	_	PUNCT	_	_	35	punct	_	_
24	the	_	DET	_	_	27	det	_	_
25	MSISDN	_	NOUN	_	_	27	compound	_	_
26	Subscriber	_	NOUN	_	_	27	nmod	_	_
27	Number	_	NOUN	_	_	35	nsubj	_	_
28	shall	_	AUX	_	_	35	aux	_	_
29	be	_	AUX	_	_	35	cop	_	_
30	equal	_	ADJ	_	_	35	advmod	_	_
31	to	_	ADP	_	_	30	fixed	_	_
32	the	_	DET	_	_	35	det	_	_
33	National	_	ADJ	_	_	35	amod	_	_
34	EIRENE	_	PROPN	_	_	35	nmod	_	_
35	Number	_	NOUN	_	_	21	parataxis	_	_
36	for	_	ADP	_	_	39	mark	_	_
37	Call	_	NOUN	_	_	38	compound	_	_
38	Type	_	NOUN	_	_	39	nsubj	_	_
39	=	_	SYM	_	_	35	advcl	_	_
40	8	_	NUM	_	_	39	obj	_	SpaceAfter=No
41	;	_	PUNCT	_	_	40	punct	_	_
42	(	_	PUNCT	_	_	43	punct	_	SpaceAfter=No
43	M	_	ADJ	_	_	35	advmod	_	SpaceAfter=No
44	)	_	PUNCT	_	_	43	punct	_	_
45	-	_	PUNCT	_	_	56	punct	_	_
46	the	_	DET	_	_	48	det	_	_
47	MSISDN	_	NOUN	_	_	48	compound	_	_
48	number	_	NOUN	_	_	56	nsubj	_	_
49	may	_	AUX	_	_	56	aux	_	_
50	be	_	AUX	_	_	56	cop	_	_
51	equal	_	ADJ	_	_	56	advmod	_	_
52	to	_	ADP	_	_	51	fixed	_	_
53	the	_	DET	_	_	56	det	_	_
54	National	_	ADJ	_	_	56	amod	_	_
55	EIRENE	_	PROPN	_	_	56	nmod	_	_
56	Number	_	NOUN	_	_	35	list	_	_
57	for	_	ADP	_	_	61	case	_	_
58	any	_	DET	_	_	61	det	_	_
59	other	_	ADJ	_	_	61	amod	_	_
60	Call	_	NOUN	_	_	61	compound	_	_
61	Type	_	NOUN	_	_	56	nmod	_	SpaceAfter=No
62	.	_	PUNCT	_	_	61	punct	_	_
63	(	_	PUNCT	_	_	64	punct	_	SpaceAfter=No
64	O	_	ADJ	_	_	56	advmod	_	SpaceAfter=No
65	)	_	PUNCT	_	_	64	punct	_	_

# newdoc id = 2006_eirenesys15_5.5.20
# sent_id = 257
# text = The Cab radio shall arbitrate between calls when: - an incoming call is received whilst the Cab radio is in an on-going call; (M) - a Cab radio user attempts to initiate a call whilst the Cab radio is in an on-going call. (M)
1	The	_	DET	_	_	3	det	_	_
2	Cab	_	NOUN	_	_	3	compound	_	_
3	radio	_	NOUN	_	_	5	nsubj	_	_
4	shall	_	AUX	_	_	5	aux	_	_
5	arbitrate	_	VERB	_	_	0	root	_	_
6	between	_	ADP	_	_	7	case	_	_
7	calls	_	NOUN	_	_	5	obl	_	_
8	when	_	SCONJ	_	_	15	mark	_	SpaceAfter=No
9	:	_	PUNCT	_	_	15	punct	_	_
10	-	_	PUNCT	_	_	15	punct	_	_
11	an	_	DET	_	_	13	det	_	_
12	incoming	_	ADJ	_	_	13	amod	_	_
13	call	_	NOUN	_	_	15	nsubj:pass	_	_
14	is	_	AUX	_	_	15	aux:pass	_	_
15	received	_	VERB	_	_	5	advcl	_	_
16	whilst	_	SCONJ	_	_	24	mark	_	_
17	the	_	DET	_	_	19	det	_	_
18	Cab	_	NOUN	_	_	19	compound	_	_
19	radio	_	NOUN	_	_	24	nsubj	_	_
20	is	_	AUX	_	_	24	cop	_	_
21	in	_	ADP	_	_	24	case	_	_
22	an	_	DET	_	_	24	det	_	_
23	on-going	_	ADJ	_	_	24	amod	_	_
24	call	_	NOUN	_	_	15	advcl	_	SpaceAfter=No
25	;	_	PUNCT	_	_	24	punct	_	_
26	(	_	PUNCT	_	_	27	punct	_	SpaceAfter=No
27	M	_	ADJ	_	_	15	advmod	_	SpaceAfter=No
28	)	_	PUNCT	_	_	27	punct	_	_
29	-	_	PUNCT	_	_	34	punct	_	_
30	a	_	DET	_	_	33	det	_	_
31	Cab	_	NOUN	_	_	32	compound	_	_
32	radio	_	NOUN	_	_	33	nmod	_	_
33	user	_	NOUN	_	_	34	nsubj	_	_
34	attempts	_	VERB	_	_	15	list	_	_
35	to	_	PART	_	_	36	mark	_	_
36	initiate	_	VERB	_	_	34	xcomp	_	_
37	a	_	DET	_	_	38	det	_	_
38	call	_	NOUN	_	_	36	obj	_	_
39	whilst	_	SCONJ	_	_	47	mark	_	_
40	the	_	DET	_	_	42	det	_	_
41	Cab	_	NOUN	_	_	42	compound	_	_
42	radio	_	NOUN	_	_	47	nsubj	_	_
43	is	_	AUX	_	_	47	cop	_	_
44	in	_	ADP	_	_	47	case	_	_
45	an	_	DET	_	_	47	det	_	_
46	on-going	_	ADJ	_	_	47	amod	_	_
47	call	_	NOUN	_	_	36	advcl	_	SpaceAfter=No
48	.	_	PUNCT	_	_	47	punct	_	_
49	(	_	PUNCT	_	_	50	punct	_	SpaceAfter=No
50	M	_	ADJ	_	_	34	advmod	_	SpaceAfter=No
51	)	_	PUNCT	_	_	50	punct	_	_

# newdoc id = 2011_tfms_3.2.1.1.4_SSS419
# sent_id = 72
# text = When actual route data is not available, the system shall retain as part of the flight intent data, the most probable previously used route data associated with the city-pair, user group, and/or aircraft type of subject flight.
1	When	_	SCONJ	_	_	7	mark	_	_
2	actual	_	ADJ	_	_	4	amod	_	_
3	route	_	NOUN	_	_	4	nmod	_	_
4	data	_	NOUN	_	_	7	nsubj	_	_
5	is	_	AUX	_	_	7	cop	_	_
6	not	_	PART	_	_	7	advmod	_	_
7	available	_	ADJ	_	_	12	advcl	_	SpaceAfter=No
8	,	_	PUNCT	_	_	7	punct	_	_
9	the	_	DET	_	_	10	det	_	_
10	system	_	NOUN	_	_	12	nsubj	_	_
11	shall	_	AUX	_	_	12	aux	_	_
12	retain	_	VERB	_	_	0	root	_	_
13	as	_	ADP	_	_	14	case	_	_
14	part	_	NOUN	_	_	12	obl	_	_
15	of	_	ADP	_	_	19	case	_	_
16	the	_	DET	_	_	19	det	_	_
17	flight	_	NOUN	_	_	18	compound	_	_
18	intent	_	NOUN	_	_	19	nmod	_	_
19	data	_	NOUN	_	_	14	nmod	_	SpaceAfter=No
20	,	_	PUNCT	_	_	27	punct	_	_
21	the	_	DET	_	_	27	det	_	_
22	most	_	ADV	_	_	23	advmod	_	_
23	probable	_	ADJ	_	_	27	amod	_	_
24	previously	_	ADV	_	_	25	advmod	_	_
25	used	_	ADJ	_	_	27	amod	_	_
26	route	_	NOUN	_	_	27	nmod	_	_
27	data	_	NOUN	_	_	12	obj	_	_
28	associated	_	VERB	_	_	27	acl	_	_
29	with	_	ADP	_	_	33	case	_	_
30	the	_	DET	_	_	33	det	_	_
31	city	_	NOUN	_	_	33	compound	_	SpaceAfter=No
32	-	_	PUNCT	_	_	33	punct	_	SpaceAfter=No
33	pair	_	NOUN	_	_	28	obl	_	SpaceAfter=No
34	,	_	PUNCT	_	_	36	punct	_	_
35	user	_	NOUN	_	_	36	nmod	_	_
36	group	_	NOUN	_	_	33	conj	_	SpaceAfter=No
37	,	_	PUNCT	_	_	42	punct	_	_
38	and	_	CCONJ	_	_	42	cc	_	SpaceAfter=No
39	/	_	SYM	_	_	40	cc	_	SpaceAfter=No
40	or	_	CCONJ	_	_	38	conj	_	_
41	aircraft	_	NOUN	_	_	42	nmod	_	_
42	type	_	NOUN	_	_	33	conj	_	_
43	of	_	ADP	_	_	45	case	_	_
44	subject	_	NOUN	_	_	45	compound	_	_
45	flight	_	NOUN	_	_	42	nmod	_	SpaceAfter=No
46	.	_	PUNCT	_	_	12	punct	_	_

# newdoc id = 2007_nde_3.3.5
# sent_id = 135
# text = ESPC Operations shall provide an interface between NDE and the NPOESS Mission Management Center (MMC) such that 100% of the NDE inquiries to the MMC and NDE replies to MMC requests are received by the MMC in a time not to exceed that specified in the ICD, and that 100% of the notifications and inquiries from the MMC to NDE are received by NDE in a time not to exceed that specified by the ICD.
1	ESPC	_	PROPN	_	_	2	nmod	_	_
2	Operations	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	provide	_	VERB	_	_	0	root	_	_
5	an	_	DET	_	_	6	det	_	_
6	interface	_	NOUN	_	_	4	obj	_	_
7	between	_	ADP	_	_	8	case	_	_
8	NDE	_	PROPN	_	_	6	nmod	_	_
9	and	_	CCONJ	_	_	14	cc	_	_
10	the	_	DET	_	_	14	det	_	_
11	NPOESS	_	PROPN	_	_	14	nmod	_	_
12	Mission	_	NOUN	_	_	13	compound	_	_
13	Management	_	NOUN	_	_	14	compound	_	_
14	Center	_	NOUN	_	_	8	conj	_	_
15	(	_	PUNCT	_	_	16	punct	_	SpaceAfter=No
16	MMC	_	PROPN	_	_	14	appos	_	SpaceAfter=No
17	)	_	PUNCT	_	_	16	punct	_	_
18	such	_	ADJ	_	_	36	mark	_	_
19	that	_	SCONJ	_	_	18	fixed	_	_
20	100	_	NUM	_	_	21	nummod	_	SpaceAfter=No
21	%	_	SYM	_	_	36	nsubj:pass	_	_
22	of	_	ADP	_	_	25	case	_	_
23	the	_	DET	_	_	25	det	_	_
24	NDE	_	PROPN	_	_	25	nmod	_	_
25	inquiries	_	NOUN	_	_	21	nmod	_	_
26	to	_	ADP	_	_	28	case	_	_
27	the	_	DET	_	_	28	det	_	_
28	MMC	_	PROPN	_	_	25	nmod	_	_
29	and	_	CCONJ	_	_	31	cc	_	_
30	NDE	_	PROPN	_	_	31	nmod	_	_
31	replies	_	NOUN	_	_	25	conj	_	_
32	to	_	ADP	_	_	34	case	_	_
33	MMC	_	PROPN	_	_	34	nmod	_	_
34	requests	_	NOUN	_	_	31	nmod	_	_
35	are	_	AUX	_	_	36	aux:pass	_	_
36	received	_	VERB	_	_	6	acl	_	_
37	by	_	ADP	_	_	39	case	_	_
38	the	_	DET	_	_	39	det	_	_
39	MMC	_	PROPN	_	_	36	obl:agent	_	_
40	in	_	ADP	_	_	42	case	_	_
41	a	_	DET	_	_	42	det	_	_
42	time	_	NOUN	_	_	36	obl	_	_
43	not	_	PART	_	_	45	advmod	_	_
44	to	_	PART	_	_	45	mark	_	_
45	exceed	_	VERB	_	_	42	acl	_	_
46	that	_	PRON	_	_	45	obj	_	_
47	specified	_	VERB	_	_	46	acl	_	_
48	in	_	ADP	_	_	50	case	_	_
49	the	_	DET	_	_	50	det	_	_
50	ICD	_	NOUN	_	_	47	obl	_	SpaceAfter=No
51	,	_	PUNCT	_	_	67	punct	_	_
52	and	_	CCONJ	_	_	67	cc	_	_
53	that	_	SCONJ	_	_	67	mark	_	_
54	100	_	NUM	_	_	55	nummod	_	SpaceAfter=No
55	%	_	SYM	_	_	67	nsubj:pass	_	_
56	of	_	ADP	_	_	58	case	_	_
57	the	_	DET	_	_	58	det	_	_
58	notifications	_	NOUN	_	_	55	nmod	_	_
59	and	_	CCONJ	_	_	60	cc	_	_
60	inquiries	_	NOUN	_	_	58	conj	_	_
61	from	_	ADP	_	_	63	case	_	_
62	the	_	DET	_	_	63	det	_	_
63	MMC	_	PROPN	_	_	58	nmod	_	_
64	to	_	ADP	_	_	65	case	_	_
65	NDE	_	PROPN	_	_	58	nmod	_	_
66	are	_	AUX	_	_	67	aux:pass	_	_
67	received	_	VERB	_	_	36	conj	_	_
68	by	_	ADP	_	_	69	case	_	_
69	NDE	_	PROPN	_	_	67	obl:agent	_	_
70	in	_	ADP	_	_	72	case	_	_
71	a	_	DET	_	_	72	det	_	_
72	time	_	NOUN	_	_	67	obl	_	_
73	not	_	PART	_	_	75	advmod	_	_
74	to	_	PART	_	_	75	mark	_	_
75	exceed	_	VERB	_	_	72	acl	_	_
76	that	_	PRON	_	_	75	obj	_	_
77	specified	_	VERB	_	_	76	acl	_	_
78	by	_	ADP	_	_	80	case	_	_
79	the	_	DET	_	_	80	det	_	_
80	ICD	_	NOUN	_	_	77	obl:agent	_	SpaceAfter=No
81	.	_	PUNCT	_	_	4	punct	_	_

# newdoc id = 2005_pontis_4.1_1.5
# sent_id = 155
# text = The user shall be able to enter a WHERE clause of the SQL query in the Find and the Filter window and run a query against the bridges in the database.
1	The	_	DET	_	_	2	det	_	_
2	user	_	NOUN	_	_	5	nsubj	_	_
3	shall	_	AUX	_	_	5	aux	_	_
4	be	_	AUX	_	_	5	cop	_	_
5	able	_	ADJ	_	_	0	root	_	_
6	to	_	PART	_	_	7	mark	_	_
7	enter	_	VERB	_	_	5	xcomp	_	_
8	a	_	DET	_	_	10	det	_	_
9	WHERE	_	ADV	_	_	10	compound	_	_
10	clause	_	NOUN	_	_	7	obj	_	_
11	of	_	ADP	_	_	14	case	_	_
12	the	_	DET	_	_	14	det	_	_
13	SQL	_	PROPN	_	_	14	compound	_	_
14	query	_	NOUN	_	_	10	nmod	_	_
15	in	_	ADP	_	_	21	case	_	_
16	the	_	DET	_	_	21	det	_	_
17	Find	_	VERB	_	_	21	compound	_	_
18	and	_	CCONJ	_	_	20	cc	_	_
19	the	_	DET	_	_	21	det	_	_
20	Filter	_	VERB	_	_	17	conj	_	_
21	window	_	NOUN	_	_	7	obl	_	_
22	and	_	CCONJ	_	_	23	cc	_	_
23	run	_	VERB	_	_	7	conj	_	_
24	a	_	DET	_	_	25	det	_	_
25	query	_	NOUN	_	_	23	obj	_	_
26	against	_	ADP	_	_	28	case	_	_
27	the	_	DET	_	_	28	det	_	_
28	bridges	_	NOUN	_	_	23	obl	_	_
29	in	_	ADP	_	_	31	case	_	_
30	the	_	DET	_	_	31	det	_	_
31	database	_	NOUN	_	_	28	nmod	_	SpaceAfter=No
32	.	_	PUNCT	_	_	5	punct	_	_

# sent_id = 156
# text = The query will be verified by the application and SQL errors will be reported to the user for correction.
1	The	_	DET	_	_	2	det	_	_
2	query	_	NOUN	_	_	5	nsubj:pass	_	_
3	will	_	AUX	_	_	5	aux	_	_
4	be	_	AUX	_	_	5	aux:pass	_	_
5	verified	_	VERB	_	_	0	root	_	_
6	by	_	ADP	_	_	8	case	_	_
7	the	_	DET	_	_	8	det	_	_
8	application	_	NOUN	_	_	5	obl:agent	_	_
9	and	_	CCONJ	_	_	14	cc	_	_
10	SQL	_	PROPN	_	_	11	compound	_	_
11	errors	_	NOUN	_	_	14	nsubj:pass	_	_
12	will	_	AUX	_	_	14	aux	_	_
13	be	_	AUX	_	_	14	aux:pass	_	_
14	reported	_	VERB	_	_	5	conj	_	_
15	to	_	ADP	_	_	17	case	_	_
16	the	_	DET	_	_	17	det	_	_
17	user	_	NOUN	_	_	14	iobj	_	_
18	for	_	ADP	_	_	19	case	_	_
19	correction	_	NOUN	_	_	14	obl	_	SpaceAfter=No
20	.	_	PUNCT	_	_	5	punct	_	_

# sent_id = 157
# text = This capability shall be an application privilege.
1	This	_	DET	_	_	2	det	_	_
2	capability	_	NOUN	_	_	7	nsubj	_	_
3	shall	_	AUX	_	_	7	aux	_	_
4	be	_	AUX	_	_	7	cop	_	_
5	an	_	DET	_	_	7	det	_	_
6	application	_	NOUN	_	_	7	compound	_	_
7	privilege	_	NOUN	_	_	0	root	_	SpaceAfter=No
8	.	_	PUNCT	_	_	7	punct	_	_

# sent_id = 158
# text = Bridge-level security of the user shall be applied automatically.
1	Bridge	_	NOUN	_	_	3	compound	_	SpaceAfter=No
2	-	_	PUNCT	_	_	3	punct	_	SpaceAfter=No
3	level	_	NOUN	_	_	4	compound	_	_
4	security	_	NOUN	_	_	10	nsubj:pass	_	_
5	of	_	ADP	_	_	7	case	_	_
6	the	_	DET	_	_	7	det	_	_
7	user	_	NOUN	_	_	4	nmod	_	_
8	shall	_	AUX	_	_	10	aux	_	_
9	be	_	AUX	_	_	10	aux:pass	_	_
10	applied	_	VERB	_	_	0	root	_	_
11	automatically	_	ADV	_	_	10	advmod	_	SpaceAfter=No
12	.	_	PUNCT	_	_	10	punct	_	_

# newdoc id = 2019_MOSAR_2.2.7_OpR_S606
# sent_id = 60
# text = The components of the modular spacecraft: subsystems, interfaces and structures shall be able to withstand the space environment for the whole duration of the mission.
1	The	_	DET	_	_	2	det	_	_
2	components	_	NOUN	_	_	15	nsubj	_	_
3	of	_	ADP	_	_	6	case	_	_
4	the	_	DET	_	_	6	det	_	_
5	modular	_	ADJ	_	_	6	amod	_	_
6	spacecraft	_	NOUN	_	_	2	nmod	_	SpaceAfter=No
7	:	_	PUNCT	_	_	8	punct	_	_
8	subsystems	_	NOUN	_	_	2	appos	_	SpaceAfter=No
9	,	_	PUNCT	_	_	10	punct	_	_
10	interfaces	_	NOUN	_	_	8	conj	_	_
11	and	_	CCONJ	_	_	12	cc	_	_
12	structures	_	NOUN	_	_	8	conj	_	_
13	shall	_	AUX	_	_	15	aux	_	_
14	be	_	AUX	_	_	15	cop	_	_
15	able	_	ADJ	_	_	0	root	_	_
16	to	_	PART	_	_	17	mark	_	_
17	withstand	_	VERB	_	_	15	xcomp	_	_
18	the	_	DET	_	_	20	det	_	_
19	space	_	NOUN	_	_	20	nmod	_	_
20	environment	_	NOUN	_	_	17	obj	_	_
21	for	_	ADP	_	_	24	case	_	_
22	the	_	DET	_	_	24	det	_	_
23	whole	_	ADJ	_	_	24	amod	_	_
24	duration	_	NOUN	_	_	17	obl	_	_
25	of	_	ADP	_	_	27	case	_	_
26	the	_	DET	_	_	27	det	_	_
27	mission	_	NOUN	_	_	24	nmod	_	SpaceAfter=No
28	.	_	PUNCT	_	_	15	punct	_	_

# newdoc id = 2007_eirenefun7_5.2.2.63
# sent_id = 195
# text = The Cab radio shall support a ‘shunting mode’ of operation that provides a link assurance tone to reassure users of the integrity of the communication link (see section 14). (M)
1	The	_	DET	_	_	3	det	_	_
2	Cab	_	NOUN	_	_	3	compound	_	_
3	radio	_	NOUN	_	_	5	nsubj	_	_
4	shall	_	AUX	_	_	5	aux	_	_
5	support	_	VERB	_	_	0	root	_	_
6	a	_	DET	_	_	9	det	_	_
7	‘	_	PUNCT	_	_	9	punct	_	SpaceAfter=No
8	shunting	_	NOUN	_	_	9	compound	_	_
9	mode	_	NOUN	_	_	5	obj	_	SpaceAfter=No
10	’	_	PUNCT	_	_	9	punct	_	_
11	of	_	ADP	_	_	12	case	_	_
12	operation	_	NOUN	_	_	9	nmod	_	_
13	that	_	PRON	_	_	14	nsubj	_	_
14	provides	_	VERB	_	_	9	acl:relcl	_	_
15	a	_	DET	_	_	18	det	_	_
16	link	_	NOUN	_	_	17	compound	_	_
17	assurance	_	NOUN	_	_	18	compound	_	_
18	tone	_	NOUN	_	_	14	obj	_	_
19	to	_	PART	_	_	20	mark	_	_
20	reassure	_	VERB	_	_	14	xcomp	_	_
21	users	_	NOUN	_	_	20	obj	_	_
22	of	_	ADP	_	_	24	case	_	_
23	the	_	DET	_	_	24	det	_	_
24	integrity	_	NOUN	_	_	20	obl	_	_
25	of	_	ADP	_	_	28	case	_	_
26	the	_	DET	_	_	28	det	_	_
27	communication	_	NOUN	_	_	28	compound	_	_
28	link	_	NOUN	_	_	24	nmod	_	_
29	(	_	PUNCT	_	_	30	punct	_	SpaceAfter=No
30	see	_	VERB	_	_	5	parataxis	_	_
31	section	_	NOUN	_	_	30	obj	_	_
32	14	_	NUM	_	_	31	flat	_	SpaceAfter=No
33	)	_	PUNCT	_	_	30	punct	_	SpaceAfter=No
34	.	_	PUNCT	_	_	5	punct	_	_
35	(	_	PUNCT	_	_	36	punct	_	SpaceAfter=No
36	M	_	ADJ	_	_	5	advmod	_	SpaceAfter=No
37	)	_	PUNCT	_	_	36	punct	_	_

# newdoc id = 2006_eirenesys15_4.5.10
# sent_id = 249
# text = The equipment shall be capable of coping with temperature variations of up to +/- 1°C/minute. (M)
1	The	_	DET	_	_	2	det	_	_
2	equipment	_	NOUN	_	_	5	nsubj	_	_
3	shall	_	AUX	_	_	5	aux	_	_
4	be	_	AUX	_	_	5	cop	_	_
5	capable	_	ADJ	_	_	0	root	_	_
6	of	_	SCONJ	_	_	7	mark	_	_
7	coping	_	VERB	_	_	5	xcomp	_	_
8	with	_	ADP	_	_	10	case	_	_
9	temperature	_	NOUN	_	_	10	nmod	_	_
10	variations	_	NOUN	_	_	7	obl	_	_
11	of	_	ADP	_	_	18	case	_	_
12	up	_	ADV	_	_	17	advmod	_	_
13	to	_	ADP	_	_	12	fixed	_	_
14	+	_	SYM	_	_	17	advmod	_	SpaceAfter=No
15	/	_	SYM	_	_	16	cc	_	SpaceAfter=No
16	-	_	SYM	_	_	14	conj	_	_
17	1	_	NUM	_	_	18	nummod	_	SpaceAfter=No
18	°	_	SYM	_	_	10	nmod	_	SpaceAfter=No
19	C	_	PROPN	_	_	18	compound	_	SpaceAfter=No
20	/	_	SYM	_	_	21	case	_	SpaceAfter=No
21	minute	_	NOUN	_	_	18	nmod	_	SpaceAfter=No
22	.	_	PUNCT	_	_	5	punct	_	_
23	(	_	PUNCT	_	_	24	punct	_	SpaceAfter=No
24	M	_	ADJ	_	_	5	advmod	_	SpaceAfter=No
25	)	_	PUNCT	_	_	24	punct	_	_

# newdoc id = 2000_nasax38_3.2.6.1_1
# sent_id = 206
# text = Redundancy Management shall [SRS101] define an initial mapping of physical hardware to virtual group identifiers consisting of 1 quadruplex FCP virtual group and 5 ICP simplexes.
1	Redundancy	_	NOUN	_	_	2	compound	_	_
2	Management	_	NOUN	_	_	7	nsubj	_	_
3	shall	_	AUX	_	_	7	aux	_	_
4	[	_	PUNCT	_	_	5	punct	_	SpaceAfter=No
5	SRS101	_	PROPN	_	_	2	appos	_	SpaceAfter=No
6	]	_	PUNCT	_	_	5	punct	_	_
7	define	_	VERB	_	_	0	root	_	_
8	an	_	DET	_	_	10	det	_	_
9	initial	_	ADJ	_	_	10	amod	_	_
10	mapping	_	NOUN	_	_	7	obj	_	_
11	of	_	ADP	_	_	13	case	_	_
12	physical	_	ADJ	_	_	13	amod	_	_
13	hardware	_	NOUN	_	_	10	nmod	_	_
14	to	_	ADP	_	_	17	case	_	_
15	virtual	_	ADJ	_	_	16	amod	_	_
16	group	_	NOUN	_	_	17	nmod	_	_
17	identifiers	_	NOUN	_	_	10	nmod	_	_
18	consisting	_	VERB	_	_	10	acl	_	_
19	of	_	ADP	_	_	24	case	_	_
20	1	_	NUM	_	_	24	nummod	_	_
21	quadruplex	_	ADJ	_	_	24	amod	_	_
22	FCP	_	NOUN	_	_	24	nmod	_	_
23	virtual	_	ADJ	_	_	24	amod	_	_
24	group	_	NOUN	_	_	18	obl	_	_
25	and	_	CCONJ	_	_	28	cc	_	_
26	5	_	NUM	_	_	28	nummod	_	_
27	ICP	_	NOUN	_	_	28	nmod	_	_
28	simplexes	_	NOUN	_	_	24	conj	_	SpaceAfter=No
29	.	_	PUNCT	_	_	7	punct	_	_

# newdoc id = 2010_home1.3_4.5.3
# sent_id = 219
# text = The system shall be able to provide information about the state of a power switch (OFF or ON), indicating the whether an appliance connected to the power switch is OFF or ON.
1	The	_	DET	_	_	2	det	_	_
2	system	_	NOUN	_	_	5	nsubj	_	_
3	shall	_	AUX	_	_	5	aux	_	_
4	be	_	AUX	_	_	5	cop	_	_
5	able	_	ADJ	_	_	0	root	_	_
6	to	_	PART	_	_	7	mark	_	_
7	provide	_	VERB	_	_	5	xcomp	_	_
8	information	_	NOUN	_	_	7	obj	_	_
9	about	_	ADP	_	_	11	case	_	_
10	the	_	DET	_	_	11	det	_	_
11	state	_	NOUN	_	_	8	nmod	_	_
12	of	_	ADP	_	_	15	case	_	_
13	a	_	DET	_	_	15	det	_	_
14	power	_	NOUN	_	_	15	compound	_	_
15	switch	_	NOUN	_	_	11	nmod	_	_
16	(	_	PUNCT	_	_	17	punct	_	SpaceAfter=No
17	OFF	_	ADV	_	_	11	parataxis	_	_
18	or	_	CCONJ	_	_	19	cc	_	_
19	ON	_	ADV	_	_	17	conj	_	SpaceAfter=No
20	)	_	PUNCT	_	_	17	punct	_	SpaceAfter=No
21	,	_	PUNCT	_	_	22	punct	_	_
22	indicating	_	VERB	_	_	11	acl	_	_
23	the	_	DET	_	_	33	det	_	_
24	whether	_	SCONJ	_	_	33	mark	_	_
25	an	_	DET	_	_	26	det	_	_
26	appliance	_	NOUN	_	_	33	nsubj	_	_
27	connected	_	VERB	_	_	26	acl	_	_
28	to	_	ADP	_	_	31	case	_	_
29	the	_	DET	_	_	31	det	_	_
30	power	_	NOUN	_	_	31	compound	_	_
31	switch	_	NOUN	_	_	27	obl	_	_
32	is	_	AUX	_	_	33	cop	_	_
33	OFF	_	ADV	_	_	22	ccomp	_	_
34	or	_	CCONJ	_	_	35	cc	_	_
35	ON	_	ADV	_	_	33	conj	_	SpaceAfter=No
36	.	_	PUNCT	_	_	5	punct	_	_

# newdoc id = 2000_nasax38_3.2.2.1_18
# sent_id = 183
# text = The scheduler shall [SRS181] set the 50 Hz interval timer to a count down value so as to cause the next minor frame interrupt at 20 msec from the previous interrupt congruently in all operational FCPs.
1	The	_	DET	_	_	2	det	_	_
2	scheduler	_	NOUN	_	_	7	nsubj	_	_
3	shall	_	AUX	_	_	7	aux	_	_
4	[	_	PUNCT	_	_	5	punct	_	SpaceAfter=No
5	SRS181	_	PROPN	_	_	2	appos	_	SpaceAfter=No
6	]	_	PUNCT	_	_	5	punct	_	_
7	set	_	VERB	_	_	0	root	_	_
8	the	_	DET	_	_	12	det	_	_
9	50	_	NUM	_	_	10	nummod	_	_
10	Hz	_	NOUN	_	_	11	nmod	_	_
11	interval	_	NOUN	_	_	12	compound	_	_
12	timer	_	NOUN	_	_	7	obj	_	_
13	to	_	ADP	_	_	17	case	_	_
14	a	_	DET	_	_	17	det	_	_
15	count	_	NOUN	_	_	17	nmod	_	_
16	down	_	X	_	_	15	goeswith	_	_
17	value	_	NOUN	_	_	7	iobj	_	_
18	so	_	SCONJ	_	_	21	mark	_	_
19	as	_	SCONJ	_	_	18	fixed	_	_
20	to	_	PART	_	_	18	fixed	_	_
21	cause	_	VERB	_	_	7	advcl	_	_
22	the	_	DET	_	_	26	det	_	_
23	next	_	ADJ	_	_	26	amod	_	_
24	minor	_	ADJ	_	_	25	amod	_	_
25	frame	_	NOUN	_	_	26	nmod	_	_
26	interrupt	_	NOUN	_	_	21	obj	_	_
27	at	_	ADP	_	_	29	case	_	_
28	20	_	NUM	_	_	29	nummod	_	_
29	msec	_	NOUN	_	_	21	obl	_	_
30	from	_	ADP	_	_	33	case	_	_
31	the	_	DET	_	_	33	det	_	_
32	previous	_	ADJ	_	_	33	amod	_	_
33	interrupt	_	NOUN	_	_	29	nmod	_	_
34	congruently	_	ADV	_	_	21	advmod	_	_
35	in	_	ADP	_	_	38	case	_	_
36	all	_	DET	_	_	38	det	_	_
37	operational	_	ADJ	_	_	38	amod	_	_
38	FCPs	_	NOUN	_	_	21	obl	_	SpaceAfter=No
39	.	_	PUNCT	_	_	7	punct	_	_

# newdoc id = 1999_multi-mahjong_5.5.1
# sent_id = 91
# text = The CO must respond within 1 minute in both single and multi player modes.
1	The	_	DET	_	_	2	det	_	_
2	CO	_	NOUN	_	_	4	nsubj	_	_
3	must	_	AUX	_	_	4	aux	_	_
4	respond	_	VERB	_	_	0	root	_	_
5	within	_	ADP	_	_	7	case	_	_
6	1	_	NUM	_	_	7	nummod	_	_
7	minute	_	NOUN	_	_	4	obl	_	_
8	in	_	ADP	_	_	10	case	_	_
9	both	_	CCONJ	_	_	10	cc	_	_
10	single	_	ADJ	_	_	14	amod	_	_
11	and	_	CCONJ	_	_	12	cc	_	_
12	multi	_	ADJ	_	_	10	conj	_	_
13	player	_	X	_	_	12	goeswith	_	_
14	modes	_	NOUN	_	_	4	obl	_	SpaceAfter=No
15	.	_	PUNCT	_	_	4	punct	_	_

# newdoc id = 2006_eirenesys15_3.3.4
# sent_id = 46
# text = There is a quality of service requirement for handover executions (eg a break of 10s would clearly be unacceptable to the user).
1	There	_	PRON	_	_	2	expl	_	_
2	is	_	VERB	_	_	0	root	_	_
3	a	_	DET	_	_	4	det	_	_
4	quality	_	NOUN	_	_	7	nmod	_	_
5	of	_	ADP	_	_	6	case	_	_
6	service	_	NOUN	_	_	4	nmod	_	_
7	requirement	_	NOUN	_	_	2	nsubj	_	_
8	for	_	ADP	_	_	10	case	_	_
9	handover	_	NOUN	_	_	10	nmod	_	_
10	executions	_	NOUN	_	_	7	nmod	_	_
11	(	_	PUNCT	_	_	21	punct	_	SpaceAfter=No
12	eg	_	ADV	_	_	21	parataxis	_	_
13	a	_	DET	_	_	14	det	_	_
14	break	_	NOUN	_	_	21	nsubj	_	_
15	of	_	ADP	_	_	17	case	_	_
16	10	_	NUM	_	_	17	nummod	_	SpaceAfter=No
17	s	_	NOUN	_	_	14	nmod	_	_
18	would	_	AUX	_	_	21	aux	_	_
19	clearly	_	ADV	_	_	21	advmod	_	_
20	be	_	AUX	_	_	21	cop	_	_
21	unacceptable	_	ADJ	_	_	2	parataxis	_	_
22	to	_	ADP	_	_	24	case	_	_
23	the	_	DET	_	_	24	det	_	_
24	user	_	NOUN	_	_	21	obl	_	SpaceAfter=No
25	)	_	PUNCT	_	_	21	punct	_	SpaceAfter=No
26	.	_	PUNCT	_	_	2	punct	_	_

# sent_id = 47
# text = 300ms represents our current best estimate of the QoS figure, although this will need to be confirmed through user trials. (I)
1	300	_	NUM	_	_	2	nummod	_	SpaceAfter=No
2	ms	_	NOUN	_	_	3	nsubj	_	_
3	represents	_	VERB	_	_	0	root	_	_
4	our	_	DET	_	_	7	nmod	_	_
5	current	_	ADJ	_	_	7	amod	_	_
6	best	_	ADJ	_	_	7	amod	_	_
7	estimate	_	NOUN	_	_	3	obj	_	_
8	of	_	ADP	_	_	11	case	_	_
9	the	_	DET	_	_	11	det	_	_
10	QoS	_	NOUN	_	_	11	compound	_	_
11	figure	_	NOUN	_	_	7	nmod	_	SpaceAfter=No
12	,	_	PUNCT	_	_	16	punct	_	_
13	although	_	SCONJ	_	_	16	mark	_	_
14	this	_	PRON	_	_	16	nsubj	_	_
15	will	_	AUX	_	_	16	aux	_	_
16	need	_	VERB	_	_	3	advcl	_	_
17	to	_	PART	_	_	19	mark	_	_
18	be	_	AUX	_	_	19	aux:pass	_	_
19	confirmed	_	VERB	_	_	16	xcomp	_	_
20	through	_	ADP	_	_	22	case	_	_
21	user	_	NOUN	_	_	22	compound	_	_
22	trials	_	NOUN	_	_	19	obl	_	SpaceAfter=No
23	.	_	PUNCT	_	_	3	punct	_	_
24	(	_	PUNCT	_	_	25	punct	_	SpaceAfter=No
25	I	_	ADV	_	_	2	advmod	_	SpaceAfter=No
26	)	_	PUNCT	_	_	25	punct	_	_

# newdoc id = 2007_ertms_4.1.3.2a
# sent_id = 56
# text = Transfer to Shunting on driver’s selection shall only be possible when stationary. (M)
1	Transfer	_	NOUN	_	_	11	nsubj	_	_
2	to	_	ADP	_	_	3	case	_	_
3	Shunting	_	NOUN	_	_	1	nmod	_	_
4	on	_	ADP	_	_	7	case	_	_
5	driver	_	NOUN	_	_	7	nmod	_	SpaceAfter=No
6	’s	_	PART	_	_	5	case	_	_
7	selection	_	NOUN	_	_	1	nmod	_	_
8	shall	_	AUX	_	_	11	aux	_	_
9	only	_	ADV	_	_	11	advmod	_	_
10	be	_	AUX	_	_	11	cop	_	_
11	possible	_	ADJ	_	_	0	root	_	_
12	when	_	SCONJ	_	_	13	mark	_	_
13	stationary	_	ADJ	_	_	11	advcl	_	SpaceAfter=No
14	.	_	PUNCT	_	_	11	punct	_	_
15	(	_	PUNCT	_	_	16	punct	_	SpaceAfter=No
16	M	_	ADJ	_	_	11	advmod	_	SpaceAfter=No
17	)	_	PUNCT	_	_	16	punct	_	_

# newdoc id = 1998_ALQ-172_3.2.4.2.7.1
# sent_id = 128
# text = The Enhanced ALQ-172 and LBJ installation shall be designed to meet the requirements of MIL-STD-464 Paragraphs 5.2, 5.7.1, 5.7.2, 5.8, 5.10 through 5.10.2, and 5.10.4.
1	The	_	DET	_	_	3	det	_	_
2	Enhanced	_	ADJ	_	_	3	amod	_	_
3	ALQ-172	_	PROPN	_	_	6	nmod	_	_
4	and	_	CCONJ	_	_	5	cc	_	_
5	LBJ	_	NOUN	_	_	3	conj	_	_
6	installation	_	NOUN	_	_	9	nsubj:pass	_	_
7	shall	_	AUX	_	_	9	aux	_	_
8	be	_	AUX	_	_	9	aux:pass	_	_
9	designed	_	VERB	_	_	0	root	_	_
10	to	_	PART	_	_	11	case	_	_
11	meet	_	VERB	_	_	9	xcomp	_	_
12	the	_	DET	_	_	13	det	_	_
13	requirements	_	NOUN	_	_	11	obj	_	_
14	of	_	ADP	_	_	15	case	_	_
15	MIL-STD-464	_	PROPN	_	_	13	nmod	_	_
16	Paragraphs	_	NOUN	_	_	15	nmod	_	_
17	5.2	_	NUM	_	_	16	flat	_	SpaceAfter=No
18	,	_	PUNCT	_	_	19	punct	_	_
19	5.7.1	_	NUM	_	_	17	conj	_	SpaceAfter=No
20	,	_	PUNCT	_	_	21	punct	_	_
21	5.7.2	_	NUM	_	_	17	conj	_	SpaceAfter=No
22	,	_	PUNCT	_	_	23	punct	_	_
23	5.8	_	NUM	_	_	17	conj	_	SpaceAfter=No
24	,	_	PUNCT	_	_	25	punct	_	_
25	5.10	_	NUM	_	_	17	conj	_	_
26	through	_	ADP	_	_	27	case	_	_
27	5.10.2	_	NUM	_	_	25	nmod	_	SpaceAfter=No
28	,	_	PUNCT	_	_	30	punct	_	_
29	and	_	CCONJ	_	_	30	cc	_	_
30	5.10.4	_	NUM	_	_	17	conj	_	SpaceAfter=No
31	.	_	PUNCT	_	_	9	punct	_	_

# newdoc id = 2001_esa_3.1.APAF-DR-01
# sent_id = 212
# text = ASPERA-3 and MEX OA IDFS data and any APAF-generated intermediate files of ASPERA-3 and MEX OA cleaned-up telemetry shall be provided to all ASPERA-3 Co-I’s.
1	ASPERA-3	_	PROPN	_	_	6	nmod	_	_
2	and	_	CCONJ	_	_	4	cc	_	_
3	MEX	_	PROPN	_	_	4	nmod	_	_
4	OA	_	NOUN	_	_	1	conj	_	_
5	IDFS	_	NOUN	_	_	6	nmod	_	_
6	data	_	NOUN	_	_	25	nsubj:pass	_	_
7	and	_	CCONJ	_	_	13	cc	_	_
8	any	_	DET	_	_	13	det	_	_
9	APAF	_	PROPN	_	_	11	obl:agent	_	SpaceAfter=No
10	-	_	PUNCT	_	_	11	punct	_	SpaceAfter=No
11	generated	_	VERB	_	_	13	acl	_	_
12	intermediate	_	ADJ	_	_	13	amod	_	_
13	files	_	NOUN	_	_	6	conj	_	_
14	of	_	ADP	_	_	22	case	_	_
15	ASPERA-3	_	PROPN	_	_	22	nmod	_	_
16	and	_	CCONJ	_	_	18	cc	_	_
17	MEX	_	PROPN	_	_	18	nmod	_	_
18	OA	_	PROPN	_	_	15	conj	_	_
19	cleaned	_	VERB	_	_	22	acl	_	SpaceAfter=No
20	-	_	PUNCT	_	_	21	punct	_	SpaceAfter=No
21	up	_	ADP	_	_	19	compound	_	_
22	telemetry	_	NOUN	_	_	13	nmod	_	_
23	shall	_	AUX	_	_	25	aux	_	_
24	be	_	AUX	_	_	25	aux:pass	_	_
25	provided	_	VERB	_	_	0	root	_	_
26	to	_	ADP	_	_	29	case	_	_
27	all	_	DET	_	_	29	det	_	_
28	ASPERA-3	_	PROPN	_	_	29	nmod	_	_
29	Co-I’s	_	NOUN	_	_	25	obl	_	SpaceAfter=No
30	.	_	PUNCT	_	_	25	punct	_	_

# newdoc id = 2000_nasax38_3.2.5.3_2
# sent_id = 62
# text = RAM scrub shall [SRS044] report detected errors to the application, congruently on all channels, via an API service for inclusion in the telemetry stream.
1	RAM	_	NOUN	_	_	2	nmod	_	_
2	scrub	_	NOUN	_	_	7	nsubj	_	_
3	shall	_	AUX	_	_	7	aux	_	_
4	[	_	PUNCT	_	_	5	punct	_	SpaceAfter=No
5	SRS044	_	PROPN	_	_	2	appos	_	SpaceAfter=No
6	]	_	PUNCT	_	_	5	punct	_	_
7	report	_	VERB	_	_	0	root	_	_
8	detected	_	ADJ	_	_	9	amod	_	_
9	errors	_	NOUN	_	_	7	obj	_	_
10	to	_	ADP	_	_	12	case	_	_
11	the	_	DET	_	_	12	det	_	_
12	application	_	NOUN	_	_	7	obl	_	SpaceAfter=No
13	,	_	PUNCT	_	_	12	punct	_	_
14	congruently	_	ADV	_	_	7	advmod	_	_
15	on	_	ADP	_	_	17	case	_	_
16	all	_	DET	_	_	17	det	_	_
17	channels	_	NOUN	_	_	7	obl	_	SpaceAfter=No
18	,	_	PUNCT	_	_	17	punct	_	_
19	via	_	ADP	_	_	22	case	_	_
20	an	_	DET	_	_	22	det	_	_
21	API	_	NOUN	_	_	22	nmod	_	_
22	service	_	NOUN	_	_	7	obl	_	_
23	for	_	ADP	_	_	24	case	_	_
24	inclusion	_	NOUN	_	_	7	obl	_	_
25	in	_	ADP	_	_	28	case	_	_
26	the	_	DET	_	_	28	det	_	_
27	telemetry	_	NOUN	_	_	28	nmod	_	_
28	stream	_	NOUN	_	_	24	nmod	_	SpaceAfter=No
29	.	_	PUNCT	_	_	7	punct	_	_

# newdoc id = 2001_npac_5.1.2.2.1.1_R5-21.3
# sent_id = 2
# text = NPAC SMS shall default the long Initial Concurrence Window tunable parameter to 9 business hours.
1	NPAC	_	PROPN	_	_	2	nmod	_	_
2	SMS	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	default	_	VERB	_	_	0	root	_	_
5	the	_	DET	_	_	11	det	_	_
6	long	_	ADJ	_	_	9	amod	_	_
7	Initial	_	ADJ	_	_	8	amod	_	_
8	Concurrence	_	NOUN	_	_	9	compound	_	_
9	Window	_	NOUN	_	_	11	nmod	_	_
10	tunable	_	ADJ	_	_	11	amod	_	_
11	parameter	_	NOUN	_	_	4	obj	_	_
12	to	_	ADP	_	_	15	case	_	_
13	9	_	NUM	_	_	15	nummod	_	_
14	business	_	NOUN	_	_	15	compound	_	_
15	hours	_	NOUN	_	_	4	obl	_	SpaceAfter=No
16	.	_	PUNCT	_	_	4	punct	_	_

# newdoc id = 2015_CS4311_3.2.3.4_Req114
# sent_id = 84
# text = When the user selects “Delete” and a route has been selected, FPMS shall display a standard Yes-No message box that states “Are you sure that you want to delete this route?”
1	When	_	SCONJ	_	_	4	mark	_	_
2	the	_	DET	_	_	3	det	_	_
3	user	_	NOUN	_	_	4	nsubj	_	_
4	selects	_	VERB	_	_	17	advcl	_	_
5	“	_	PUNCT	_	_	6	punct	_	SpaceAfter=No
6	Delete	_	VERB	_	_	4	obj	_	SpaceAfter=No
7	”	_	PUNCT	_	_	6	punct	_	_
8	and	_	CCONJ	_	_	13	cc	_	_
9	a	_	DET	_	_	10	det	_	_
10	route	_	NOUN	_	_	13	nsubj:pass	_	_
11	has	_	AUX	_	_	13	aux	_	_
12	been	_	AUX	_	_	13	aux:pass	_	_
13	selected	_	VERB	_	_	4	conj	_	SpaceAfter=No
14	,	_	PUNCT	_	_	4	punct	_	_
15	FPMS	_	PROPN	_	_	17	nsubj	_	_
16	shall	_	AUX	_	_	17	aux	_	_
17	display	_	VERB	_	_	0	root	_	_
18	a	_	DET	_	_	24	det	_	_
19	standard	_	ADJ	_	_	24	amod	_	_
20	Yes	_	INTJ	_	_	23	compound	_	SpaceAfter=No
21	-	_	PUNCT	_	_	22	punct	_	SpaceAfter=No
22	No	_	INTJ	_	_	20	conj	_	_
23	message	_	NOUN	_	_	24	compound	_	_
24	box	_	NOUN	_	_	17	obj	_	_
25	that	_	PRON	_	_	26	nsubj	_	_
26	states	_	VERB	_	_	24	acl:relcl	_	_
27	“	_	PUNCT	_	_	30	punct	_	SpaceAfter=No
28	Are	_	AUX	_	_	30	cop	_	_
29	you	_	PRON	_	_	30	nsubj	_	_
30	sure	_	ADJ	_	_	26	parataxis	_	_
31	that	_	SCONJ	_	_	33	mark	_	_
32	you	_	PRON	_	_	33	nsubj	_	_
33	want	_	VERB	_	_	30	ccomp	_	_
34	to	_	PART	_	_	35	mark	_	_
35	delete	_	VERB	_	_	33	xcomp	_	_
36	this	_	DET	_	_	37	det	_	_
37	route	_	NOUN	_	_	35	obj	_	SpaceAfter=No
38	?	_	PUNCT	_	_	17	punct	_	SpaceAfter=No
39	”	_	PUNCT	_	_	38	punct	_	_

# newdoc id = 2019_MOSAR_3.4.3_IntR_B306
# sent_id = 247
# text = The WM shall be able to parse information from/to its data interface through the two SI extremities and translate it in its own local bus for Real-Timer monitor and control of its joins.
1	The	_	DET	_	_	2	det	_	_
2	WM	_	NOUN	_	_	5	nsubj	_	_
3	shall	_	AUX	_	_	5	aux	_	_
4	be	_	AUX	_	_	5	cop	_	_
5	able	_	ADJ	_	_	0	root	_	_
6	to	_	PART	_	_	7	mark	_	_
7	parse	_	VERB	_	_	5	xcomp	_	_
8	information	_	NOUN	_	_	7	obj	_	_
9	from	_	ADP	_	_	14	case	_	SpaceAfter=No
10	/	_	SYM	_	_	11	cc	_	SpaceAfter=No
11	to	_	ADP	_	_	9	conj	_	_
12	its	_	DET	_	_	14	nmod	_	_
13	data	_	NOUN	_	_	14	compound	_	_
14	interface	_	NOUN	_	_	7	obl	_	_
15	through	_	ADP	_	_	19	case	_	_
16	the	_	DET	_	_	19	det	_	_
17	two	_	NUM	_	_	19	nummod	_	_
18	SI	_	NOUN	_	_	19	nmod	_	_
19	extremities	_	NOUN	_	_	7	obl	_	_
20	and	_	CCONJ	_	_	21	cc	_	_
21	translate	_	VERB	_	_	7	conj	_	_
22	it	_	PRON	_	_	21	obj	_	_
23	in	_	ADP	_	_	27	case	_	_
24	its	_	DET	_	_	27	nmod	_	_
25	own	_	ADJ	_	_	27	amod	_	_
26	local	_	ADJ	_	_	27	amod	_	_
27	bus	_	NOUN	_	_	21	obl	_	_
28	for	_	ADP	_	_	32	case	_	_
29	Real	_	ADJ	_	_	31	amod	_	SpaceAfter=No
30	-	_	PUNCT	_	_	31	punct	_	SpaceAfter=No
31	Timer	_	NOUN	_	_	32	amod	_	_
32	monitor	_	NOUN	_	_	21	obl	_	_
33	and	_	CCONJ	_	_	34	cc	_	_
34	control	_	NOUN	_	_	32	conj	_	_
35	of	_	ADP	_	_	37	case	_	_
36	its	_	DET	_	_	37	nmod	_	_
37	joins	_	NOUN	_	_	34	nmod	_	SpaceAfter=No
38	.	_	PUNCT	_	_	5	punct	_	_

# newdoc id = 1998_ALQ-172_3.2.4.2.2
# sent_id = 146
# text = The installation of the Enhanced ALQ-172 and LBJ shall: Operate during accelerations: Per AC-130U and MC-130H design parameters. Operate after accelerations: Per AC-130U and MC-130H design parameters. Crash loads: All fixed and removable equipment and their subcomponent installations, should be able to withstand the aircraft design load factors or the following load factors, whichever are greater: Longitudinal: 9.0 forward, 1.5 aft Lateral: 1.5 right and left Vertical: 4.5 down, 2.0 up
1	The	_	DET	_	_	2	det	_	_
2	installation	_	NOUN	_	_	11	nsubj	_	_
3	of	_	ADP	_	_	6	case	_	_
4	the	_	DET	_	_	5	det	_	_
5	Enhanced	_	ADJ	_	_	6	amod	_	_
6	ALQ-172	_	PROPN	_	_	2	nmod	_	_
7	and	_	CCONJ	_	_	8	cc	_	_
8	LBJ	_	NOUN	_	_	6	conj	_	_
9	shall	_	AUX	_	_	11	aux	_	SpaceAfter=No
10	:	_	PUNCT	_	_	9	punct	_	_
11	Operate	_	VERB	_	_	0	root	_	_
12	during	_	ADP	_	_	13	case	_	_
13	accelerations	_	NOUN	_	_	11	obl	_	SpaceAfter=No
14	:	_	PUNCT	_	_	11	punct	_	_
15	Per	_	ADP	_	_	20	case	_	_
16	AC-130U	_	PROPN	_	_	20	nmod	_	_
17	and	_	CCONJ	_	_	18	cc	_	_
18	MC-130H	_	PROPN	_	_	16	conj	_	_
19	design	_	NOUN	_	_	20	compound	_	_
20	parameters	_	NOUN	_	_	11	obl	_	SpaceAfter=No
21	.	_	PUNCT	_	_	11	punct	_	_
22	Operate	_	VERB	_	_	11	list	_	_
23	after	_	ADP	_	_	24	case	_	_
24	accelerations	_	NOUN	_	_	22	obl	_	SpaceAfter=No
25	:	_	PUNCT	_	_	22	punct	_	_
26	Per	_	ADP	_	_	31	case	_	_
27	AC-130U	_	PROPN	_	_	31	nmod	_	_
28	and	_	CCONJ	_	_	29	cc	_	_
29	MC-130H	_	PROPN	_	_	27	conj	_	_
30	design	_	NOUN	_	_	31	compound	_	_
31	parameters	_	NOUN	_	_	22	obl	_	SpaceAfter=No
32	.	_	PUNCT	_	_	22	punct	_	_
33	Crash	_	NOUN	_	_	34	compound	_	_
34	loads	_	NOUN	_	_	11	list	_	SpaceAfter=No
35	:	_	PUNCT	_	_	34	punct	_	_
36	All	_	DET	_	_	40	det	_	_
37	fixed	_	ADJ	_	_	40	amod	_	_
38	and	_	CCONJ	_	_	39	cc	_	_
39	removable	_	ADJ	_	_	37	conj	_	_
40	equipment	_	NOUN	_	_	44	nmod	_	_
41	and	_	CCONJ	_	_	44	cc	_	_
42	their	_	DET	_	_	44	nmod	_	_
43	subcomponent	_	NOUN	_	_	40	conj	_	_
44	installations	_	NOUN	_	_	48	nsubj	_	SpaceAfter=No
45	,	_	PUNCT	_	_	48	punct	_	_
46	should	_	AUX	_	_	48	aux	_	_
47	be	_	AUX	_	_	48	cop	_	_
48	able	_	ADJ	_	_	34	parataxis	_	_
49	to	_	PART	_	_	50	mark	_	_
50	withstand	_	VERB	_	_	48	xcomp	_	_
51	the	_	DET	_	_	55	det	_	_
52	aircraft	_	NOUN	_	_	53	nmod	_	_
53	design	_	NOUN	_	_	55	nmod	_	_
54	load	_	NOUN	_	_	55	compound	_	_
55	factors	_	NOUN	_	_	50	obj	_	_
56	or	_	CCONJ	_	_	60	cc	_	_
57	the	_	DET	_	_	60	det	_	_
58	following	_	ADJ	_	_	60	amod	_	_
59	load	_	NOUN	_	_	60	compound	_	_
60	factors	_	NOUN	_	_	55	conj	_	SpaceAfter=No
61	,	_	PUNCT	_	_	60	punct	_	_
62	whichever	_	PRON	_	_	64	nsubj	_	_
63	are	_	AUX	_	_	64	cop	_	_
64	greater	_	ADJ	_	_	55	acl	_	SpaceAfter=No
65	:	_	PUNCT	_	_	48	punct	_	_
66	Longitudinal	_	ADJ	_	_	48	parataxis	_	SpaceAfter=No
67	:	_	PUNCT	_	_	66	punct	_	_
68	9.0	_	NUM	_	_	66	parataxis	_	_
69	forward	_	ADV	_	_	68	advmod	_	SpaceAfter=No
70	,	_	PUNCT	_	_	71	punct	_	_
71	1.5	_	NUM	_	_	68	conj	_	_
72	aft	_	ADV	_	_	71	advmod	_	_
73	Lateral	_	ADJ	_	_	66	list	_	SpaceAfter=No
74	:	_	PUNCT	_	_	73	punct	_	_
75	1.5	_	NUM	_	_	73	parataxis	_	_
76	right	_	ADV	_	_	75	advmod	_	_
77	and	_	CCONJ	_	_	78	cc	_	_
78	left	_	ADV	_	_	76	conj	_	_
79	Vertical	_	ADJ	_	_	66	list	_	SpaceAfter=No
80	:	_	PUNCT	_	_	79	punct	_	_
81	4.5	_	NUM	_	_	79	parataxis	_	_
82	down	_	ADV	_	_	81	advmod	_	SpaceAfter=No
83	,	_	PUNCT	_	_	84	punct	_	_
84	2.0	_	NUM	_	_	81	conj	_	_
85	up	_	ADV	_	_	84	advmod	_	_

# newdoc id = 2000_nasax38_3.2.2.2_1
# sent_id = 20
# text = The scheduler shall [SRS035] provide rate groups that execute at 50 Hz, 10 Hz and 1 Hz., with a drift rate no greater than 50 microseconds per second, and with a jitter no greater than 330 microseconds.
1	The	_	DET	_	_	2	det	_	_
2	scheduler	_	NOUN	_	_	7	nsubj	_	_
3	shall	_	AUX	_	_	7	aux	_	_
4	[	_	PUNCT	_	_	5	punct	_	SpaceAfter=No
5	SRS035	_	PROPN	_	_	2	appos	_	SpaceAfter=No
6	]	_	PUNCT	_	_	5	punct	_	_
7	provide	_	VERB	_	_	0	root	_	_
8	rate	_	NOUN	_	_	9	compound	_	_
9	groups	_	NOUN	_	_	7	obj	_	_
10	that	_	PRON	_	_	11	nsubj	_	_
11	execute	_	VERB	_	_	9	acl:relcl	_	_
12	at	_	ADP	_	_	14	case	_	_
13	50	_	NUM	_	_	14	nummod	_	_
14	Hz	_	NOUN	_	_	11	obl	_	SpaceAfter=No
15	,	_	PUNCT	_	_	17	punct	_	_
16	10	_	NUM	_	_	17	nummod	_	_
17	Hz	_	NOUN	_	_	14	conj	_	_
18	and	_	CCONJ	_	_	20	cc	_	_
19	1	_	NUM	_	_	20	nummod	_	_
20	Hz.	_	NOUN	_	_	14	conj	_	SpaceAfter=No
21	,	_	PUNCT	_	_	25	punct	_	_
22	with	_	ADP	_	_	25	case	_	_
23	a	_	DET	_	_	25	det	_	_
24	drift	_	NOUN	_	_	25	nmod	_	_
25	rate	_	NOUN	_	_	11	obl	_	_
26	no	_	ADV	_	_	27	advmod	_	_
27	greater	_	ADJ	_	_	29	advmod	_	_
28	than	_	SCONJ	_	_	27	fixed	_	_
29	50	_	NUM	_	_	30	nummod	_	_
30	microseconds	_	NOUN	_	_	25	nmod	_	_
31	per	_	ADP	_	_	32	case	_	_
32	second	_	NOUN	_	_	30	nmod	_	SpaceAfter=No
33	,	_	PUNCT	_	_	37	punct	_	_
34	and	_	CCONJ	_	_	37	cc	_	_
35	with	_	ADP	_	_	37	case	_	_
36	a	_	DET	_	_	37	det	_	_
37	jitter	_	NOUN	_	_	25	conj	_	_
38	no	_	ADV	_	_	39	advmod	_	_
39	greater	_	ADJ	_	_	41	advmod	_	_
40	than	_	SCONJ	_	_	39	fixed	_	_
41	330	_	NUM	_	_	42	nummod	_	_
42	microseconds	_	NOUN	_	_	37	nmod	_	SpaceAfter=No
43	.	_	PUNCT	_	_	7	punct	_	_

# newdoc id = 2011_tfms_3.2.1.2_SSS3122
# sent_id = 22
# text = The system shall convert the following CIWS weather products to a quantized form before making the data available for display: a. VIL Precipitation Mosaic b. VIL Precipitation Forecast Mosaic c. CIWS Echo Tops Mosaic d. CIWS Echo Tops Forecast Mosaic.
1	The	_	DET	_	_	2	det	_	_
2	system	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	convert	_	VERB	_	_	0	root	_	_
5	the	_	DET	_	_	9	det	_	_
6	following	_	ADJ	_	_	9	amod	_	_
7	CIWS	_	PROPN	_	_	9	nmod	_	_
8	weather	_	NOUN	_	_	9	compound	_	_
9	products	_	NOUN	_	_	4	obj	_	_
10	to	_	ADP	_	_	13	case	_	_
11	a	_	DET	_	_	13	det	_	_
12	quantized	_	ADJ	_	_	13	amod	_	_
13	form	_	NOUN	_	_	4	obl	_	_
14	before	_	SCONJ	_	_	15	mark	_	_
15	making	_	VERB	_	_	4	advcl	_	_
16	the	_	DET	_	_	17	det	_	_
17	data	_	NOUN	_	_	15	obj	_	_
18	available	_	ADJ	_	_	15	xcomp	_	_
19	for	_	ADP	_	_	20	case	_	_
20	display	_	NOUN	_	_	18	obl	_	SpaceAfter=No
21	:	_	PUNCT	_	_	26	punct	_	_
22	a	_	NUM	_	_	26	nummod	_	SpaceAfter=No
23	.	_	PUNCT	_	_	22	punct	_	_
24	VIL	_	PROPN	_	_	25	compound	_	_
25	Precipitation	_	NOUN	_	_	26	nmod	_	_
26	Mosaic	_	NOUN	_	_	4	parataxis	_	_
27	b	_	NUM	_	_	32	nummod	_	SpaceAfter=No
28	.	_	PUNCT	_	_	27	punct	_	_
29	VIL	_	PROPN	_	_	30	compound	_	_
30	Precipitation	_	NOUN	_	_	31	nmod	_	_
31	Forecast	_	NOUN	_	_	32	nmod	_	_
32	Mosaic	_	NOUN	_	_	26	list	_	_
33	c	_	NUM	_	_	38	nummod	_	SpaceAfter=No
34	.	_	PUNCT	_	_	33	punct	_	_
35	CIWS	_	PROPN	_	_	38	nmod	_	_
36	Echo	_	NOUN	_	_	37	compound	_	_
37	Tops	_	NOUN	_	_	38	nmod	_	_
38	Mosaic	_	NOUN	_	_	26	list	_	_
39	d	_	NUM	_	_	45	nummod	_	SpaceAfter=No
40	.	_	PUNCT	_	_	39	punct	_	_
41	CIWS	_	PROPN	_	_	45	nmod	_	_
42	Echo	_	NOUN	_	_	43	compound	_	_
43	Tops	_	NOUN	_	_	44	nmod	_	_
44	Forecast	_	NOUN	_	_	45	nmod	_	_
45	Mosaic	_	NOUN	_	_	26	list	_	SpaceAfter=No
46	.	_	PUNCT	_	_	4	punct	_	_

# newdoc id = 2019_MOSAR_3.5.4_DesR_C403
# sent_id = 34
# text = The structure of the modules shall be able to carry its own mass under the gravity force and the loads introduced by the “walking” robot-system during the manipulation of the SMs.
1	The	_	DET	_	_	2	det	_	_
2	structure	_	NOUN	_	_	8	nsubj	_	_
3	of	_	ADP	_	_	5	case	_	_
4	the	_	DET	_	_	5	det	_	_
5	modules	_	NOUN	_	_	2	nmod	_	_
6	shall	_	AUX	_	_	8	aux	_	_
7	be	_	AUX	_	_	8	cop	_	_
8	able	_	ADJ	_	_	0	root	_	_
9	to	_	PART	_	_	10	mark	_	_
10	carry	_	VERB	_	_	8	xcomp	_	_
11	its	_	DET	_	_	13	nmod	_	_
12	own	_	ADJ	_	_	13	amod	_	_
13	mass	_	NOUN	_	_	10	obj	_	_
14	under	_	ADP	_	_	17	case	_	_
15	the	_	DET	_	_	17	det	_	_
16	gravity	_	NOUN	_	_	17	nmod	_	_
17	force	_	NOUN	_	_	10	obl	_	_
18	and	_	CCONJ	_	_	20	cc	_	_
19	the	_	DET	_	_	20	det	_	_
20	loads	_	NOUN	_	_	17	conj	_	_
21	introduced	_	VERB	_	_	20	acl	_	_
22	by	_	ADP	_	_	29	case	_	_
23	the	_	DET	_	_	29	det	_	_
24	“	_	PUNCT	_	_	25	punct	_	SpaceAfter=No
25	walking	_	ADJ	_	_	29	amod	_	SpaceAfter=No
26	”	_	PUNCT	_	_	25	punct	_	_
27	robot	_	NOUN	_	_	29	compound	_	SpaceAfter=No
28	-	_	PUNCT	_	_	29	punct	_	SpaceAfter=No
29	system	_	NOUN	_	_	21	obl:agent	_	_
30	during	_	ADP	_	_	32	case	_	_
31	the	_	DET	_	_	32	det	_	_
32	manipulation	_	NOUN	_	_	21	obl	_	_
33	of	_	ADP	_	_	35	case	_	_
34	the	_	DET	_	_	35	det	_	_
35	SMs	_	NOUN	_	_	32	nmod	_	SpaceAfter=No
36	.	_	PUNCT	_	_	8	punct	_	_

# newdoc id = 2007_wateruse_4.1.1.1_RW14
# sent_id = 75
# text = Track and measure alternative source projects (note: some of these may be included in table 8): • Surface water or stormwater projects. • Reclaimed water (reuse water). • Augmented surface water (reservoirs, harvesting of high flows (floodwaters). • ASR (Aquifer storage recovery) • Desalination. • Conservation (defined as a beneficial reduction of water use resulting in: o modification of water use practices, o reduction of unaccounted-for losses, or o installation and maintenance of low volume water use systems, processes, fixtures, or devices.
1	Track	_	VERB	_	_	0	root	_	_
2	and	_	CCONJ	_	_	3	cc	_	_
3	measure	_	VERB	_	_	1	conj	_	_
4	alternative	_	ADJ	_	_	6	amod	_	_
5	source	_	NOUN	_	_	6	compound	_	_
6	projects	_	NOUN	_	_	1	obj	_	_
7	(	_	PUNCT	_	_	8	punct	_	SpaceAfter=No
8	note	_	NOUN	_	_	1	parataxis	_	SpaceAfter=No
9	:	_	PUNCT	_	_	15	punct	_	_
10	some	_	PRON	_	_	15	nsubj:pass	_	_
11	of	_	ADP	_	_	12	case	_	_
12	these	_	PRON	_	_	10	nmod	_	_
13	may	_	AUX	_	_	15	aux	_	_
14	be	_	AUX	_	_	15	aux:pass	_	_
15	included	_	VERB	_	_	8	parataxis	_	_
16	in	_	ADP	_	_	17	case	_	_
17	table	_	NOUN	_	_	15	obl	_	_
18	8	_	NUM	_	_	17	flat	_	SpaceAfter=No
19	)	_	PUNCT	_	_	8	punct	_	SpaceAfter=No
20	:	_	PUNCT	_	_	23	punct	_	_
21	•	_	PUNCT	_	_	23	punct	_	_
22	Surface	_	NOUN	_	_	23	amod	_	_
23	water	_	NOUN	_	_	26	compound	_	_
24	or	_	CCONJ	_	_	25	cc	_	_
25	stormwater	_	NOUN	_	_	23	conj	_	_
26	projects	_	NOUN	_	_	1	parataxis	_	SpaceAfter=No
27	.	_	PUNCT	_	_	26	punct	_	_
28	•	_	PUNCT	_	_	30	punct	_	_
29	Reclaimed	_	ADJ	_	_	30	amod	_	_
30	water	_	NOUN	_	_	26	list	_	_
31	(	_	PUNCT	_	_	33	punct	_	SpaceAfter=No
32	reuse	_	ADJ	_	_	33	amod	_	_
33	water	_	NOUN	_	_	30	appos	_	SpaceAfter=No
34	)	_	PUNCT	_	_	33	punct	_	SpaceAfter=No
35	.	_	PUNCT	_	_	30	punct	_	_
36	•	_	PUNCT	_	_	39	punct	_	_
37	Augmented	_	ADJ	_	_	39	amod	_	_
38	surface	_	NOUN	_	_	39	amod	_	_
39	water	_	NOUN	_	_	26	list	_	_
40	(	_	PUNCT	_	_	41	punct	_	SpaceAfter=No
41	reservoirs	_	NOUN	_	_	39	appos	_	SpaceAfter=No
42	,	_	PUNCT	_	_	43	punct	_	_
43	harvesting	_	NOUN	_	_	41	conj	_	_
44	of	_	ADP	_	_	46	case	_	_
45	high	_	ADJ	_	_	46	amod	_	_
46	flows	_	NOUN	_	_	43	nmod	_	_
47	(	_	PUNCT	_	_	48	punct	_	SpaceAfter=No
48	floodwaters	_	NOUN	_	_	46	appos	_	SpaceAfter=No
49	)	_	PUNCT	_	_	48	punct	_	SpaceAfter=No
50	.	_	PUNCT	_	_	39	punct	_	_
51	•	_	PUNCT	_	_	52	punct	_	_
52	ASR	_	NOUN	_	_	26	list	_	_
53	(	_	PUNCT	_	_	55	punct	_	SpaceAfter=No
54	Aquifer	_	NOUN	_	_	55	nmod	_	_
55	storage	_	NOUN	_	_	52	appos	_	_
56	recovery	_	NOUN	_	_	55	conj	_	SpaceAfter=No
57	)	_	PUNCT	_	_	55	punct	_	_
58	•	_	PUNCT	_	_	59	punct	_	_
59	Desalination	_	NOUN	_	_	26	list	_	SpaceAfter=No
60	.	_	PUNCT	_	_	59	punct	_	_
61	•	_	PUNCT	_	_	62	punct	_	_
62	Conservation	_	NOUN	_	_	26	list	_	_
63	(	_	PUNCT	_	_	64	punct	_	SpaceAfter=No
64	defined	_	ADJ	_	_	62	acl	_	_
65	as	_	ADP	_	_	68	case	_	_
66	a	_	DET	_	_	68	det	_	_
67	beneficial	_	ADJ	_	_	68	amod	_	_
68	reduction	_	NOUN	_	_	64	obl	_	_
69	of	_	ADP	_	_	71	case	_	_
70	water	_	NOUN	_	_	71	nmod	_	_
71	use	_	NOUN	_	_	68	nmod	_	_
72	resulting	_	VERB	_	_	68	acl	_	_
73	in	_	ADP	_	_	76	case	_	SpaceAfter=No
74	:	_	PUNCT	_	_	76	punct	_	_
75	o	_	PUNCT	_	_	76	punct	_	_
76	modification	_	NOUN	_	_	72	obl	_	_
77	of	_	ADP	_	_	80	case	_	_
78	water	_	NOUN	_	_	79	nmod	_	_
79	use	_	NOUN	_	_	80	nmod	_	_
80	practices	_	NOUN	_	_	76	nmod	_	SpaceAfter=No
81	,	_	PUNCT	_	_	83	punct	_	_
82	o	_	PUNCT	_	_	83	punct	_	_
83	reduction	_	NOUN	_	_	76	conj	_	_
84	of	_	ADP	_	_	88	case	_	_
85	unaccounted	_	VERB	_	_	88	acl	_	SpaceAfter=No
86	-	_	PUNCT	_	_	87	punct	_	SpaceAfter=No
87	for	_	ADP	_	_	85	dep	_	_
88	losses	_	NOUN	_	_	83	nmod	_	SpaceAfter=No
89	,	_	PUNCT	_	_	92	punct	_	_
90	or	_	CCONJ	_	_	92	cc	_	_
91	o	_	PUNCT	_	_	92	punct	_	_
92	installation	_	NOUN	_	_	76	conj	_	_
93	and	_	CCONJ	_	_	94	cc	_	_
94	maintenance	_	NOUN	_	_	92	conj	_	_
95	of	_	ADP	_	_	100	case	_	_
96	low	_	ADJ	_	_	97	amod	_	_
97	volume	_	NOUN	_	_	100	nmod	_	_
98	water	_	NOUN	_	_	99	nmod	_	_
99	use	_	NOUN	_	_	100	nmod	_	_
100	systems	_	NOUN	_	_	92	nmod	_	SpaceAfter=No
101	,	_	PUNCT	_	_	102	punct	_	_
102	processes	_	NOUN	_	_	100	conj	_	SpaceAfter=No
103	,	_	PUNCT	_	_	104	punct	_	_
104	fixtures	_	NOUN	_	_	100	conj	_	SpaceAfter=No
105	,	_	PUNCT	_	_	107	punct	_	_
106	or	_	CCONJ	_	_	107	cc	_	_
107	devices	_	NOUN	_	_	100	conj	_	SpaceAfter=No
108	.	_	PUNCT	_	_	1	punct	_	_

# newdoc id = 2001_npac_4.2_RN4-1
# sent_id = 65
# text = NPAC SMS shall allow Service Providers to add/delete the NPA-NXX and/or LRN data via the NPAC SMS to Local SMS interface and SOA to NPAC SMS interface provided the changes do not cause mass updates to the Subscription Versions.
1	NPAC	_	PROPN	_	_	2	nmod	_	_
2	SMS	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	allow	_	VERB	_	_	0	root	_	_
5	Service	_	NOUN	_	_	6	compound	_	_
6	Providers	_	NOUN	_	_	4	obj	_	_
7	to	_	PART	_	_	8	mark	_	_
8	add	_	VERB	_	_	4	xcomp	_	SpaceAfter=No
9	/	_	PUNCT	_	_	10	punct	_	SpaceAfter=No
10	delete	_	VERB	_	_	8	conj	_	_
11	the	_	DET	_	_	12	det	_	_
12	NPA-NXX	_	PROPN	_	_	10	obj	_	_
13	and	_	CCONJ	_	_	17	cc	_	SpaceAfter=No
14	/	_	PUNCT	_	_	15	punct	_	SpaceAfter=No
15	or	_	CCONJ	_	_	13	conj	_	_
16	LRN	_	NOUN	_	_	17	nmod	_	_
17	data	_	NOUN	_	_	12	conj	_	_
18	via	_	ADP	_	_	25	case	_	_
19	the	_	DET	_	_	25	det	_	_
20	NPAC	_	PROPN	_	_	21	nmod	_	_
21	SMS	_	NOUN	_	_	25	compound	_	_
22	to	_	ADP	_	_	24	case	_	_
23	Local	_	ADJ	_	_	24	amod	_	_
24	SMS	_	NOUN	_	_	21	nmod	_	_
25	interface	_	NOUN	_	_	8	obl	_	_
26	and	_	CCONJ	_	_	31	cc	_	_
27	SOA	_	PROPN	_	_	31	compound	_	_
28	to	_	ADP	_	_	30	case	_	_
29	NPAC	_	PROPN	_	_	30	nmod	_	_
30	SMS	_	NOUN	_	_	27	nmod	_	_
31	interface	_	NOUN	_	_	25	conj	_	_
32	provided	_	SCONJ	_	_	37	mark	_	_
33	the	_	DET	_	_	34	det	_	_
34	changes	_	NOUN	_	_	37	nsubj	_	_
35	do	_	AUX	_	_	37	aux	_	_
36	not	_	PART	_	_	37	advmod	_	_
37	cause	_	VERB	_	_	4	advcl	_	_
38	mass	_	ADJ	_	_	39	amod	_	_
39	updates	_	NOUN	_	_	37	obj	_	_
40	to	_	ADP	_	_	43	case	_	_
41	the	_	DET	_	_	43	det	_	_
42	Subscription	_	NOUN	_	_	43	nmod	_	_
43	Versions	_	NOUN	_	_	37	obl	_	SpaceAfter=No
44	.	_	PUNCT	_	_	4	punct	_	_

# newdoc id = 2015_CS4311_3.1.5.1_Req32
# sent_id = 149
# text = Card 1 of the Google Glass screen shall display the text “ETA: “directly below the text “RTA; “of the next waypoint that the pilot is approaching, followed by a number value that represents the real-time ETA value for that waypoint.
1	Card	_	NOUN	_	_	9	nsubj	_	_
2	1	_	NUM	_	_	1	flat	_	_
3	of	_	ADP	_	_	7	case	_	_
4	the	_	DET	_	_	7	det	_	_
5	Google	_	PROPN	_	_	7	nmod	_	_
6	Glass	_	PROPN	_	_	5	flat	_	_
7	screen	_	NOUN	_	_	1	nmod	_	_
8	shall	_	AUX	_	_	9	aux	_	_
9	display	_	VERB	_	_	0	root	_	_
10	the	_	DET	_	_	11	det	_	_
11	text	_	NOUN	_	_	9	obj	_	_
12	“	_	PUNCT	_	_	13	punct	_	SpaceAfter=No
13	ETA	_	NOUN	_	_	11	appos	_	SpaceAfter=No
14	:	_	PUNCT	_	_	13	punct	_	_
15	“	_	PUNCT	_	_	13	punct	_	SpaceAfter=No
16	directly	_	ADV	_	_	17	advmod	_	_
17	below	_	ADP	_	_	19	case	_	_
18	the	_	DET	_	_	19	det	_	_
19	text	_	NOUN	_	_	9	obl	_	_
20	“	_	PUNCT	_	_	21	punct	_	SpaceAfter=No
21	RTA	_	NOUN	_	_	19	appos	_	SpaceAfter=No
22	;	_	PUNCT	_	_	21	punct	_	_
23	“	_	PUNCT	_	_	21	punct	_	SpaceAfter=No
24	of	_	ADP	_	_	27	case	_	_
25	the	_	DET	_	_	27	det	_	_
26	next	_	ADJ	_	_	27	amod	_	_
27	waypoint	_	NOUN	_	_	19	nmod	_	_
28	that	_	PRON	_	_	32	obj	_	_
29	the	_	DET	_	_	30	det	_	_
30	pilot	_	NOUN	_	_	32	nsubj	_	_
31	is	_	AUX	_	_	32	aux	_	_
32	approaching	_	VERB	_	_	27	acl:relcl	_	SpaceAfter=No
33	,	_	PUNCT	_	_	34	punct	_	_
34	followed	_	VERB	_	_	11	acl	_	_
35	by	_	ADP	_	_	38	case	_	_
36	a	_	DET	_	_	38	det	_	_
37	number	_	NOUN	_	_	38	nmod	_	_
38	value	_	NOUN	_	_	34	obl:agent	_	_
39	that	_	PRON	_	_	40	nsubj	_	_
40	represents	_	VERB	_	_	38	acl:relcl	_	_
41	the	_	DET	_	_	46	det	_	_
42	real	_	ADJ	_	_	44	amod	_	SpaceAfter=No
43	-	_	PUNCT	_	_	44	punct	_	SpaceAfter=No
44	time	_	NOUN	_	_	45	amod	_	_
45	ETA	_	NOUN	_	_	46	nmod	_	_
46	value	_	NOUN	_	_	40	obj	_	_
47	for	_	ADP	_	_	49	case	_	_
48	that	_	DET	_	_	49	det	_	_
49	waypoint	_	NOUN	_	_	46	nmod	_	SpaceAfter=No
50	.	_	PUNCT	_	_	9	punct	_	_

# newdoc id = 2007_ertms_4.1.4.6
# sent_id = 176
# text = The train shall leave Partial Supervision when the trainborne equipment is not operative any longer, when Shunting is selected or when Full Supervision is available. (M)
1	The	_	DET	_	_	2	det	_	_
2	train	_	NOUN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux:pass	_	_
4	leave	_	VERB	_	_	0	root	_	_
5	Partial	_	ADJ	_	_	6	amod	_	_
6	Supervision	_	NOUN	_	_	4	obj	_	_
7	when	_	SCONJ	_	_	13	mark	_	_
8	the	_	DET	_	_	10	det	_	_
9	trainborne	_	ADJ	_	_	10	amod	_	_
10	equipment	_	NOUN	_	_	13	nsubj	_	_
11	is	_	AUX	_	_	13	cop	_	_
12	not	_	PART	_	_	13	advmod	_	_
13	operative	_	ADJ	_	_	4	advcl	_	_
14	any	_	ADV	_	_	15	advmod	_	_
15	longer	_	ADV	_	_	13	advmod	_	SpaceAfter=No
16	,	_	PUNCT	_	_	20	punct	_	_
17	when	_	SCONJ	_	_	20	mark	_	_
18	Shunting	_	PROPN	_	_	20	nsubj:pass	_	_
19	is	_	AUX	_	_	20	aux:pass	_	_
20	selected	_	VERB	_	_	13	conj	_	_
21	or	_	CCONJ	_	_	26	cc	_	_
22	when	_	SCONJ	_	_	26	mark	_	_
23	Full	_	ADJ	_	_	24	amod	_	_
24	Supervision	_	NOUN	_	_	26	nsubj	_	_
25	is	_	AUX	_	_	26	cop	_	_
26	available	_	ADJ	_	_	13	conj	_	SpaceAfter=No
27	.	_	PUNCT	_	_	4	punct	_	_
28	(	_	PUNCT	_	_	29	punct	_	SpaceAfter=No
29	M	_	ADJ	_	_	4	advmod	_	SpaceAfter=No
30	)	_	PUNCT	_	_	29	punct	_	_

# newdoc id = 1999_tcs_3.1.1.1_par2
# sent_id = 6
# text = Initialization of the TCS HWCIs shall include startup of HWCIs [SSS542], download of software [SSS026], startup of CSCIs [SSS027], execution of Startup FD/L [SSS025], and establishment of the state of readiness of all interfaces. [SSS028]
1	Initialization	_	NOUN	_	_	7	nsubj	_	_
2	of	_	ADP	_	_	5	case	_	_
3	the	_	DET	_	_	5	det	_	_
4	TCS	_	PROPN	_	_	5	nmod	_	_
5	HWCIs	_	NOUN	_	_	1	nmod	_	_
6	shall	_	AUX	_	_	7	aux	_	_
7	include	_	VERB	_	_	0	root	_	_
8	startup	_	NOUN	_	_	7	obj	_	_
9	of	_	ADP	_	_	10	case	_	_
10	HWCIs	_	NOUN	_	_	8	nmod	_	_
11	[	_	PUNCT	_	_	12	punct	_	SpaceAfter=No
12	SSS542	_	PROPN	_	_	8	appos	_	SpaceAfter=No
13	]	_	PUNCT	_	_	12	punct	_	SpaceAfter=No
14	,	_	PUNCT	_	_	15	punct	_	_
15	download	_	NOUN	_	_	8	conj	_	_
16	of	_	ADP	_	_	17	case	_	_
17	software	_	NOUN	_	_	15	nmod	_	_
18	[	_	PUNCT	_	_	19	punct	_	SpaceAfter=No
19	SSS026	_	PROPN	_	_	15	appos	_	SpaceAfter=No
20	]	_	PUNCT	_	_	19	punct	_	SpaceAfter=No
21	,	_	PUNCT	_	_	22	punct	_	_
22	startup	_	NOUN	_	_	8	conj	_	_
23	of	_	ADP	_	_	24	case	_	_
24	CSCIs	_	PROPN	_	_	22	nmod	_	_
25	[	_	PUNCT	_	_	26	punct	_	SpaceAfter=No
26	SSS027	_	PROPN	_	_	22	appos	_	SpaceAfter=No
27	]	_	PUNCT	_	_	26	punct	_	SpaceAfter=No
28	,	_	PUNCT	_	_	29	punct	_	_
29	execution	_	NOUN	_	_	8	conj	_	_
30	of	_	ADP	_	_	32	case	_	_
31	Startup	_	NOUN	_	_	32	compound	_	_
32	FD/L	_	NOUN	_	_	29	nmod	_	_
33	[	_	PUNCT	_	_	34	punct	_	SpaceAfter=No
34	SSS025	_	PROPN	_	_	29	appos	_	SpaceAfter=No
35	]	_	PUNCT	_	_	34	punct	_	SpaceAfter=No
36	,	_	PUNCT	_	_	38	punct	_	_
37	and	_	CCONJ	_	_	38	cc	_	_
38	establishment	_	NOUN	_	_	8	conj	_	_
39	of	_	ADP	_	_	41	case	_	_
40	the	_	DET	_	_	41	det	_	_
41	state	_	NOUN	_	_	38	nmod	_	_
42	of	_	ADP	_	_	43	case	_	_
43	readiness	_	NOUN	_	_	41	nmod	_	_
44	of	_	ADP	_	_	46	case	_	_
45	all	_	DET	_	_	46	det	_	_
46	interfaces	_	NOUN	_	_	43	nmod	_	SpaceAfter=No
47	.	_	PUNCT	_	_	46	punct	_	_
48	[	_	PUNCT	_	_	49	punct	_	SpaceAfter=No
49	SSS028	_	PROPN	_	_	38	appos	_	SpaceAfter=No
50	]	_	PUNCT	_	_	49	punct	_	_

# newdoc id = 2001_esa_3.8_APAF-DR-01c
# sent_id = 198
# text = Any APAF-generated intermediate files of ASPERA-3 and MEX OA cleaned-up telemetry that are electronically distributed shall be provided to the ASPERA-3 Co-I’s within 24 hours of acquiring ASPERA-3 and MEX OA telemetry as long as the transmission and processing are error-free.
1	Any	_	DET	_	_	6	det	_	_
2	APAF	_	PROPN	_	_	4	obl:agent	_	SpaceAfter=No
3	-	_	PUNCT	_	_	4	punct	_	SpaceAfter=No
4	generated	_	VERB	_	_	6	acl	_	_
5	intermediate	_	ADJ	_	_	6	amod	_	_
6	files	_	NOUN	_	_	22	nsubj:pass	_	_
7	of	_	ADP	_	_	15	case	_	_
8	ASPERA-3	_	PROPN	_	_	15	nmod	_	_
9	and	_	CCONJ	_	_	11	cc	_	_
10	MEX	_	PROPN	_	_	11	nmod	_	_
11	OA	_	NOUN	_	_	8	conj	_	_
12	cleaned	_	VERB	_	_	15	acl	_	SpaceAfter=No
13	-	_	PUNCT	_	_	14	punct	_	SpaceAfter=No
14	up	_	ADP	_	_	12	compound	_	_
15	telemetry	_	NOUN	_	_	6	nmod	_	_
16	that	_	PRON	_	_	19	nsubj:pass	_	_
17	are	_	AUX	_	_	19	aux:pass	_	_
18	electronically	_	ADV	_	_	19	advmod	_	_
19	distributed	_	VERB	_	_	6	acl:relcl	_	_
20	shall	_	AUX	_	_	22	aux	_	_
21	be	_	AUX	_	_	22	aux:pass	_	_
22	provided	_	VERB	_	_	0	root	_	_
23	to	_	ADP	_	_	26	case	_	_
24	the	_	DET	_	_	26	det	_	_
25	ASPERA-3	_	PROPN	_	_	26	nmod	_	_
26	Co-I’s	_	NOUN	_	_	22	obl	_	_
27	within	_	ADP	_	_	29	case	_	_
28	24	_	NUM	_	_	29	nummod	_	_
29	hours	_	NOUN	_	_	22	obl	_	_
30	of	_	ADP	_	_	31	mark	_	_
31	acquiring	_	VERB	_	_	29	acl	_	_
32	ASPERA-3	_	PROPN	_	_	36	nmod	_	_
33	and	_	CCONJ	_	_	35	cc	_	_
34	MEX	_	PROPN	_	_	35	nmod	_	_
35	OA	_	NOUN	_	_	32	conj	_	_
36	telemetry	_	NOUN	_	_	31	obj	_	_
37	as	_	ADP	_	_	47	mark	_	_
38	long	_	ADV	_	_	37	fixed	_	_
39	as	_	SCONJ	_	_	37	fixed	_	_
40	the	_	DET	_	_	41	det	_	_
41	transmission	_	NOUN	_	_	47	nsubj	_	_
42	and	_	CCONJ	_	_	43	cc	_	_
43	processing	_	NOUN	_	_	41	conj	_	_
44	are	_	AUX	_	_	47	cop	_	_
45	error	_	NOUN	_	_	47	obl	_	SpaceAfter=No
46	-	_	PUNCT	_	_	47	punct	_	SpaceAfter=No
47	free	_	ADJ	_	_	22	advcl	_	SpaceAfter=No
48	.	_	PUNCT	_	_	22	punct	_	_

# newdoc id = 2005_phin_2.3.2.1
# sent_id = 27
# text = Systems supporting OM must support dynamically defined associations between entities for the purpose of defining relationships.
1	Systems	_	NOUN	_	_	5	nsubj	_	_
2	supporting	_	VERB	_	_	1	acl	_	_
3	OM	_	PROPN	_	_	2	obj	_	_
4	must	_	AUX	_	_	5	aux	_	_
5	support	_	VERB	_	_	0	root	_	_
6	dynamically	_	ADV	_	_	7	advmod	_	_
7	defined	_	ADJ	_	_	8	amod	_	_
8	associations	_	NOUN	_	_	5	obj	_	_
9	between	_	ADP	_	_	10	case	_	_
10	entities	_	NOUN	_	_	8	nmod	_	_
11	for	_	ADP	_	_	13	case	_	_
12	the	_	DET	_	_	13	det	_	_
13	purpose	_	NOUN	_	_	5	obl	_	_
14	of	_	ADP	_	_	15	mark	_	_
15	defining	_	VERB	_	_	13	acl	_	_
16	relationships	_	NOUN	_	_	15	obj	_	SpaceAfter=No
17	.	_	PUNCT	_	_	5	punct	_	_

# sent_id = 28
# text = For example, person-to-person (e.g., family relationship, exposure relationship), person-to-place (e.g., household, common place), animal-to-person, object-to-place, person-to-travel.
1	For	_	ADP	_	_	2	case	_	_
2	example	_	NOUN	_	_	4	nmod	_	SpaceAfter=No
3	,	_	PUNCT	_	_	2	punct	_	_
4	person	_	NOUN	_	_	0	root	_	SpaceAfter=No
5	-	_	PUNCT	_	_	6	punct	_	SpaceAfter=No
6	to	_	ADP	_	_	8	case	_	SpaceAfter=No
7	-	_	PUNCT	_	_	8	punct	_	SpaceAfter=No
8	person	_	NOUN	_	_	4	nmod	_	_
9	(	_	PUNCT	_	_	13	punct	_	SpaceAfter=No
10	e.g.	_	ADV	_	_	13	parataxis	_	SpaceAfter=No
11	,	_	PUNCT	_	_	10	punct	_	_
12	family	_	NOUN	_	_	13	compound	_	_
13	relationship	_	NOUN	_	_	4	appos	_	SpaceAfter=No
14	,	_	PUNCT	_	_	16	punct	_	_
15	exposure	_	NOUN	_	_	16	nmod	_	_
16	relationship	_	NOUN	_	_	13	conj	_	SpaceAfter=No
17	)	_	PUNCT	_	_	13	punct	_	SpaceAfter=No
18	,	_	PUNCT	_	_	19	punct	_	_
19	person	_	NOUN	_	_	4	conj	_	SpaceAfter=No
20	-	_	PUNCT	_	_	21	punct	_	SpaceAfter=No
21	to	_	ADP	_	_	23	case	_	SpaceAfter=No
22	-	_	PUNCT	_	_	23	punct	_	SpaceAfter=No
23	place	_	NOUN	_	_	19	nmod	_	_
24	(	_	PUNCT	_	_	27	punct	_	SpaceAfter=No
25	e.g.	_	ADV	_	_	27	parataxis	_	SpaceAfter=No
26	,	_	PUNCT	_	_	25	punct	_	_
27	household	_	NOUN	_	_	19	appos	_	SpaceAfter=No
28	,	_	PUNCT	_	_	30	punct	_	_
29	common	_	ADJ	_	_	30	amod	_	_
30	place	_	NOUN	_	_	27	conj	_	SpaceAfter=No
31	)	_	PUNCT	_	_	27	punct	_	SpaceAfter=No
32	,	_	PUNCT	_	_	33	punct	_	_
33	animal	_	NOUN	_	_	4	conj	_	SpaceAfter=No
34	-	_	PUNCT	_	_	35	punct	_	SpaceAfter=No
35	to	_	ADP	_	_	37	case	_	SpaceAfter=No
36	-	_	PUNCT	_	_	37	punct	_	SpaceAfter=No
37	person	_	NOUN	_	_	33	nmod	_	SpaceAfter=No
38	,	_	PUNCT	_	_	39	punct	_	_
39	object	_	NOUN	_	_	4	conj	_	SpaceAfter=No
40	-	_	PUNCT	_	_	41	punct	_	SpaceAfter=No
41	to	_	ADP	_	_	43	case	_	SpaceAfter=No
42	-	_	PUNCT	_	_	43	punct	_	SpaceAfter=No
43	place	_	NOUN	_	_	39	nmod	_	SpaceAfter=No
44	,	_	PUNCT	_	_	45	punct	_	_
45	person	_	NOUN	_	_	4	conj	_	SpaceAfter=No
46	-	_	PUNCT	_	_	47	punct	_	SpaceAfter=No
47	to	_	ADP	_	_	49	case	_	SpaceAfter=No
48	-	_	PUNCT	_	_	49	punct	_	SpaceAfter=No
49	travel	_	NOUN	_	_	45	nmod	_	SpaceAfter=No
50	.	_	PUNCT	_	_	4	punct	_	_

# newdoc id = 2000_nasax38_3.2.5.3_4
# sent_id = 111
# text = RAM scrub shall [SRS275] not scrub the area used for telemetry data.
1	RAM	_	NOUN	_	_	2	nmod	_	_
2	scrub	_	NOUN	_	_	8	nsubj	_	_
3	shall	_	AUX	_	_	8	aux	_	_
4	[	_	PUNCT	_	_	5	punct	_	SpaceAfter=No
5	SRS275	_	PROPN	_	_	2	appos	_	SpaceAfter=No
6	]	_	PUNCT	_	_	5	punct	_	_
7	not	_	PART	_	_	8	advmod	_	_
8	scrub	_	VERB	_	_	0	root	_	_
9	the	_	DET	_	_	10	det	_	_
10	area	_	NOUN	_	_	8	obj	_	_
11	used	_	VERB	_	_	10	acl	_	_
12	for	_	ADP	_	_	14	case	_	_
13	telemetry	_	NOUN	_	_	14	nmod	_	_
14	data	_	NOUN	_	_	11	obl	_	SpaceAfter=No
15	.	_	PUNCT	_	_	8	punct	_	_

# newdoc id = 1999_tcs_3.2_par1
# sent_id = 55
# text = The TCS will provide the hardware and software necessary to allow the operator to conduct the following major functions 1) mission planning, 2) mission control and monitoring, 3) payload product management, 4) targeting, and 5) C4I system interface.
1	The	_	DET	_	_	2	det	_	_
2	TCS	_	PROPN	_	_	4	nsubj	_	_
3	will	_	AUX	_	_	4	aux	_	_
4	provide	_	VERB	_	_	0	root	_	_
5	the	_	DET	_	_	6	det	_	_
6	hardware	_	NOUN	_	_	4	obj	_	_
7	and	_	CCONJ	_	_	8	cc	_	_
8	software	_	NOUN	_	_	6	conj	_	_
9	necessary	_	ADJ	_	_	6	amod	_	_
10	to	_	PART	_	_	11	case	_	_
11	allow	_	VERB	_	_	9	xcomp	_	_
12	the	_	DET	_	_	13	det	_	_
13	operator	_	NOUN	_	_	11	obj	_	_
14	to	_	PART	_	_	15	mark	_	_
15	conduct	_	VERB	_	_	11	xcomp	_	_
16	the	_	DET	_	_	19	det	_	_
17	following	_	ADJ	_	_	19	amod	_	_
18	major	_	ADJ	_	_	19	amod	_	_
19	functions	_	NOUN	_	_	15	obj	_	_
20	1	_	NUM	_	_	23	nummod	_	SpaceAfter=No
21	)	_	PUNCT	_	_	20	punct	_	_
22	mission	_	NOUN	_	_	23	compound	_	_
23	planning	_	NOUN	_	_	15	parataxis	_	SpaceAfter=No
24	,	_	PUNCT	_	_	28	punct	_	_
25	2	_	NUM	_	_	28	nummod	_	SpaceAfter=No
26	)	_	PUNCT	_	_	25	punct	_	_
27	mission	_	NOUN	_	_	28	compound	_	_
28	control	_	NOUN	_	_	23	conj	_	_
29	and	_	CCONJ	_	_	30	cc	_	_
30	monitoring	_	NOUN	_	_	28	conj	_	SpaceAfter=No
31	,	_	PUNCT	_	_	36	punct	_	_
32	3	_	NUM	_	_	36	nummod	_	SpaceAfter=No
33	)	_	PUNCT	_	_	32	punct	_	_
34	payload	_	NOUN	_	_	35	compound	_	_
35	product	_	NOUN	_	_	36	nmod	_	_
36	management	_	NOUN	_	_	23	conj	_	SpaceAfter=No
37	,	_	PUNCT	_	_	40	punct	_	_
38	4	_	NUM	_	_	40	nummod	_	SpaceAfter=No
39	)	_	PUNCT	_	_	38	punct	_	_
40	targeting	_	NOUN	_	_	23	conj	_	SpaceAfter=No
41	,	_	PUNCT	_	_	47	punct	_	_
42	and	_	CCONJ	_	_	47	cc	_	_
43	5	_	NUM	_	_	47	nummod	_	SpaceAfter=No
44	)	_	PUNCT	_	_	43	punct	_	_
45	C4I	_	NOUN	_	_	46	compound	_	_
46	system	_	NOUN	_	_	47	compound	_	_
47	interface	_	NOUN	_	_	23	conj	_	SpaceAfter=No
48	.	_	PUNCT	_	_	4	punct	_	_

# newdoc id = 2011_tfms_3.2.1.1.1_SSS2951
# sent_id = 207
# text = When the system receives an IADE message, the system shall acceptance check those fields of the received message having possible ranges of values, for being within their pre-defined range.
1	When	_	SCONJ	_	_	4	mark	_	_
2	the	_	DET	_	_	3	det	_	_
3	system	_	NOUN	_	_	4	nsubj	_	_
4	receives	_	NOUN	_	_	13	advcl	_	_
5	an	_	DET	_	_	7	det	_	_
6	IADE	_	PROPN	_	_	7	compound	_	_
7	message	_	NOUN	_	_	4	obj	_	SpaceAfter=No
8	,	_	PUNCT	_	_	4	punct	_	_
9	the	_	DET	_	_	10	det	_	_
10	system	_	NOUN	_	_	13	nsubj	_	_
11	shall	_	AUX	_	_	13	aux	_	_
12	acceptance	_	NOUN	_	_	13	compound	_	_
13	check	_	VERB	_	_	0	root	_	_
14	those	_	DET	_	_	15	det	_	_
15	fields	_	NOUN	_	_	13	obj	_	_
16	of	_	ADP	_	_	19	case	_	_
17	the	_	DET	_	_	19	det	_	_
18	received	_	ADJ	_	_	19	amod	_	_
19	message	_	NOUN	_	_	15	nmod	_	_
20	having	_	VERB	_	_	15	acl	_	_
21	possible	_	ADJ	_	_	22	amod	_	_
22	ranges	_	NOUN	_	_	20	obj	_	_
23	of	_	ADP	_	_	24	case	_	_
24	values	_	NOUN	_	_	22	nmod	_	SpaceAfter=No
25	,	_	PUNCT	_	_	33	punct	_	_
26	for	_	ADP	_	_	33	mark	_	_
27	being	_	AUX	_	_	33	cop	_	_
28	within	_	ADP	_	_	33	case	_	_
29	their	_	DET	_	_	33	nmod	_	_
30	pre	_	ADV	_	_	32	advmod	_	SpaceAfter=No
31	-	_	PUNCT	_	_	32	punct	_	SpaceAfter=No
32	defined	_	ADJ	_	_	33	amod	_	_
33	range	_	NOUN	_	_	13	advcl	_	SpaceAfter=No
34	.	_	PUNCT	_	_	13	punct	_	_

# newdoc id = 2019_MOSAR_3.3.1_FuncR_A111
# sent_id = 25
# text = The SVC OBC shall be able to detect and use additional functional modules (plug & play principle)
1	The	_	DET	_	_	3	det	_	_
2	SVC	_	NOUN	_	_	3	nmod	_	_
3	OBC	_	NOUN	_	_	6	nsubj	_	_
4	shall	_	AUX	_	_	6	aux	_	_
5	be	_	AUX	_	_	6	cop	_	_
6	able	_	ADJ	_	_	0	root	_	_
7	to	_	PART	_	_	8	mark	_	_
8	detect	_	VERB	_	_	6	xcomp	_	_
9	and	_	CCONJ	_	_	10	cc	_	_
10	use	_	VERB	_	_	8	conj	_	_
11	additional	_	ADJ	_	_	13	amod	_	_
12	functional	_	ADJ	_	_	13	amod	_	_
13	modules	_	NOUN	_	_	8	obj	_	_
14	(	_	PUNCT	_	_	18	punct	_	SpaceAfter=No
15	plug	_	VERB	_	_	18	nmod	_	_
16	&	_	SYM	_	_	17	cc	_	_
17	play	_	VERB	_	_	15	conj	_	_
18	principle	_	NOUN	_	_	6	parataxis	_	SpaceAfter=No
19	)	_	PUNCT	_	_	18	punct	_	_

# newdoc id = 2011_tfms_3.2.1.1.5_SSS2698
# sent_id = 23
# text = When a valid NAS Cancellation message or an IADE Flight Plan Cancellation message is received for a flight having the status of "planned" and no Flight Create or Flight Modify message has been received for the flight and no other flight plan exists for the flight in a "non-cancelled" status, the system shall update the flight's status to "cancelled".
1	When	_	SCONJ	_	_	15	mark	_	_
2	a	_	DET	_	_	3	det	_	_
3	valid	_	ADJ	_	_	6	amod	_	_
4	NAS	_	PROPN	_	_	6	nmod	_	_
5	Cancellation	_	NOUN	_	_	6	compound	_	_
6	message	_	NOUN	_	_	15	nsubj:pass	_	_
7	or	_	CCONJ	_	_	13	cc	_	_
8	an	_	DET	_	_	13	det	_	_
9	IADE	_	PROPN	_	_	13	nmod	_	_
10	Flight	_	NOUN	_	_	11	compound	_	_
11	Plan	_	NOUN	_	_	12	compound	_	_
12	Cancellation	_	NOUN	_	_	13	compound	_	_
13	message	_	NOUN	_	_	6	conj	_	_
14	is	_	AUX	_	_	15	aux:pass	_	_
15	received	_	VERB	_	_	61	advcl	_	_
16	for	_	ADP	_	_	18	case	_	_
17	a	_	DET	_	_	18	det	_	_
18	flight	_	NOUN	_	_	15	obl	_	_
19	having	_	VERB	_	_	18	acl	_	_
20	the	_	DET	_	_	21	det	_	_
21	status	_	NOUN	_	_	19	obj	_	_
22	of	_	ADP	_	_	24	case	_	_
23	"	_	PUNCT	_	_	24	punct	_	SpaceAfter=No
24	planned	_	ADJ	_	_	21	nmod	_	SpaceAfter=No
25	"	_	PUNCT	_	_	24	punct	_	_
26	and	_	CCONJ	_	_	36	cc	_	_
27	no	_	DET	_	_	33	det	_	_
28	Flight	_	NOUN	_	_	29	compound	_	_
29	Create	_	VERB	_	_	33	compound	_	_
30	or	_	CCONJ	_	_	32	cc	_	_
31	Flight	_	NOUN	_	_	32	compound	_	_
32	Modify	_	VERB	_	_	29	conj	_	_
33	message	_	NOUN	_	_	36	nsubj:pass	_	_
34	has	_	AUX	_	_	36	aux	_	_
35	been	_	AUX	_	_	36	aux:pass	_	_
36	received	_	VERB	_	_	15	conj	_	_
37	for	_	ADP	_	_	39	case	_	_
38	the	_	DET	_	_	39	det	_	_
39	flight	_	NOUN	_	_	36	obl	_	_
40	and	_	CCONJ	_	_	45	cc	_	_
41	no	_	DET	_	_	44	det	_	_
42	other	_	ADJ	_	_	44	amod	_	_
43	flight	_	NOUN	_	_	44	compound	_	_
44	plan	_	NOUN	_	_	45	nsubj	_	_
45	exists	_	VERB	_	_	15	conj	_	_
46	for	_	ADP	_	_	48	case	_	_
47	the	_	DET	_	_	48	det	_	_
48	flight	_	NOUN	_	_	45	obl	_	_
49	in	_	ADP	_	_	56	case	_	_
50	a	_	DET	_	_	56	det	_	_
51	"	_	PUNCT	_	_	54	punct	_	SpaceAfter=No
52	non	_	ADV	_	_	54	advmod	_	SpaceAfter=No
53	-	_	PUNCT	_	_	54	punct	_	SpaceAfter=No
54	cancelled	_	ADJ	_	_	56	amod	_	SpaceAfter=No
55	"	_	PUNCT	_	_	54	punct	_	_
56	status	_	NOUN	_	_	48	nmod	_	SpaceAfter=No
57	,	_	PUNCT	_	_	15	punct	_	_
58	the	_	DET	_	_	59	det	_	_
59	system	_	NOUN	_	_	61	nsubj	_	_
60	shall	_	AUX	_	_	61	aux	_	_
61	update	_	VERB	_	_	0	root	_	_
62	the	_	DET	_	_	65	det	_	_
63	flight	_	NOUN	_	_	65	nmod	_	SpaceAfter=No
64	's	_	PART	_	_	63	case	_	_
65	status	_	NOUN	_	_	61	obj	_	_
66	to	_	ADP	_	_	68	case	_	_
67	"	_	PUNCT	_	_	68	punct	_	SpaceAfter=No
68	cancelled	_	ADJ	_	_	61	obl	_	SpaceAfter=No
69	"	_	PUNCT	_	_	68	punct	_	SpaceAfter=No
70	.	_	PUNCT	_	_	61	punct	_	_

# newdoc id = 2015_CS4311_3.2.2.6_Req56
# sent_id = 181
# text = The FPMS shall obtain the list of airports from the airport.xml file upon initialization of the system.
1	The	_	DET	_	_	2	det	_	_
2	FPMS	_	PROPN	_	_	4	nsubj	_	_
3	shall	_	AUX	_	_	4	aux	_	_
4	obtain	_	VERB	_	_	0	root	_	_
5	the	_	DET	_	_	6	det	_	_
6	list	_	NOUN	_	_	4	obj	_	_
7	of	_	ADP	_	_	8	case	_	_
8	airports	_	NOUN	_	_	6	nmod	_	_
9	from	_	ADP	_	_	11	case	_	_
10	the	_	DET	_	_	11	det	_	_
11	airport.xml	_	SYM	_	_	4	obl	_	_
12	file	_	NOUN	_	_	11	compound	_	_
13	upon	_	ADP	_	_	14	case	_	_
14	initialization	_	NOUN	_	_	4	obl	_	_
15	of	_	ADP	_	_	17	case	_	_
16	the	_	DET	_	_	17	det	_	_
17	system	_	NOUN	_	_	14	nmod	_	SpaceAfter=No
18	.	_	PUNCT	_	_	4	punct	_	_

# newdoc id = 2006_eirenesys15_9.1.4
# sent_id = 173
# text = Characters * and # may be used locally to gain access to special facilities such as short code dialling.
1	Characters	_	NOUN	_	_	7	nsubj:pass	_	_
2	*	_	SYM	_	_	1	appos	_	_
3	and	_	CCONJ	_	_	4	cc	_	_
4	#	_	SYM	_	_	2	conj	_	_
5	may	_	AUX	_	_	7	aux	_	_
6	be	_	AUX	_	_	7	aux:pass	_	_
7	used	_	VERB	_	_	0	root	_	_
8	locally	_	ADV	_	_	7	advmod	_	_
9	to	_	PART	_	_	10	mark	_	_
10	gain	_	VERB	_	_	7	xcomp	_	_
11	access	_	NOUN	_	_	10	obj	_	_
12	to	_	ADP	_	_	14	case	_	_
13	special	_	ADJ	_	_	14	amod	_	_
14	facilities	_	NOUN	_	_	11	nmod	_	_
15	such	_	ADP	_	_	19	case	_	_
16	as	_	ADP	_	_	15	fixed	_	_
17	short	_	ADJ	_	_	18	amod	_	_
18	code	_	NOUN	_	_	19	compound	_	_
19	dialling	_	NOUN	_	_	14	nmod	_	SpaceAfter=No
20	.	_	PUNCT	_	_	7	punct	_	_

# sent_id = 174
# text = However, these arrangements do not form part of the network numbering plan. (I)
1	However	_	ADV	_	_	7	advmod	_	SpaceAfter=No
2	,	_	PUNCT	_	_	1	punct	_	_
3	these	_	DET	_	_	4	det	_	_
4	arrangements	_	NOUN	_	_	7	nsubj	_	_
5	do	_	AUX	_	_	7	aux	_	_
6	not	_	PART	_	_	7	advmod	_	_
7	form	_	VERB	_	_	0	root	_	_
8	part	_	NOUN	_	_	7	obj	_	_
9	of	_	ADP	_	_	13	case	_	_
10	the	_	DET	_	_	13	det	_	_
11	network	_	NOUN	_	_	13	nmod	_	_
12	numbering	_	NOUN	_	_	13	compound	_	_
13	plan	_	NOUN	_	_	8	nmod	_	SpaceAfter=No
14	.	_	PUNCT	_	_	7	punct	_	_
15	(	_	PUNCT	_	_	16	punct	_	SpaceAfter=No
16	I	_	ADV	_	_	7	advmod	_	SpaceAfter=No
17	)	_	PUNCT	_	_	16	punct	_	_

# newdoc id = 2001_hats_3.3.1_SRSreq157
# sent_id = 192
# text = The HATS-GUI shall display 1,000,000 node SDTs in the same amount of time, plus or minus two seconds, as it takes to display a 10,000 node SDT.
1	The	_	DET	_	_	4	det	_	_
2	HATS	_	PROPN	_	_	4	nmod	_	SpaceAfter=No
3	-	_	PUNCT	_	_	4	punct	_	SpaceAfter=No
4	GUI	_	NOUN	_	_	6	nsubj	_	_
5	shall	_	AUX	_	_	6	aux	_	_
6	display	_	VERB	_	_	0	root	_	_
7	1,000,000	_	NUM	_	_	8	nummod	_	_
8	node	_	NOUN	_	_	9	nmod	_	_
9	SDTs	_	NOUN	_	_	6	obj	_	_
10	in	_	ADP	_	_	13	case	_	_
11	the	_	DET	_	_	13	det	_	_
12	same	_	ADJ	_	_	13	amod	_	_
13	amount	_	NOUN	_	_	6	obl	_	_
14	of	_	ADP	_	_	15	case	_	_
15	time	_	NOUN	_	_	13	nmod	_	SpaceAfter=No
16	,	_	PUNCT	_	_	21	punct	_	_
17	plus	_	ADP	_	_	21	cc	_	_
18	or	_	CCONJ	_	_	19	cc	_	_
19	minus	_	ADP	_	_	17	conj	_	_
20	two	_	NUM	_	_	21	nummod	_	_
21	seconds	_	NOUN	_	_	13	conj	_	SpaceAfter=No
22	,	_	PUNCT	_	_	21	punct	_	_
23	as	_	SCONJ	_	_	25	mark	_	_
24	it	_	PRON	_	_	25	nsubj	_	_
25	takes	_	VERB	_	_	13	acl:relcl	_	_
26	to	_	PART	_	_	27	mark	_	_
27	display	_	VERB	_	_	25	xcomp	_	_
28	a	_	DET	_	_	31	det	_	_
29	10,000	_	NUM	_	_	30	nummod	_	_
30	node	_	NOUN	_	_	31	nmod	_	_
31	SDT	_	NOUN	_	_	27	obj	_	SpaceAfter=No
32	.	_	PUNCT	_	_	6	punct	_	_

# newdoc id = 2002_evlacorr_3.1.2.3
# sent_id = 159
# text = Security - Network routers/switches shall be employed at the MCCCEVLA M&C interface level (or higher) to protect the MCCC from unauthorized access and irrelevant network traffic.
1	Security	_	NOUN	_	_	0	root	_	_
2	-	_	PUNCT	_	_	1	punct	_	_
3	Network	_	NOUN	_	_	4	compound	_	_
4	routers	_	NOUN	_	_	9	nsubj:pass	_	SpaceAfter=No
5	/	_	SYM	_	_	6	cc	_	SpaceAfter=No
6	switches	_	NOUN	_	_	4	conj	_	_
7	shall	_	AUX	_	_	9	aux	_	_
8	be	_	AUX	_	_	9	aux:pass	_	_
9	employed	_	VERB	_	_	1	parataxis	_	_
10	at	_	ADP	_	_	16	case	_	_
11	the	_	DET	_	_	16	det	_	_
12	MCCC	_	NOUN	_	_	15	compound	_	SpaceAfter=No
13	EVLA	_	PROPN	_	_	14	nmod	_	_
14	M&C	_	NOUN	_	_	12	nmod	_	_
15	interface	_	NOUN	_	_	16	nmod	_	_
16	level	_	NOUN	_	_	9	obl	_	_
17	(	_	PUNCT	_	_	19	punct	_	SpaceAfter=No
18	or	_	CCONJ	_	_	19	cc	_	_
19	higher	_	ADJ	_	_	16	conj	_	SpaceAfter=No
20	)	_	PUNCT	_	_	19	punct	_	_
21	to	_	PART	_	_	22	mark	_	_
22	protect	_	VERB	_	_	9	xcomp	_	_
23	the	_	DET	_	_	24	det	_	_
24	MCCC	_	NOUN	_	_	22	obj	_	_
25	from	_	ADP	_	_	27	case	_	_
26	unauthorized	_	ADJ	_	_	27	amod	_	_
27	access	_	NOUN	_	_	24	nmod	_	_
28	and	_	CCONJ	_	_	31	cc	_	_
29	irrelevant	_	ADJ	_	_	31	amod	_	_
30	network	_	NOUN	_	_	31	compound	_	_
31	traffic	_	NOUN	_	_	27	conj	_	SpaceAfter=No
32	.	_	PUNCT	_	_	1	punct	_	_

# newdoc id = 2002_evlaback_3.2.2.7
# sent_id = 53
# text = Data Invalid – The BE shall replace all invalid data with zero values.
1	Data	_	NOUN	_	_	0	root	_	_
2	Invalid	_	ADJ	_	_	1	amod	_	_
3	–	_	PUNCT	_	_	1	punct	_	_
4	The	_	DET	_	_	5	det	_	_
5	BE	_	NOUN	_	_	7	nsubj	_	_
6	shall	_	AUX	_	_	7	aux	_	_
7	replace	_	VERB	_	_	1	parataxis	_	_
8	all	_	DET	_	_	10	det	_	_
9	invalid	_	ADJ	_	_	10	amod	_	_
10	data	_	NOUN	_	_	7	obj	_	_
11	with	_	ADP	_	_	13	case	_	_
12	zero	_	NUM	_	_	13	compound	_	_
13	values	_	NOUN	_	_	10	nmod	_	SpaceAfter=No
14	.	_	PUNCT	_	_	1	punct	_	_

